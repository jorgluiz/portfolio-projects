diff --git a/alteracoes.patch b/alteracoes.patch
index d37e4fd..e69de29 100644
--- a/alteracoes.patch
+++ b/alteracoes.patch
@@ -1,764 +0,0 @@
-diff --git a/changes.patch b/changes.patch
-deleted file mode 100644
-index cfe912e..0000000
---- a/changes.patch
-+++ /dev/null
-@@ -1,633 +0,0 @@
--diff --git a/src/components/globalStyles.js b/src/components/globalStyles.js
--index a35a938..ee72260 100644
----- a/src/components/globalStyles.js
--+++ b/src/components/globalStyles.js
--@@ -16,4 +16,6 @@ export const GlobalStyle = createGlobalStyle`
--     text-decoration: none;
--     color: inherit;
--   }
--+  
-- `;
--+
--diff --git a/src/components/layout/sideBar/index.jsx b/src/components/layout/sideBar/index.jsx
--index 96ec30e..0ca0d81 100644
----- a/src/components/layout/sideBar/index.jsx
--+++ b/src/components/layout/sideBar/index.jsx
--@@ -9,32 +9,34 @@ import { Containerfixed, Container, Menu, XContainer, Bar, DiagonalOne, Diagonal
-- 
-- const SideBar = () => {
--   const { isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
---
---  const [isLoaded, setIsLoaded] = useState(false);
--+  console.log(isHamburguerOpen, "isHamburguerOpenisHamburguerOpenisHamburguerOpenisHamburguerOpen");
--   const [activeLink, setActiveLink] = useState('/'); // Estado para armazenar o link ativo
--+  console.log(activeLink, "activeLink activeLink activeLink");
--   const router = useRouter(); // Hook para pegar a rota atual
-- 
--   useEffect(() => {
---    setIsLoaded(true);
--     setActiveLink(router.pathname); // Atualiza o estado com a rota atual
--     console.log(router.pathname);
--   }, [router.pathname]); // Executa sempre que a rota mudar
-- 
--+  const goHome = () => {
--+    router.push('/');
--+    // setIsHamburguerOpen(prevState => !prevState);
--+  };
-- 
--   return (
--     <Containerfixed isHamburguerOpen={isHamburguerOpen}>
--       {isHamburguerOpen &&
---        <XContainer onClick={() => setIsHamburguerOpen(!isHamburguerOpen)}>
--+        <XContainer onClick={() => setIsHamburguerOpen(prevState => !prevState)}>
--           <DiagonalOne />
--           <DiagonalTwo />
--         </XContainer>
--       }
--       <Container>
---        <Link href="/">
---          <div style={{ display: "flex", justifyContent: "center", alignItems: "center", border: "solid 2px #243b53", borderRadius: '50%', width: "160px", height: "160px", marginTop: "40px" }}>
---            <Image src={perfil} width={150} height={150} style={{ borderRadius: '50%' }} className="profile-image" alt="img" />
---          </div>
---        </Link>
--+        <div onClick={() => goHome()} style={{ display: "flex", justifyContent: "center", alignItems: "center", border: "solid 2px #243b53", borderRadius: '50%', width: "160px", height: "160px", marginTop: "40px", cursor: "pointer" }}>
--+          <Image src={perfil} width={150} height={150} style={{ borderRadius: '50%' }} className="profile-image" alt="img" />
--+        </div>
--+
--         <h3 style={{ color: "#d1dfed" }}>Jorge Luiz de Medeiros e Silva Jr</h3>
--         <p style={{ color: "#bcccdc", fontSize: "20px" }}>Web Developer</p>
--         <div style={{ width: "260px", border: "solid 1px #243B53", marginTop: "20px" }}></div>
--@@ -42,17 +44,17 @@ const SideBar = () => {
--           <ul>
--             <li>
--               <Link href="/">
---                <span onClick={() => setActiveLink('/sobre')} className={activeLink === '/' ? 'active' : ''}>Home</span>
--+                <span onClick={() => { setIsHamburguerOpen(prevState => !prevState); }} className={activeLink === '/' ? 'active' : ''}>Home</span>
--               </Link>
--             </li>
--             <li>
--               <Link href="/sobre">
---                <span onClick={() => setActiveLink('/sobre')} className={activeLink === '/sobre' ? 'active' : ''}>Sobre</span>
--+                <span onClick={() => { setIsHamburguerOpen(prevState => !prevState); }} className={activeLink === '/sobre' ? 'active' : ''}>Sobre</span>
--               </Link>
--             </li>
--             <li>
--               <Link href="/projetos">
---                <span onClick={() => setActiveLink('/projetos')} className={activeLink === '/projetos' ? 'active' : ''}>Projetos</span>
--+                <span onClick={() => { setIsHamburguerOpen(prevState => !prevState); }} className={activeLink === '/projetos' ? 'active' : ''}>Projetos</span>
--               </Link>
--             </li>
--           </ul>
--diff --git a/src/components/layout/sideBar/styles.js b/src/components/layout/sideBar/styles.js
--index 96f8775..2231c16 100644
----- a/src/components/layout/sideBar/styles.js
--+++ b/src/components/layout/sideBar/styles.js
--@@ -14,6 +14,12 @@ export const Containerfixed = styled.div`
--   transform: translateX(0); /* Posição inicial */
--   border-top-right-radius: 50px;
-- 
--+  * {  /* Aplica a todos os elementos dentro de VideoContainer */
--+      /* Remover realce azul no toque (Mobile e WebKit) */
--+        -webkit-tap-highlight-color: transparent;
--+        -webkit-focus-ring-color: transparent;
--+    }
--+
--   @media (max-width: 1250px) {
--     /* Alterna para 'fixed' em telas menores para remover o espaço quando o sidebar é oculto */
--     position: fixed;
--@@ -87,4 +93,4 @@ export const DiagonalOne = styled(Bar)`
-- 
-- export const DiagonalTwo = styled(Bar)`
--   transform: rotate(-45deg);
---`;
--+`;
--\ No newline at end of file
--diff --git a/src/pages/projetos/carousel/index.jsx b/src/pages/projetos/carousel/index.jsx
--index ca6ad9c..ca419d4 100644
----- a/src/pages/projetos/carousel/index.jsx
--+++ b/src/pages/projetos/carousel/index.jsx
--@@ -40,7 +40,7 @@ const Carousel = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Carousel de Imagens com Controles Personalizados - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://carousel.up.railway.app/" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             {isToggleOpen && (
--               <>
--diff --git a/src/pages/projetos/catalogo/index.jsx b/src/pages/projetos/catalogo/index.jsx
--index 6b61b03..1e1620f 100644
----- a/src/pages/projetos/catalogo/index.jsx
--+++ b/src/pages/projetos/catalogo/index.jsx
--@@ -40,7 +40,7 @@ const Carousel = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Catálogo de Carros - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/front-end/catalogo" target="_blank">🌎 Link do Projeto</a>
--             </P>
-- 
--             {isToggleOpen && (
--diff --git a/src/pages/projetos/cursoOnline/index.jsx b/src/pages/projetos/cursoOnline/index.jsx
--deleted file mode 100644
--index 6ea9368..0000000
----- a/src/pages/projetos/cursoOnline/index.jsx
--+++ /dev/null
--@@ -1,115 +0,0 @@
---import { useState } from "react";
---import Main from "@/components/layout/main";
---import SideBar from "@/components/layout/sideBar";
---import Header from "@/components/layout/header";
---import Head from "next/head";
---import { ContainerLayout } from "@/components/home";
---
---import { Container, P, H3, Li, Ul, H4 } from "@/components/projetos/catalogo/styles";
---
---const CursoOline = () => {
---  const [isToggleOpen, setIsToggleOpen] = useState(false);
---
---  return (
---    <>
---      <Head>
---        {/* <!-- Primary Meta Tags --> */}
---        <title>Criação de Plataforma EAD com Pagamentos Integrados e Acesso Protegido</title>
---        <meta name="title" content="Criação de Plataforma EAD com Pagamentos Integrados e Acesso Protegido" />
---        <meta name="description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
---
---        {/* <!-- Open Graph / Facebook --> */}
---        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
---        <meta property="og:type" content="website" />
---        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/cursoOnline" />
---        <meta property="og:title" content="Criação de Plataforma EAD com Pagamentos Integrados e Acesso Protegido" />
---        <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
---        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/cursoOnline.jpg" />
---
---        {/* <!-- Twitter --> */}
---        <meta property="twitter:card" content="summary_large_image" />
---        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/cursoOnline" />
---        <meta property="twitter:title" content="Criação de Plataforma EAD com Pagamentos Integrados e Acesso Protegido" />
---        <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
---        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/cursoOnline.jpg" />
---      </Head>
---      <ContainerLayout>
---        <SideBar></SideBar>
---        <Header></Header>
---        <Main>
---          <Container>
---            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Vendas de cursos - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
---            <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-work-developed-d98bf30e877e.herokuapp.com/front-end/catalogo" target="_blank">🌎 Link do Projeto</a>
---            </P>
---            {isToggleOpen && (
---              <>
---                <div>
---                  <P><strong>📌 Visão Geral</strong></P>
---                  <P>Este projeto é uma plataforma de cursos online onde os usuários podem <strong>se cadastrar, efetuar pagamentos e acessar conteúdos exclusivos</strong>. O sistema garante que apenas usuários autenticados e com pagamento confirmado tenham acesso às aulas, proporcionando uma experiência fluida e segura.</P>
---                  <h2>🛠 Tecnologias Utilizadas</h2><br />
---                  <H4>🔹 Frontend (React.js + Vite)</H4>
---                  <Ul>
---                    <Li><strong>React.js →</strong> Biblioteca para construção da interface interativa e reativa.</Li>
---                    <Li><strong>React Router DOM →</strong> Gerenciamento de rotas e navegação protegida.</Li>
---                    <Li><strong>Context API →</strong> Gerenciamento de estado para autenticação e status de pagamento.</Li>
---                    <Li><strong>Axios →</strong> Consumo da API para autenticação e pagamentos.</Li>
---                    <Li><strong>JWT-Decode →</strong> Decodificação do token JWT para validação da sessão do usuário.</Li>
---                    <Li><strong>Styled Components →</strong> Estilização dinâmica com CSS-in-JS.</Li>
---                    <Li><strong>Socket.io Client →</strong> Comunicação em tempo real (possível uso para notificações ou atualizações instantâneas).</Li>
---                    {/* <Li><strong>Jest →</strong> Testes unitários para garantir a qualidade do código.</Li> */}
---                    <Li><strong>LocalStorage →</strong> Persistência de autenticação e pagamento sem necessidade de login repetido.</Li>
---                  </Ul>
---                  <H4>🔹 Backend (Node.js + Express)</H4>
---                  <Ul>
---                    <Li><strong>Node.js →</strong> Para construção do backend.</Li>
---                    <Li><strong>Express → </strong> Framework para criar as rotas e a estrutura do servidor.</Li>
---                    <Li><strong>PostgreSQL →</strong> Banco de dados para armazenar usuários, pagamentos e cursos.</Li>
---                    <Li><strong>JWT (JSON Web Token) →</strong> Autenticação segura via token.</Li>
---                    <Li><strong>Bcrypt →</strong> Hashing de senhas para segurança dos usuários.</Li>
---                    <Li><strong>Pagar.me API →</strong> Processamento de pagamentos via PIX, cartão e boleto.</Li>
---                    <Li><strong>Socket.io →</strong> Para comunicação em tempo real e envio de notificações aos usuários.</Li>
---                    <Li><strong>Axios →</strong> Para realizar requisições HTTP dentro do sistema.</Li>
---                    <Li><strong>CORS →</strong> Para permitir requisições de diferentes origens.</Li>
---                    <Li><strong>Body-parser →</strong> Para lidar com os dados das requisições no formato JSON.</Li>
---                    <Li><strong>Dotenv →</strong> Para gerenciamento de variáveis de ambiente.</Li>
---                    <Li><strong>pg →</strong> Biblioteca para conectar e interagir com o PostgreSQL.</Li>
---                  </Ul>
---                  <h2>🚀 Funcionalidades Principai</h2><br />
---                  <h3>🔑 Autenticação Segura</h3><br />
---                  <Ul>
---                    <Li>✅ Cadastro e login com <strong>senhas protegidas (Bcrypt).</strong></Li>
---                    <Li>✅ Autenticação via <strong>JWT</strong>, garantindo sessões seguras.</Li>
---                    <Li>✅ Persistência de login via <strong>LocalStorage</strong>.</Li>
---                    <Li>✅ Decodificação do JWT com <strong>jwt-decode</strong> para validar sessão.</Li>
---                  </Ul>
---                  <h2>💳 Pagamento e Acesso a Cursos</h2><br />
---                  <Ul>
---                    <Li>✅ Integração com <strong>Pagar.me API</strong> para processar pagamentos via <strong>PIX, cartão e boleto</strong>.</Li>
---                    <Li>✅ Controle de acesso a vídeos com base no <strong>status de pagamento</strong>.</Li>
---                    <Li>✅ Redirecionamento automático para página de pagamento se necessário.</Li>
---                  </Ul>
---                  <h2>📡 Comunicação em Tempo Real</h2><br />
---                  <Ul>
---                    <Li>✅ <strong>Socket.io Client →</strong> Possível implementação de notificações em tempo real, chat entre usuários ou atualizações automáticas de status.</Li>
---                  </Ul>
---                  <h2>🔄 Experiência de Usuário Aprimorada</h2><br />
---                  <Ul>
---                    <Li>✅ UI responsiva e estilizada com <strong>Styled Components</strong>.</Li>
---                    <Li>✅ <strong>Mensagens de erro amigáveis</strong> para login e pagamento.</Li>
---                    <Li>✅ <strong>Feedback visual</strong> para status de pagamento.</Li>
---                  </Ul>
---                  <Ul>
---                    <Li><strong>Responsividade:</strong> A interface foi projetada para funcionar bem em dispositivos móveis e desktops, garantindo uma boa experiência de usuário em todas as telas.</Li>
---                  </Ul>
---                </div>
---              </>
---            )}
---          </Container>
---        </Main>
---      </ContainerLayout>
---    </>
---  );
---};
---
---export default CursoOline;
--\ No newline at end of file
--diff --git a/src/pages/projetos/dataAnalysis/index.jsx b/src/pages/projetos/dataAnalysis/index.jsx
--deleted file mode 100644
--index 2453a4e..0000000
----- a/src/pages/projetos/dataAnalysis/index.jsx
--+++ /dev/null
--@@ -1,94 +0,0 @@
---import { useState } from "react";
---import Main from "@/components/layout/main";
---import SideBar from "@/components/layout/sideBar";
---import Header from "@/components/layout/header";
---import Head from "next/head";
---import { ContainerLayout } from "@/components/home";
---
---import { Container, P, H3, Li, Ul, H4 } from "@/components/projetos/dataAnalysis/styles";
---
---const Carousel = () => {
---  const [isToggleOpen, setIsToggleOpen] = useState(false);
---
---  return (
---    <>
---      <Head>
---        {/* <!-- Primary Meta Tags --> */}
---        <title>Projeto de Coleta e Análise de Dados no Twitter com IA – Puppeteer e OpenAI</title>
---        <meta name="title" content="Projeto de Coleta e Análise de Dados no Twitter com IA – Puppeteer e OpenAI" />
---        <meta name="description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
---
---        {/* <!-- Open Graph / Facebook --> */}
---        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
---        <meta property="og:type" content="website" />
---        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysis" />
---        <meta property="og:title" content="Projeto de Coleta e Análise de Dados no Twitter com IA – Puppeteer e OpenAI" />
---        <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
---        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />
---
---        {/* <!-- Twitter --> */}
---        <meta property="twitter:card" content="summary_large_image" />
---        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysis" />
---        <meta property="twitter:title" content="Projeto de Coleta e Análise de Dados no Twitter com IA – Puppeteer e OpenAI" />
---        <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
---        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />
---      </Head>
---      <ContainerLayout>
---        <SideBar></SideBar>
---        <Header></Header>
---        <Main>
---          <Container>
---            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Análise Completa do Projeto de Coleta e Análise de Dados no Twitter usando Puppeteer e OpenAI - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
---            <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
---            </P>
---            {isToggleOpen && (
---              <>
---                <div>
---                  <P><strong>Visão Geral</strong></P>
---                  <P>Esse projeto desenvolve uma aplicação de coleta e análise de dados de mídias sociais (Twitter, especificamente) com foco em detecção de sentimentos e tendências. A aplicação integra diversas tecnologias para realizar web scraping, processar dados de texto, e apresentar resultados com uma interface interativa. Esse sistema demonstra um fluxo completo desde a captura até a análise e exibição dos dados, incluindo controles para carregamento, rolagem e renderização dos dados em uma página web.</P>
---                  <H3>Funcionalidades e Fluxo da Aplicação</H3>
---                  <Ul>
---                    <Li><strong>Web Scraping e Automação:</strong> A função de rolagem na página simula o comportamento de um usuário, carregando mais dados conforme necessário, e usa o Puppeteer para rolar a página em incrementos aleatórios, contribuindo para uma experiência mais autêntica de scraping e prevenindo bloqueios de bots.</Li>
---                    <Li><strong>Análise de Sentimento:</strong> Com o OpenAI, o sistema faz a análise do sentimento dos dados coletados, categorizando-os em positivo, negativo ou neutro. Esse uso de IA facilita insights valiosos sobre o conteúdo e o humor predominante das postagens coletadas.</Li>
---                    <Li><strong>Integração de API:</strong> A OpenAI API é utilizada para processamento de linguagem natural (NLP) e análise de texto, enquanto a aplicação usa a Fetch API para realizar requisições assíncronas e processar as respostas do servidor, manipulando a interface de acordo com os resultados.</Li>
---                  </Ul>
---                  <H3>Tecnologias e Bibliotecas Utilizadas no Projeto</H3>
---                  <Ul>
---                    <Li className="list-style-type"><strong>1. Express</strong> Express é utilizado para configurar o servidor backend, que gerencia as requisições HTTP e responde com dados de análise ou resultados de scraping. Express facilita a criação de rotas e o gerenciamento das respostas do servidor de maneira eficiente.</Li>
---                    <Li className="list-style-type"><strong>2. Puppeteer e Puppeteer-Extra:</strong></Li>
---                    <Li><strong>Puppeteer-Extra:</strong> permite customizar o comportamento do Puppeteer, enquanto o <strong>puppeteer</strong> em si é uma biblioteca que automatiza o Chrome/Chromium, simulando ações de um usuário no navegador.</Li>
---                    <Li>O projeto inclui o <strong>StealthPlugin</strong> (plugin de stealth) de Puppeteer-Extra, que ajuda a contornar bloqueios de bot por disfarçar o comportamento automatizado, tornando o scraper mais robusto para operações em sites com mecanismos anti-bot.</Li>
---                    <Li className="list-style-type"><strong>3. dotenv</strong>A biblioteca dotenv é usada para gerenciar variáveis de ambiente, como a chave de API da OpenAI e outras configurações sensíveis, evitando que credenciais apareçam no código-fonte e melhorando a segurança do projeto.</Li>
---                    <Li className="list-style-type"><strong>4. fs (File System):</strong>A biblioteca nativa do Node.js fs permite a manipulação de arquivos diretamente do backend, facilitando a criação, leitura e gravação de arquivos no sistema. Neste projeto, fs é essencial para gerenciar arquivos de dados coletados, arquivamento e descompactação.</Li>
---                    <Li className="list-style-type"><strong>5. archiver</strong>A biblioteca archiver facilita a criação de arquivos ZIP, útil para compactar grandes volumes de dados coletados e prepará-los para armazenamento ou download.</Li>
---                    <Li className="list-style-type"></Li>
---                    <Li className="list-style-type"><strong>6. unzipper:</strong> unzipper é utilizado para descompactar arquivos ZIP, permitindo que o sistema extraia e processe arquivos previamente compactados, o que é vantajoso para manipulação de dados e backup de resultados.</Li>
---                    <Li className="list-style-type"><strong>7. path:</strong> A biblioteca nativa path do Node.js ajuda a trabalhar com diretórios e caminhos de arquivos, essencial para a organização de arquivos e para lidar com caminhos de forma segura e consistente entre diferentes sistemas operacionais.</Li>
---                    <Li className="list-style-type"></Li>
---                    <Li className="list-style-type"><strong>8. open:</strong> A biblioteca open é usada para abrir URLs, arquivos ou aplicativos diretamente do backend. No contexto deste projeto, isso pode ser útil para facilitar a navegação ou abrir relatórios e visualizações de dados após a análise.</Li>
---                    <Li className="list-style-type"><strong>9. OpenAI:</strong> O pacote openai integra a API de OpenAI ao projeto, permitindo a análise de sentimentos e processamento de linguagem natural (NLP). A integração com a API GPT possibilita que o sistema interprete os dados coletados, categorizando e oferecendo insights baseados no conteúdo textual.</Li>
---                    <Li className="list-style-type"><strong>10. HBS:</strong> (Handlebars) é um motor de templates utilizado para gerar HTML dinâmico no servidor.</Li>
---                    <Li className="list-style-type"><strong>11. Heroku:</strong> A aplicação é configurada para rodar no <strong>Heroku</strong>, utilizando variáveis de ambiente e configurações específicas para servidores sem interface gráfica, como o uso de <strong>Puppeteer</strong> em modo <strong>headless</strong> e com ajustes no sandbox para compatibilidade com Heroku.</Li>
---                    <H3>Arquitetura e Organização do Projeto com as Novas Tecnologias</H3>
---                    <P>Com essas tecnologias e bibliotecas, o projeto é organizado para oferecer um fluxo de coleta, processamento, análise e visualização dos dados com alto nível de automação e segurança:</P>
---                    <Li className="list-style-type"><strong>Automação e Stealth com Puppeteer:</strong> A biblioteca <span>puppeteer-extra</span> com o StealthPlugin possibilita uma coleta de dados robusta, burlando alguns mecanismos anti-bot e permitindo uma coleta mais confiável.</Li>
---                    <Li className="list-style-type"><strong>Processamento e Gerenciamento de Arquivos:</strong> <span>fs</span>, <span>archiver</span> e <span>unzipper</span> oferecem um ecossistema completo para manipulação de arquivos, desde a compactação até a extração e leitura, o que é valioso para manter os dados organizados e facilitar o arquivamento.</Li>
---                    <Li className="list-style-type"><strong>API de OpenAI para Análise Avançada:</strong> Integrar OpenAI para análise de sentimentos expande as capacidades analíticas do projeto, aproveitando o processamento de linguagem natural para categorizar sentimentos e detectar tendências.</Li>
---                    <Li className="list-style-type"><strong>Gerenciamento de Variáveis de Ambiente com dotenv:</strong></Li>
---                    <Li className="list-style-type"><strong></strong> Variáveis sensíveis, como chaves de API, são tratadas de maneira segura com <span>dotenv</span>, essencial para ambientes de produção.</Li>
---                    <Li className="list-style-type"><strong></strong></Li>
---                  </Ul>
---                  <H3>Conclusão</H3>
---                  <P>Esse projeto é uma <strong>API</strong> e <strong>servidor que renderiza páginas estática</strong>, solução completa para a coleta e análise de sentimentos em mídias sociais. A combinação de tecnologias — desde o Puppeteer para scraping, OpenAI para NLP, e Express para o backend — resulta em uma ferramenta robusta para insights de mídia social em tempo real. </P>
---                </div>
---              </>
---            )}
---          </Container>
---        </Main>
---      </ContainerLayout>
---    </>
---  );
---};
---
---export default Carousel;
--\ No newline at end of file
--diff --git a/src/pages/projetos/imageGenerator/index.jsx b/src/pages/projetos/imageGenerator/index.jsx
--index a5d3698..b7f1644 100644
----- a/src/pages/projetos/imageGenerator/index.jsx
--+++ b/src/pages/projetos/imageGenerator/index.jsx
--@@ -40,7 +40,7 @@ const Portfolio = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Gerador de Imagens com Visualização Ampliada - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://image-generation.up.railway.app/home" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             {isToggleOpen && (
--               <>
--diff --git a/src/pages/projetos/index.jsx b/src/pages/projetos/index.jsx
--index ddb6a6d..b0f589d 100644
----- a/src/pages/projetos/index.jsx
--+++ b/src/pages/projetos/index.jsx
--@@ -83,7 +83,7 @@ const Projetos = () => {
--         <meta property="twitter:title" content="Portfólio de Projetos Web | Tecnologias Modernas" />
--         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
--         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/perfil.jpg" />
---      </Head>;
--+      </Head>
-- 
--       {!isLoaded ? null : (
--         <ContainerLayout>
--@@ -168,7 +168,7 @@ const Projetos = () => {
--                   </Link>
--                 </div>
--                 <div className="container-item">
---                  <Link href="/projetos/dataAnalysis">
--+                  <Link href="/projetos/dataAnalysisTwitter">
--                     <Image src={analyzeFeelings} placeholder="blur" blurDataURL={analyzeImgBlur} alt="img" />
--                     <div className="item">
--                       <div className="sub-item">
--@@ -236,7 +236,7 @@ const Projetos = () => {
--                   </Link>
--                 </div>
--                 <div className="container-item">
---                  <Link href="/projetos/youtube">
--+                  <Link href="/projetos/playerVideoCustomizado">
--                     <Image src={youtube} placeholder="blur" blurDataURL={youtubeImgBlur} alt="img" />
--                     <div className="item">
--                       <div className="sub-item">
--@@ -310,7 +310,7 @@ const Projetos = () => {
--                   </Link>
--                 </div>
--                 <div className="container-item">
---                  <Link href="/projetos/cursoOnline">
--+                  <Link href="/projetos/vendasCurso">
--                     <Image src={cursoOline} placeholder="blur" blurDataURL={cursoOnlineImgBlur} alt="img" />
--                     <div className="item">
--                       <div className="sub-item">
--diff --git a/src/pages/projetos/portfolio/index.jsx b/src/pages/projetos/portfolio/index.jsx
--index 8143310..7e558b4 100644
----- a/src/pages/projetos/portfolio/index.jsx
--+++ b/src/pages/projetos/portfolio/index.jsx
--@@ -39,9 +39,12 @@ const Portfolio = () => {
--         <Header></Header>
--         <Main>
--           <Container>
---            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen01 ? setIsToggleOpen01(false) : setIsToggleOpen01(true)}>Projeto: Player de Vídeo Personalizado - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--+            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen01 ? setIsToggleOpen01(false) : setIsToggleOpen01(true)}>Projeto: Player de Vídeo Customizado - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-mobile" target="_blank">🌎 Link do Projeto mobile</a>
--+            </P>
--+            <P>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-desktop" target="_blank">🌎 Link do Projeto desktop</a>
--             </P>
--             {isToggleOpen01 && (
--               <>
--@@ -118,7 +121,7 @@ const Portfolio = () => {
--             {/* ---------------------------------------------------------------------------- */}
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen02 ? setIsToggleOpen02(false) : setIsToggleOpen02(true)}>Projeto: Catálogo de Carros  - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/front-end/catalogo" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             {isToggleOpen02 && (
--               <>
--diff --git a/src/pages/projetos/streamDolby/index.jsx b/src/pages/projetos/streamDolby/index.jsx
--index e6722ae..5e855a0 100644
----- a/src/pages/projetos/streamDolby/index.jsx
--+++ b/src/pages/projetos/streamDolby/index.jsx
--@@ -40,7 +40,7 @@ const Stripe = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Sistema de Controle e Visualização de Transmissões ao Vivo - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://dolby-io-streaming.up.railway.app" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             {isToggleOpen && (
--               <>
--diff --git a/src/pages/projetos/stripe/index.jsx b/src/pages/projetos/stripe/index.jsx
--index 6d9c7bb..55a882a 100644
----- a/src/pages/projetos/stripe/index.jsx
--+++ b/src/pages/projetos/stripe/index.jsx
--@@ -40,7 +40,7 @@ const Stripe = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Plataforma de Autenticação e Pagamentos com STRIPE - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://stripe.up.railway.app/login" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             {isToggleOpen && (
--               <>
--diff --git a/src/pages/projetos/youtube/index.jsx b/src/pages/projetos/youtube/index.jsx
--deleted file mode 100644
--index bf57911..0000000
----- a/src/pages/projetos/youtube/index.jsx
--+++ /dev/null
--@@ -1,112 +0,0 @@
---import { useState } from "react";
---import Main from "@/components/layout/main";
---import SideBar from "@/components/layout/sideBar";
---import Header from "@/components/layout/header";
---import Head from "next/head";
---import { ContainerLayout } from "@/components/home";
---
---import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/youtube/styles";
---
---const Portfolio = () => {
---  const [isToggleOpen, setIsToggleOpen] = useState(false);
---
---  return (
---    <>
---      <Head>
---        {/* <!-- Primary Meta Tags --> */}
---        <title>Player de Vídeo Personalizado com React.js – UI/UX Moderna e Funcionalidades Avançadas</title>
---        <meta name="title" content="Player de Vídeo Personalizado com React.js – UI/UX Moderna e Funcionalidades Avançadas" />
---        <meta name="description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
---
---        {/* <!-- Open Graph / Facebook --> */}
---        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
---        <meta property="og:type" content="website" />
---        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/youtube" />
---        <meta property="og:title" content="Player de Vídeo Personalizado com React.js – UI/UX Moderna e Funcionalidades Avançadas" />
---        <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
---        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/youtube.jpg" />
---
---        {/* <!-- Twitter --> */}
---        <meta property="twitter:card" content="summary_large_image" />
---        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/youtube" />
---        <meta property="twitter:title" content="Player de Vídeo Personalizado com React.js – UI/UX Moderna e Funcionalidades Avançadas" />
---        <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
---        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/youtube.jpg" />
---      </Head>
---      <ContainerLayout>
---        <SideBar></SideBar>
---        <Header></Header>
---        <Main>
---          <Container>
---            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Player de Vídeo Personalizado - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
---            <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
---            </P>
---            {isToggleOpen && (
---              <>
---                <div>
---                  <H3>Descrição Geral</H3>
---                  <P>Este projeto é um player de vídeo completo e interativo, desenvolvido com React.js, com funcionalidades que replicam a experiência imersiva de grandes plataformas de streaming, como YouTube e Netflix. Focado na facilidade de uso e personalização, ele oferece controle de volume, barra de progresso interativa, reprodução em lista (playlist) e configurações personalizáveis de qualidade e velocidade.</P>
---                  <H4>Objetivo</H4>
---                  <P>Criar uma experiência de reprodução de vídeo otimizada e acessível, com ênfase em uma interface de usuário <strong>(UI)</strong> intuitiva e interativa. Este player foi projetado para permitir uma navegação suave e intuitiva, enquanto oferece ao usuário controle total sobre a reprodução e personalização de sua experiência.</P>
---                  <H4>1. Principais Funcionalidades</H4>
---                  <Ul>
---                    <Li>Botões de play/pause, avançar para o próximo vídeo e repetir.</Li>
---                    <Li>Transição suave entre vídeos da playlist.</Li>
---                  </Ul>
---                  <H4>2. Barra de Progresso Personalizada</H4>
---                  <Ul>
---                    <Li>Permite ao usuário arrastar o playhead para avançar ou retroceder.</Li>
---                    <Li>Exibe tempo atual e duração total, com indicadores de horas, minutos e segundos.</Li>
---                  </Ul>
---                  <H4>3. Controle de Volume Avançado</H4>
---                  <Ul>
---                    <Li>Ajuste progressivo do volume com botão de mute e desmute.</Li>
---                    <Li>Indicador visual do volume (volume baixo, médio e mudo), atualizado dinamicamente.</Li>
---                  </Ul>
---                  <H4>4. Modo Tela Cheia e Miniatura</H4>
---                  <Ul>
---                    <Li>Alternância entre modos de tela cheia e minimizada.</Li>
---                    <Li>Ícones personalizáveis para indicar o status.</Li>
---                  </Ul>
---                  <H4>5. Configurações Personalizáveis</H4>
---                  <Ul>
---                    <Li>Opções para ajuste de qualidade, legendas e velocidade.</Li>
---                    <Li>Interface para exibir o menu de configurações com controles intuitivos.</Li>
---                  </Ul>
---                  <H4>Comentários e Playlist</H4>
---                  <Ul>
---                    <Li>Área para comentários abaixo do vídeo, criando um ambiente de interação.</Li>
---                    <Li>Playlist interativa à direita para navegação rápida entre vídeos relacionados.</Li>
---                  </Ul>
---                  <H3>UX</H3>
---                  <H4>Design Focado em Experiência do Usuário (UX)</H4>
---                  <Ul>
---                    <Li><strong>Acessibilidade e Facilidade de Navegação:</strong> A interface é projetada para ser intuitiva, com botões bem posicionados e funcionalidades facilmente acessíveis.</Li>
---                    <Li><strong>Experiência Visual e Interativa:</strong> Transições suaves e animações de hover que tornam o player visualmente agradável e responsivo às ações do usuário.</Li>
---                    <Li><strong>Layout Responsivo:</strong> Adaptado para uma experiência coesa em diferentes dispositivos, mantendo a estrutura organizada e eficiente em qualquer resolução.</Li>
---                  </Ul>
---                  <H3>UI</H3>
---                  <H4>Interface de Usuário (UI)</H4>
---                  <Ul>
---                    <Li><strong>Estética Profissional e Minimalista:</strong> Elementos visuais inspirados em plataformas populares, com ícones claros e uma paleta de cores neutra.</Li>
---                    <Li><strong>Elementos Interativos com Feedback Visual:</strong> Animações sutis e feedback imediato ao interagir com a barra de progresso, controles de volume e botões de reprodução.</Li>
---                  </Ul>
---                  <H3>Tecnologias Utilizadas</H3>
---                  <Ul>
---                    <Li>Frontend: <strong>React.js</strong></Li>
---                    <Li><strong>Funcionalidades de Vídeo:</strong> HTML5 Video API, com manipulação de eventos (onMouseMove, onProgress, etc.)</Li>
---                    <Li><strong>Estado e Controle de Contexto:</strong> Hooks personalizados e useRef para otimização de performance e gerenciamento do estado do player.</Li>
---                    <Li><strong>Controle de Volume e Progresso:</strong> useState, onClick, onChange e onMouseDown para controle preciso das ações do usuário.</Li>
---                  </Ul>
---                </div>
---              </>
---            )}
---          </Container>
---        </Main>
---      </ContainerLayout>
---    </>
---  );
---};
---
---export default Portfolio;
--\ No newline at end of file
--diff --git a/src/pages/projetos/ytAnalyseVideo/index.jsx b/src/pages/projetos/ytAnalyseVideo/index.jsx
--index 0c1dc26..3882764 100644
----- a/src/pages/projetos/ytAnalyseVideo/index.jsx
--+++ b/src/pages/projetos/ytAnalyseVideo/index.jsx
--@@ -40,7 +40,7 @@ const Ytformp3 = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Transcrever o áudio de vídeos do YouTube e resumir - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://yt-analyze-video-frontend.up.railway.app" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             <H3>Observação importante: para ter acesso backend, precisa ativar ngrok localmente!</H3>
--             {isToggleOpen && (
--diff --git a/src/pages/projetos/ytformp3/index.jsx b/src/pages/projetos/ytformp3/index.jsx
--index 3faafa9..1c0597c 100644
----- a/src/pages/projetos/ytformp3/index.jsx
--+++ b/src/pages/projetos/ytformp3/index.jsx
--@@ -40,7 +40,7 @@ const Ytformp3 = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Download de Áudio do YouTube - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://yt-download-mp3-frontend.up.railway.app/" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             <H3>Observação importante: para ter acesso backend, precisa ativar ngrok localmente!</H3>
--             {isToggleOpen && (
--diff --git a/src/pages/projetos/ytformp4Cloud/index.jsx b/src/pages/projetos/ytformp4Cloud/index.jsx
--index 15a1f08..563c0a0 100644
----- a/src/pages/projetos/ytformp4Cloud/index.jsx
--+++ b/src/pages/projetos/ytformp4Cloud/index.jsx
--@@ -40,8 +40,9 @@ const Ytformp4 = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: YouTube Video Downloader e combiner (fluent-ffmpeg) - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://ytmp4-frontend.up.railway.app" target="_blank">🌎 Link do Projeto</a>
--             </P>
--+            <H3>Estou usando server ngrok localmente para expor</H3>
--             {isToggleOpen && (
--               <>
--                 <div>
--diff --git a/src/pages/projetos/ytformp4Location/index.jsx b/src/pages/projetos/ytformp4Location/index.jsx
--index 288c505..0957b6f 100644
----- a/src/pages/projetos/ytformp4Location/index.jsx
--+++ b/src/pages/projetos/ytformp4Location/index.jsx
--@@ -40,7 +40,7 @@ const Ytformp4 = () => {
--           <Container>
--             <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Download de Vídeo do YouTube - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
--             <P>
---              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">🌎 Link do Projeto</a>
--+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://ytmp4-frontend.up.railway.app/" target="_blank">🌎 Link do Projeto</a>
--             </P>
--             <H3>Observação importante: para ter acesso backend, precisa ativar ngrok localmente!</H3>
--             {isToggleOpen && (
-diff --git a/public/sitemap-0.xml b/public/sitemap-0.xml
-index 13051ab..b89526f 100644
---- a/public/sitemap-0.xml
-+++ b/public/sitemap-0.xml
-@@ -1,19 +1,19 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:news="http://www.google.com/schemas/sitemap-news/0.9" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:mobile="http://www.google.com/schemas/sitemap-mobile/1.0" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
--<url><loc>https://portfolio-projects-production.up.railway.app</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/carousel</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/catalogo</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/cursoOnline</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/dataAnalysis</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/imageGenerator</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/portfolio</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/streamDolby</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/stripe</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/youtube</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytAnalyseVideo</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytformp3</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytformp4Cloud</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytformp4Location</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
--<url><loc>https://portfolio-projects-production.up.railway.app/sobre</loc><lastmod>2025-02-09T03:14:43.016Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/carousel</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/catalogo</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/dataAnalysisTwitter</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/imageGenerator</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/playerVideoCustomizado</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/portfolio</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/streamDolby</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/stripe</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/vendasCurso</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytAnalyseVideo</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytformp3</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytformp4Cloud</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/projetos/ytformp4Location</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-+<url><loc>https://portfolio-projects-production.up.railway.app/sobre</loc><lastmod>2025-03-12T02:40:24.317Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
- </urlset>
-\ No newline at end of file
-diff --git a/src/pages/projetos/dataAnalysisTwitter/index.jsx b/src/pages/projetos/dataAnalysisTwitter/index.jsx
-index 0ca6e7b..f37cfff 100644
---- a/src/pages/projetos/dataAnalysisTwitter/index.jsx
-+++ b/src/pages/projetos/dataAnalysisTwitter/index.jsx
-@@ -21,14 +21,14 @@ const Carousel = () => {
-         {/* <!-- Open Graph / Facebook --> */}
-         <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
-         <meta property="og:type" content="website" />
--        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysis" />
-+        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysisTwitter" />
-         <meta property="og:title" content="Projeto de Coleta e Análise de Dados no Twitter com IA – Puppeteer e OpenAI" />
-         <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
-         <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />
- 
-         {/* <!-- Twitter --> */}
-         <meta property="twitter:card" content="summary_large_image" />
--        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysis" />
-+        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysisTwitter" />
-         <meta property="twitter:title" content="Projeto de Coleta e Análise de Dados no Twitter com IA – Puppeteer e OpenAI" />
-         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
-         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />
-diff --git a/src/pages/projetos/playerVideoCustomizado/index.jsx b/src/pages/projetos/playerVideoCustomizado/index.jsx
-index adf0a95..bb8289a 100644
---- a/src/pages/projetos/playerVideoCustomizado/index.jsx
-+++ b/src/pages/projetos/playerVideoCustomizado/index.jsx
-@@ -21,14 +21,14 @@ const Portfolio = () => {
-         {/* <!-- Open Graph / Facebook --> */}
-         <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
-         <meta property="og:type" content="website" />
--        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/youtube" />
-+        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/playerVideoCustomizado" />
-         <meta property="og:title" content="Player de Vídeo Personalizado com React.js – UI/UX Moderna e Funcionalidades Avançadas" />
-         <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
-         <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/youtube.jpg" />
- 
-         {/* <!-- Twitter --> */}
-         <meta property="twitter:card" content="summary_large_image" />
--        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/youtube" />
-+        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/playerVideoCustomizado" />
-         <meta property="twitter:title" content="Player de Vídeo Personalizado com React.js – UI/UX Moderna e Funcionalidades Avançadas" />
-         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
-         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/youtube.jpg" />
-diff --git a/src/pages/projetos/vendasCurso/index.jsx b/src/pages/projetos/vendasCurso/index.jsx
-index 9b65e12..e0a055b 100644
---- a/src/pages/projetos/vendasCurso/index.jsx
-+++ b/src/pages/projetos/vendasCurso/index.jsx
-@@ -21,14 +21,14 @@ const CursoOline = () => {
-         {/* <!-- Open Graph / Facebook --> */}
-         <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
-         <meta property="og:type" content="website" />
--        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/cursoOnline" />
-+        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/vendasCurso" />
-         <meta property="og:title" content="Criação de Plataforma EAD com Pagamentos Integrados e Acesso Protegido" />
-         <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
-         <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/cursoOnline.jpg" />
- 
-         {/* <!-- Twitter --> */}
-         <meta property="twitter:card" content="summary_large_image" />
--        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/cursoOnline" />
-+        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/vendasCurso" />
-         <meta property="twitter:title" content="Criação de Plataforma EAD com Pagamentos Integrados e Acesso Protegido" />
-         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
-         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/cursoOnline.jpg" />
-diff --git a/src/pages/projetos/ytformp4Location/index.jsx b/src/pages/projetos/ytformp4Location/index.jsx
-index 0957b6f..a83b0c1 100644
---- a/src/pages/projetos/ytformp4Location/index.jsx
-+++ b/src/pages/projetos/ytformp4Location/index.jsx
-@@ -21,14 +21,14 @@ const Ytformp4 = () => {
-         {/* <!-- Open Graph / Facebook --> */}
-         <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
-         <meta property="og:type" content="website" />
--        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp4" />
-+        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp4Location" />
-         <meta property="og:title" content="Baixar Vídeos do YouTube em MP4 com Nosso Conversor" />
-         <meta property="og:description" content="Conheça meu portfólio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
-         <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/ytmp4.jpg" />
- 
-         {/* <!-- Twitter --> */}
-         <meta property="twitter:card" content="summary_large_image" />
--        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp4" />
-+        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp4Location" />
-         <meta property="twitter:title" content="Baixar Vídeos do YouTube em MP4 com Nosso Conversor" />
-         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
-         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp4.jpg" />
diff --git a/src/components/diariodev/arquiteturaMicroservices/index.jsx b/src/components/diariodev/arquiteturaMicroservices/index.jsx
index 9ad71b8..5861604 100644
--- a/src/components/diariodev/arquiteturaMicroservices/index.jsx
+++ b/src/components/diariodev/arquiteturaMicroservices/index.jsx
@@ -3,7 +3,7 @@ const ArquiteturaMicroservices = () => {
     fontFamily: 'Segoe UI, sans-serif',
     padding: '24px',
     maxWidth: '900px',
-    margin: '0 auto',
+    margin: '0 auto 40px',
     color: '#222',
     backgroundColor: '#f9f9f9',
     borderRadius: '12px',
@@ -51,7 +51,7 @@ const ArquiteturaMicroservices = () => {
     padding: '32px',
     borderRadius: '12px',
     maxWidth: '800px',
-    margin: '40px auto',
+    margin: '0 auto 40px',
     boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
     color: '#222',
     whiteSpace: 'pre-wrap'
diff --git a/src/components/diariodev/arquiteturaMonolitica/index.jsx b/src/components/diariodev/arquiteturaMonolitica/index.jsx
index 27c1689..226c183 100644
--- a/src/components/diariodev/arquiteturaMonolitica/index.jsx
+++ b/src/components/diariodev/arquiteturaMonolitica/index.jsx
@@ -3,7 +3,7 @@ const ArquiteturaMonolitica = () => {
     fontFamily: 'Segoe UI, sans-serif',
     padding: '24px',
     maxWidth: '900px',
-    margin: '0 auto',
+    margin: '0 auto 40px',
     color: '#222',
     backgroundColor: '#f9f9f9',
     borderRadius: '12px',
@@ -51,7 +51,7 @@ const ArquiteturaMonolitica = () => {
     padding: '32px',
     borderRadius: '12px',
     maxWidth: '800px',
-    margin: '40px auto',
+    margin: '0 auto 40px',
     boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
     color: '#222',
     whiteSpace: 'pre-wrap'
diff --git a/src/components/diariodev/backendTecnologias/index.jsx b/src/components/diariodev/backendTecnologias/index.jsx
deleted file mode 100644
index 54e5b36..0000000
--- a/src/components/diariodev/backendTecnologias/index.jsx
+++ /dev/null
@@ -1,184 +0,0 @@
-const BackendTecnologias = () => {
-  const container = {
-    fontFamily: 'Segoe UI, sans-serif',
-    padding: '24px',
-    maxWidth: '900px',
-    margin: '0 auto 30px',
-    color: '#222',
-    backgroundColor: '#f9f9f9',
-    borderRadius: '12px',
-    boxShadow: '0 0 20px rgba(0,0,0,0.05)'
-  };
-
-  const sectionTitle = {
-    fontSize: '24px',
-    fontWeight: '700',
-    marginBottom: '12px',
-    display: 'flex',
-    alignItems: 'center'
-  };
-
-  const itemTitle = {
-    fontSize: '18px',
-    fontWeight: '600',
-    margin: '20px 0 8px 0',
-    borderBottom: '2px solid #ddd',
-    paddingBottom: '4px'
-  };
-
-  const list = {
-    paddingLeft: '20px',
-    marginBottom: '12px',
-    lineHeight: '1.6'
-  };
-
-  const check = {
-    color: '#2ecc71',
-    fontSize: '20px',
-    marginRight: '8px'
-  };
-
-  const container1 = {
-    backgroundColor: '#f9f9f9',
-    fontFamily: 'Segoe UI, sans-serif',
-    padding: '32px',
-    borderRadius: '12px',
-    maxWidth: '800px',
-    margin: '30px auto',
-    boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
-    color: '#222'
-  };
-
-  const title1 = {
-    fontSize: '24px',
-    fontWeight: '700',
-    display: 'flex',
-    alignItems: 'center',
-    marginBottom: '24px',
-  };
-
-  const check1 = {
-    fontSize: '22px',
-    color: '#27ae60',
-    marginRight: '10px',
-  };
-
-  const codeBlock1 = {
-    backgroundColor: '#1e1e1e',
-    color: '#f1f1f1',
-    fontFamily: 'monospace',
-    padding: '20px',
-    borderRadius: '10px',
-    whiteSpace: 'pre',
-    fontSize: '15px',
-    overflowX: 'auto',
-    lineHeight: '1.6',
-  };
-
-  const label1 = {
-    display: 'inline-block',
-    backgroundColor: '#d1ecf1',
-    color: '#0c5460',
-    fontWeight: '600',
-    fontSize: '14px',
-    padding: '4px 8px',
-    borderRadius: '6px',
-    marginBottom: '12px',
-  };
-
-  return (
-    <>
-      <div style={container}>
-        <div style={sectionTitle}>
-          <span style={check}>✅</span>
-          Tecnologias-chave para Backend com JavaScript (Node.js)
-        </div>
-
-        <div style={itemTitle}>1. Runtime</div>
-        <ul style={list}>
-          <li>Node.js – motor principal para execução do JavaScript no backend.</li>
-        </ul>
-
-        <div style={itemTitle}>2. Framework Web</div>
-        <ul style={list}>
-          <li>Express.js – simples, flexível, ideal para APIs REST.</li>
-          <li>Fastify – alternativa mais rápida que Express, com suporte nativo a JSON Schema.</li>
-          <li>NestJS – estrutura modular baseada em TypeScript, com arquitetura inspirada no Angular.</li>
-        </ul>
-
-        <div style={itemTitle}>3. Banco de Dados</div>
-        <ul style={list}>
-          <li><strong>Relacional (SQL):</strong> PostgreSQL (usando knex.js, sequelize ou TypeORM)</li>
-          <li><strong>Não relacional (NoSQL):</strong> MongoDB (com mongoose ou driver nativo)</li>
-        </ul>
-
-        <div style={itemTitle}>4. Autenticação & Segurança</div>
-        <ul style={list}>
-          <li>JWT (token de autenticação)</li>
-          <li>bcrypt (hash seguro de senhas)</li>
-          <li>helmet (segurança para headers HTTP)</li>
-          <li>cors (controle de acesso externo à API)</li>
-        </ul>
-
-        <div style={itemTitle}>5. Validação de Dados</div>
-        <ul style={list}>
-          <li>Joi (usado com Express)</li>
-          <li>Zod (moderno, ideal com TypeScript)</li>
-          <li>class-validator (usado com NestJS)</li>
-        </ul>
-
-        <div style={itemTitle}>6. Testes</div>
-        <ul style={list}>
-          <li>Jest ou Mocha + Chai (testes unitários e de integração)</li>
-          <li>Supertest (testes de endpoints HTTP)</li>
-        </ul>
-
-        <div style={itemTitle}>7. Deploy</div>
-        <ul style={list}>
-          <li>Docker (containerização)</li>
-          <li>PM2 (gerenciamento de processos)</li>
-          <li>Nginx (proxy reverso)</li>
-          <li>CI/CD: GitHub Actions, GitLab CI, etc.</li>
-        </ul>
-      </div>
-
-      <div style={container}>
-        <div style={sectionTitle}>
-          <span style={check}>🧠</span> Padrões Recomendados
-        </div>
-
-        <ul style={list}>
-          <li><strong>MVC (Model-View-Controller)</strong> – para APIs simples.</li>
-          <li><strong>Service Layer Pattern</strong> – separa regras de negócio da camada de controller.</li>
-          <li><strong>Repository Pattern</strong> – se estiver usando SQL, bom para abstrair acesso ao banco.</li>
-          <li><strong>Hexagonal/Clean Architecture</strong> – ideal para projetos escaláveis e testáveis.</li>
-          <li><strong>Domain-Driven Design (DDD)</strong> – se estiver construindo algo enterprise/grande.</li>
-        </ul>
-      </div>
-
-      <div style={container1}>
-        <div style={title1}>
-          <span style={check1}>✅</span> Estrutura Modular (Express.js como exemplo)
-        </div>
-
-        <div style={label1}>bash</div>
-
-        <div style={codeBlock1}>
-          {`/src
-  /config        <- configs do app (env, db, etc)
-  /controllers   <- lógica dos endpoints
-  /models        <- schemas ou modelos de dados
-  /routes        <- define rotas e middlewares
-  /services      <- regras de negócio (camada de serviço)
-  /middlewares   <- autenticação, logger, etc.
-  /utils         <- funções auxiliares
-  /validators    <- validação de entrada
-  /database      <- conexão com o banco
-index.js         <- entrada da aplicação`}
-        </div>
-      </div>
-    </>
-  );
-};
-
-export default BackendTecnologias;
diff --git a/src/components/diariodev/containerStyle.js b/src/components/diariodev/containerStyle.js
deleted file mode 100644
index ef144cf..0000000
--- a/src/components/diariodev/containerStyle.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import styled from "styled-components";
-
-export const ContainerStyle = styled.div`
-
-width: 100%;
-
-& .h3Center {
-text-align: center;
-margin-bottom: 15px;
-}
-`;
-
-
diff --git a/src/components/diariodev/frontendTecnologiasNextjs/index.jsx b/src/components/diariodev/frontendTecnologiasNextjs/index.jsx
index 1ef530d..f23dc45 100644
--- a/src/components/diariodev/frontendTecnologiasNextjs/index.jsx
+++ b/src/components/diariodev/frontendTecnologiasNextjs/index.jsx
@@ -3,7 +3,7 @@ const FrontendTecnologiasNextjs = () => {
     fontFamily: 'Segoe UI, sans-serif',
     padding: '24px',
     maxWidth: '900px',
-    margin: '0 auto',
+    margin: '0 auto 40px',
     color: '#222',
     backgroundColor: '#f9f9f9',
     borderRadius: '12px',
@@ -44,7 +44,7 @@ const FrontendTecnologiasNextjs = () => {
     padding: '32px',
     borderRadius: '12px',
     maxWidth: '800px',
-    margin: '40px auto',
+    margin: '0 auto 40px',
     boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
     color: '#222'
   };
@@ -92,6 +92,28 @@ const FrontendTecnologiasNextjs = () => {
     marginBottom: '12px',
   };
 
+  const codeBlock = {
+    backgroundColor: '#1e1e1e',
+    color: '#f1f1f1',
+    fontFamily: 'monospace',
+    padding: '16px',
+    borderRadius: '8px',
+    whiteSpace: 'pre',
+    fontSize: '14px',
+    overflowX: 'auto',
+    marginBottom: '20px',
+    boxShadow: 'inset 0 0 5px rgba(0,0,0,0.7)'
+  };
+
+  const separator = {
+    borderTop: '1px solid #ccc',
+    margin: '20px 0',
+  };
+
+  const bold = {
+    fontWeight: '600',
+  };
+
 
   return (
     <>
@@ -185,6 +207,317 @@ const FrontendTecnologiasNextjs = () => {
 /styles              <- estilos globais, CSS Modules, etc.`}
         </pre>
       </div>
+
+      <div style={container}>
+        <div style={sectionTitle}>getStaticProps (Geração Estática)</div>
+
+        <p style={paragraph}><strong>Objetivo:</strong> É usado para gerar páginas de forma estática no momento da construção (build), ou seja, os dados são buscados e renderizados antes de o site ser servido ao usuário.</p>
+        <p style={paragraph}><strong>Quando usar:</strong> Quando os dados da página não mudam frequentemente ou podem ser atualizados apenas em intervalos específicos.</p>
+        <p style={paragraph}><strong>Como funciona:</strong></p>
+        <ul style={{ ...paragraph, paddingLeft: '20px' }}>
+          <li>Execução no momento da construção: Durante o build do Next.js, o getStaticProps é chamado, e a página gerada é salva como uma versão estática. Isso significa que o conteúdo já está pronto e pode ser entregue rapidamente aos usuários.</li>
+          <li>Exemplo de uso: Páginas de blog, portfólios ou catálogos de produtos que não requerem dados atualizados constantemente.</li>
+        </ul>
+
+        <pre style={codeBlock}>
+          {`export async function getStaticProps() {
+  const data = await fetch('https://api.example.com/data');
+  const json = await data.json();
+
+  return {
+    props: {
+      data: json,
+    },
+  };
+}`}
+        </pre>
+
+        <hr style={{ margin: '30px 0' }} />
+
+        <div style={sectionTitle}>getServerSideProps (Renderização no Lado do Servidor)</div>
+
+        <p style={paragraph}><strong>Objetivo:</strong> Ele é usado para buscar e renderizar dados dinâmicos no momento da requisição, ou seja, a página é gerada sempre que o usuário acessa a página.</p>
+        <p style={paragraph}><strong>Quando usar:</strong> Quando os dados precisam ser sempre atualizados ou quando dependem de variáveis como cookies, autenticação ou outras condições que mudam com o tempo.</p>
+        <p style={paragraph}><strong>Como funciona:</strong></p>
+        <ul style={{ ...paragraph, paddingLeft: '20px' }}>
+          <li>Execução a cada requisição: Sempre que uma requisição é feita para a página, o getServerSideProps é executado no servidor, buscando os dados mais recentes e gerando a página em tempo real.</li>
+          <li>Exemplo de uso: Páginas de dashboards, feeds de redes sociais ou outras páginas com dados atualizados frequentemente.</li>
+        </ul>
+
+        <pre style={codeBlock}>
+          {`export async function getServerSideProps(context) {
+  const res = await fetch('https://api.example.com/dynamic-data');
+  const data = await res.json();
+
+  return {
+    props: {
+      data,
+    },
+  };
+}`}
+        </pre>
+
+        <hr style={{ margin: '30px 0' }} />
+
+        <div style={sectionTitle}>Diferenças principais:</div>
+        <ul style={paragraph}>
+          <li><strong>getStaticProps:</strong> A página é gerada no momento da construção (build) e serve para conteúdo que não muda com frequência.</li>
+          <li><strong>getServerSideProps:</strong> A página é gerada a cada requisição feita ao servidor, garantindo que o conteúdo esteja sempre atualizado com dados dinâmicos.</li>
+        </ul>
+
+        <div style={sectionTitle}>Quando escolher um ou outro:</div>
+        <ul style={paragraph}>
+          <li><strong>getStaticProps:</strong> Ideal para conteúdo que não muda frequentemente ou pode ser regenerado em intervalos específicos (como em blogs ou catálogos de produtos).</li>
+          <li><strong>getServerSideProps:</strong> Útil quando é necessário garantir que os dados mais recentes sejam carregados a cada acesso, especialmente quando o conteúdo depende de fatores variáveis como a hora ou estado do usuário.</li>
+        </ul>
+
+        <div style={sectionTitle}>Resumindo:</div>
+        <ul style={paragraph}>
+          <li><strong>getStaticProps:</strong> Para dados estáticos, gerados no momento da construção (build).</li>
+          <li><strong>getServerSideProps:</strong> Para dados dinâmicos, gerados a cada requisição no lado do servidor.</li>
+        </ul>
+
+        <p style={paragraph}>
+          Se o seu projeto não exige dados dinâmicos (como conteúdo atualizado frequentemente ou personalizado para o usuário), o uso de <strong>getStaticProps</strong> é mais eficiente, pois gera páginas estáticas e proporciona uma performance melhor.
+        </p>
+      </div>
+
+      <div style={container}>
+        <div style={sectionTitle}>1. getStaticProps (Renderização Estática)</div>
+
+        <p style={paragraph}>
+          getStaticProps é utilizado quando você deseja gerar uma página de forma estática no momento da construção (build) do site.
+          Ele permite que você pré-renderize páginas com dados que não mudam com frequência. Usar getStaticProps é útil para gerar páginas de conteúdo fixo ou quase fixo.
+        </p>
+
+        <p style={paragraph}><strong>Como usar:</strong></p>
+        <p style={paragraph}>
+          No caso da página de projetos, se as informações das metatags (como título, descrição, etc.) são estáticas ou mudam muito raramente, você pode usar getStaticProps.
+        </p>
+
+        <pre style={codeBlock}>
+          {`import Head from "next/head";
+
+const Projetos = ({ metadata }) => {
+  return (
+    <>
+      <Head>
+        <title>{metadata.title}</title>
+        <meta name="description" content={metadata.description} />
+        <meta property="og:title" content={metadata.ogTitle} />
+        <meta property="og:description" content={metadata.ogDescription} />
+        <meta property="og:image" content={metadata.ogImage} />
+        <meta property="og:url" content={metadata.url} />
+      </Head>
+      <div style={{ display: "flex" }}>
+        {/* Seu conteúdo */}
+      </div>
+    </>
+  );
+};
+
+// Usado para carregar dados no momento da construção (build)
+export async function getStaticProps() {
+
+  // Aqui você pode buscar dados de uma API, banco de dados ou usar valores fixos
+
+  const metadata = {
+    title: "Portfólio de Desenvolvimento Web",
+    description: "Descrição do portfólio",
+    ogTitle: "Portfólio de Desenvolvimento Web",
+    ogDescription: "Descrição do portfólio",
+    ogImage: "https://link-da-imagem.jpg",
+    url: "https://meuportfolio.com/projetos",
+  };
+
+  return {
+    props: { metadata }, // Passa os dados para o componente como props
+  };
+}
+
+export default Projetos;`}
+        </pre>
+
+        <p style={paragraph}><strong>Vantagens de getStaticProps:</strong></p>
+        <ul style={{ ...paragraph, paddingLeft: '20px' }}>
+          <li>A página é gerada apenas uma vez durante o build (não há renderização dinâmica no momento de acesso).</li>
+          <li>As páginas são extremamente rápidas para carregar, pois já estão geradas e prontas para serem entregues aos usuários.</li>
+        </ul>
+
+        <p style={paragraph}><strong>Quando usar:</strong></p>
+        <ul style={{ ...paragraph, paddingLeft: '20px' }}>
+          <li>Quando o conteúdo não muda com frequência (por exemplo, descrições ou metatags fixas).</li>
+          <li>Quando você não precisa de dados que variam a cada solicitação do usuário.</li>
+        </ul>
+      </div>
+
+      <div style={container}>
+        <div style={sectionTitle}>1.1 Cenários onde você usaria getStaticProps</div>
+
+        <p style={paragraph}>
+          Com getStaticProps:
+        </p>
+
+        <p style={paragraph}>
+          Se o conteúdo descritivo ou meta-informações (como o título, descrição ou destaques do projeto) forem armazenados em um CMS (como Strapi ou Sanity) ou em uma API, você poderia usar getStaticProps para buscar os dados na build e construir a página.
+        </p>
+
+        <pre style={codeBlock}>
+          {`export async function getStaticProps() {
+
+  const response = await fetch("https://api.example.com/project-data");
+  const projectData = await response.json();
+
+  return {
+    props: {
+      projectData,
+    },
+    revalidate: 60, // Atualiza os dados a cada 60 segundos
+  };
+}`}
+        </pre>
+      </div>
+
+      <div style={container}>
+        <div style={sectionTitle}>2. getServerSideProps (Renderização no Lado do Servidor)</div>
+
+        <p style={paragraph}>
+          getServerSideProps é usado quando você precisa de dados dinâmicos que são gerados a cada requisição, ou seja, sempre que a página for carregada. Isso é útil se as metatags, por exemplo, dependerem de parâmetros dinâmicos ou de dados que mudam frequentemente (como informações de usuários ou dados em tempo real).
+        </p>
+
+        <p style={paragraph}><strong>Como usar:</strong></p>
+        <p style={paragraph}>
+          Se as informações das metatags ou o conteúdo da página precisam ser dinâmicas e geradas a cada requisição (por exemplo, metatags personalizadas para cada usuário ou página), use getServerSideProps.
+        </p>
+
+        <pre style={codeBlock}>
+          {`import Head from "next/head";
+
+const Projetos = ({ metadata }) => {
+
+  return (
+    <>
+      <Head>
+        <title>{metadata.title}</title>
+        <meta name="description" content={metadata.description} />
+        <meta property="og:title" content={metadata.ogTitle} />
+        <meta property="og:description" content={metadata.ogDescription} />
+        <meta property="og:image" content={metadata.ogImage} />
+        <meta property="og:url" content={metadata.url} />
+      </Head>
+
+      <div style={{ display: "flex" }}>
+        {/* Seu conteúdo */}
+      </div>
+    </>
+  );
+};`}
+        </pre>
+
+        <pre style={codeBlock}>
+          {`// Usado para carregar dados sempre que a página for acessada
+
+export async function getServerSideProps() {
+
+  // Aqui você pode buscar dados dinâmicos de uma API ou banco de dados
+
+  const metadata = {
+    title: "Portfólio de Desenvolvimento Web",
+    description: "Descrição atualizada do portfólio",
+    ogTitle: "Portfólio de Desenvolvimento Web",
+    ogDescription: "Descrição atualizada do portfólio",
+    ogImage: "https://link-da-imagem.jpg",
+    url: "https://meuportfolio.com/projetos",
+  };
+
+  return {
+    props: { metadata }, // Passa os dados para o componente como props
+  };
+}
+
+export default Projetos;`}
+        </pre>
+
+        <p style={paragraph}><strong>Vantagens de getServerSideProps:</strong></p>
+        <ul style={{ ...paragraph, paddingLeft: '20px' }}>
+          <li>Gera conteúdo dinâmico sempre que a página é acessada.</li>
+          <li>Ideal para casos onde as informações podem mudar frequentemente e precisam ser sempre atualizadas.</li>
+        </ul>
+
+        <p style={paragraph}><strong>Quando usar:</strong></p>
+        <ul style={{ ...paragraph, paddingLeft: '20px' }}>
+          <li>Quando você precisa gerar conteúdo dinâmico, baseado em dados de um banco de dados ou API, em cada requisição.</li>
+          <li>Para páginas com conteúdo que muda frequentemente e que não pode ser gerado apenas na construção.</li>
+        </ul>
+      </div>
+
+      <div style={container}>
+        <div style={sectionTitle}>2.2 Cenários onde você usaria getServerSideProps</div>
+
+        <p style={paragraph}>
+          Com getServerSideProps:
+        </p>
+
+        <p style={paragraph}>
+          Caso o conteúdo dependa de informações dinâmicas do usuário ou precise de atualizações frequentes (exemplo: autenticação ou parâmetros dinâmicos na URL), você poderia usar getServerSideProps.
+        </p>
+
+        <pre style={codeBlock}>
+          {`export async function getServerSideProps(context) {
+
+  const { params, req } = context;
+  const response = await fetch(\`https://api.example.com/data?id=\${params.id}\`, {
+    headers: { Authorization: \`Bearer \${req.cookies.token}\` },
+  });
+  const data = await response.json();
+
+  return {
+    props: {
+      data,
+    },
+  };
+}`}
+        </pre>
+      </div>
+
+      <div style={container}>
+        <div style={sectionTitle}>
+          <span style={check}>📌</span> Resumo
+        </div>
+
+        <div>
+          <div style={bold}>getStaticProps:</div>
+          <p style={paragraph}>
+            Ideal para dados estáticos ou que mudam raramente.
+            <br />
+            A página é pré-gerada no build e pode ser entregue rapidamente aos usuários.
+          </p>
+        </div>
+
+        <div style={separator}></div>
+
+        <div>
+          <div style={bold}>getServerSideProps:</div>
+          <p style={paragraph}>
+            Ideal para dados dinâmicos que precisam ser atualizados a cada requisição.
+            <br />
+            A página é gerada no servidor, a cada solicitação, o que pode aumentar o tempo de resposta.
+          </p>
+        </div>
+
+        <div style={separator}></div>
+
+        <div>
+          <div style={bold}>Resumo geral:</div>
+          <p style={paragraph}>
+            Se as metatags e os dados não mudam frequentemente, use getStaticProps para gerar a página de forma estática e mais rápida.
+            <br />
+            Se você precisa de dados que mudam frequentemente ou variam com base na requisição (como dados do usuário ou parâmetros dinâmicos), use getServerSideProps.
+            <br />
+            Isso ajudará a garantir que o conteúdo do {'<head>'}, como as metatags, seja sempre gerado corretamente e otimizado para SEO.
+          </p>
+        </div>
+      </div>
     </>
   );
 };
diff --git a/src/components/diariodev/frontendTecnologiasReactjs/index.jsx b/src/components/diariodev/frontendTecnologiasReactjs/index.jsx
index a2afe7c..1959c0f 100644
--- a/src/components/diariodev/frontendTecnologiasReactjs/index.jsx
+++ b/src/components/diariodev/frontendTecnologiasReactjs/index.jsx
@@ -3,7 +3,7 @@ const FrontendTecnologiasReactjs = () => {
     fontFamily: 'Segoe UI, sans-serif',
     padding: '24px',
     maxWidth: '900px',
-    margin: '0 auto',
+    margin: '0 auto 40px',
     color: '#222',
     backgroundColor: '#f9f9f9',
     borderRadius: '12px',
@@ -44,7 +44,7 @@ const FrontendTecnologiasReactjs = () => {
     padding: '32px',
     borderRadius: '12px',
     maxWidth: '800px',
-    margin: '40px auto',
+    margin: '0 auto 40px',
     boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
     color: '#222'
   };
diff --git a/src/components/globalStyles.js b/src/components/globalStyles.js
index ee72260..842f8e5 100644
--- a/src/components/globalStyles.js
+++ b/src/components/globalStyles.js
@@ -1,3 +1,27 @@
+// import { createGlobalStyle } from "styled-components";
+
+// export const GlobalStyle = createGlobalStyle`
+//   * {
+//     margin: 0;
+//     padding: 0;
+//     box-sizing: border-box;
+//   }
+
+//   body, html  {
+//     font-family: 'Arial', sans-serif;
+//     background-color: #f0f0f0;
+//     /* overflow-y: scroll; */
+//     margin: 0;
+//   }
+
+//   a {
+//     text-decoration: none;
+//     color: inherit;
+//   }
+
+// `;
+
+
 import { createGlobalStyle } from "styled-components";
 
 export const GlobalStyle = createGlobalStyle`
@@ -7,7 +31,12 @@ export const GlobalStyle = createGlobalStyle`
     box-sizing: border-box;
   }
 
+   html {
+    scrollbar-gutter: stable; /* <- AQUI */
+  }
+
   body {
+    height: 100%;
     font-family: 'Arial', sans-serif;
     background-color: #f0f0f0;
   }
@@ -16,6 +45,14 @@ export const GlobalStyle = createGlobalStyle`
     text-decoration: none;
     color: inherit;
   }
-  
 `;
 
+export const titleStyle = {
+  color: '#34495e',
+  textAlign: 'center',
+  cursor: 'pointer',
+  fontSize: '28px',
+  fontWeight: '800',
+  marginBottom: '24px',
+  letterSpacing: '0.05em',
+};
diff --git a/src/components/home/index.js b/src/components/home/index.js
deleted file mode 100644
index 3511ef0..0000000
--- a/src/components/home/index.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import styled from "styled-components";
-
-export const ContainerLayout = styled.div`
-display: flex;
-
-@media (max-width: 1250px) {
-
-flex-direction: column;
-}
-`;
-
-export const ContainerStyle = styled.div`
-max-width: 950px;
-margin: 0 auto; /* Centraliza o container horizontalmente */
-padding: 20px 15px 0 15px;  /* ajuste de padding para um pouco de espaçamento interno */
-`;
-
-export const H1 = styled.h1`
-text-align: center;
-font-size: 20px;
-`;
-
diff --git a/src/components/layout/header/index.jsx b/src/components/layout/header/index.jsx
deleted file mode 100644
index aaf8ef1..0000000
--- a/src/components/layout/header/index.jsx
+++ /dev/null
@@ -1,19 +0,0 @@
-import { useGlobalState } from "../../../context/GlobalStateContext";
-import { Container } from './styles';
-
-const Header = () => {
-  const { isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
-  const toggleHamburguer = () => setIsHamburguerOpen(!isHamburguerOpen);
-
-  return (
-    <Container>
-      <div onClick={toggleHamburguer} className='container-hamburguer'>
-        <div className='hamburguer'></div>
-        <div className='hamburguer'></div>
-        <div className='hamburguer'></div>
-      </div>
-    </Container>
-  );
-};
-
-export default Header;
\ No newline at end of file
diff --git a/src/components/layout/header/styles.js b/src/components/layout/header/styles.js
deleted file mode 100644
index 0b52187..0000000
--- a/src/components/layout/header/styles.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-display: none;
-background-color: #e4e7eb;
-height: 100px;
-width: 100%;
-
-box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
-
-& .hamburguer {
-  background-color: #555;
-  width: 30px;
-  height: 4px;
-  margin: 0 0 8px 0;
-}
-
-@media (max-width: 1250px) {
-  display: flex;
-  align-items: center;
-  justify-content: space-between; /* Melhor alinhamento */
-  padding: 0 20px; /* Para evitar que os itens fiquem colados na borda */
-
-  & .container-hamburguer {
-    margin-left: 23px;
-  }
-  }
-`;
\ No newline at end of file
diff --git a/src/components/layout/main/index.jsx b/src/components/layout/main/index.jsx
deleted file mode 100644
index 39b829b..0000000
--- a/src/components/layout/main/index.jsx
+++ /dev/null
@@ -1,11 +0,0 @@
-import { Container } from './styles';
-
-const Main = ({ children }) => {
-  return (
-    <Container>
-      {children}
-    </Container>
-  );
-};
-
-export default Main;
\ No newline at end of file
diff --git a/src/components/layout/main/styles.js b/src/components/layout/main/styles.js
deleted file mode 100644
index 379be6b..0000000
--- a/src/components/layout/main/styles.js
+++ /dev/null
@@ -1,8 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-display: flex; 
-justify-content: center; /* Centraliza horizontalmente */
-width: 100%;
-`;
\ No newline at end of file
diff --git a/src/components/layout/sideBar/index.jsx b/src/components/layout/sideBar/index.jsx
deleted file mode 100644
index 096db4f..0000000
--- a/src/components/layout/sideBar/index.jsx
+++ /dev/null
@@ -1,196 +0,0 @@
-import { useState, useEffect } from 'react';
-import Image from 'next/image';
-import Link from 'next/link';
-import { useRouter } from 'next/router';
-import { useGlobalState } from "../../../context/GlobalStateContext";
-
-import perfil from '../../../assets/images/perfil.png';
-import { Containerfixed, Container, Menu, XContainer, Bar, DiagonalOne, DiagonalTwo, ImgPerfil, Span, H3, P } from './styles';
-
-const SideBar = () => {
-  const { isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
-  console.log(isHamburguerOpen, "isHamburguerOpenisHamburguerOpenisHamburguerOpenisHamburguerOpen");
-  const [activeLink, setActiveLink] = useState('/'); // Estado para armazenar o link ativo
-  console.log(activeLink, "activeLink activeLink activeLink");
-  const router = useRouter(); // Hook para pegar a rota atual
-
-  const handleNavigate = async (path) => {
-    await router.push(path);
-    setIsHamburguerOpen(false); // fecha depois da navegação
-  };
-
-  useEffect(() => {
-    setActiveLink(router.pathname); // Atualiza o estado com a rota atual
-    console.log(router.pathname);
-  }, [router.pathname]); // Executa sempre que a rota mudar
-
-  const goHome = () => {
-    router.push('/');
-    // setIsHamburguerOpen(prevState => !prevState);
-  };
-
-  useEffect(() => {
-    document.body.style.overflow = isHamburguerOpen ? 'hidden' : 'auto';
-
-    return () => {
-      document.body.style.overflow = 'auto';
-    };
-  }, [isHamburguerOpen]);
-
-
-  return (
-    <Containerfixed isHamburguerOpen={isHamburguerOpen}>
-      {isHamburguerOpen &&
-        <XContainer onClick={() => setIsHamburguerOpen(prevState => !prevState)}>
-          <DiagonalOne />
-          <DiagonalTwo />
-        </XContainer>
-      }
-      <Container>
-        <ImgPerfil onClick={() => goHome()}
-          onContextMenu={(e) => e.preventDefault()}
-          style={{ display: "flex", justifyContent: "center", alignItems: "center", border: "solid 1px #243b53", borderRadius: '50%', width: "160px", height: "160px", marginTop: "40px", cursor: "pointer" }}>
-          <Image src={perfil} width={150} height={150} style={{ borderRadius: '50%' }} className="profile-image" alt="img" draggable={false} />
-        </ImgPerfil>
-
-        <H3>Jorge Luiz de Medeiros e Silva Jr</H3>
-        <P>Web Developer</P>
-        <div style={{ width: "260px", border: "solid 1px #243B53", marginTop: "20px", marginBottom: "10px" }}></div>
-        <Menu>
-          <ul>
-            <li>
-              <Span
-                onClick={() => handleNavigate('/')}
-                className={activeLink === '/' ? 'active' : ''}
-              >
-                Home
-              </Span>
-            </li>
-            <li>
-              <Span
-                onClick={() => handleNavigate('/sobre')}
-                className={activeLink === '/sobre' ? 'active' : ''}
-              >
-                Sobre
-              </Span>
-            </li>
-            <li>
-              <Span
-                onClick={() => handleNavigate('/projetos')}
-                className={activeLink === '/projetos' ? 'active' : ''}
-              >
-                Projetos
-              </Span>
-            </li>
-            <li>
-              <Span
-                onClick={() => handleNavigate('/diariodev')}
-                className={activeLink === '/diariodev' ? 'active' : ''}
-              >
-                Diário dev
-              </Span>
-            </li>
-          </ul>
-        </Menu>
-        <div style={{ width: "260px", border: "solid 1px #243B53", marginTop: "10px" }}></div>
-      </Container>
-    </Containerfixed>
-  );
-};
-
-export default SideBar;
-
-
-
-
-// import { useState, useEffect } from 'react';
-// import Image from 'next/image';
-// import perfil from '../../../assets/images/perfil.jpeg';
-// import Link from 'next/link';
-// import { useRouter } from 'next/router';
-
-// import { Containerfixed, Container, Menu, XContainer, Bar, DiagonalOne, DiagonalTwo } from './styles';
-
-// const SideBar = ({ isHamburguerOpen, setIsHamburguerOpen }) => {
-//   const [isLoaded, setIsLoaded] = useState(false);
-//   const [activeLink, setActiveLink] = useState('/'); // Estado para armazenar o link ativo
-//   const router = useRouter(); // Hook para pegar a rota atual
-
-//   useEffect(() => {
-//     setIsLoaded(true);
-//     setActiveLink(router.pathname); // Atualiza o estado com a rota atual
-//     console.log(router.pathname);
-//   }, [router.pathname]); // Executa sempre que a rota mudar
-
-//   const [ripple, setRipple] = useState([]);
-
-//   const handleMouseMove = (e) => {
-//     const { left, top } = e.currentTarget.getBoundingClientRect();
-//     const x = e.clientX - left;
-//     const y = e.clientY - top;
-
-//     setRipple([...ripple, { x, y, id: Date.now() }]);
-
-//     setTimeout(() => {
-//       setRipple((prev) => prev.filter((r) => r.id !== Date.now()));
-//     }, 1000);
-//   };
-
-//   const handleMouseLeave = () => {
-//     setRipple([]); // Remove o efeito ao sair da imagem
-//   };
-
-//   if (!isLoaded) return null; // Aguarda o carregamento
-
-
-//   return (
-//     <Containerfixed isHamburguerOpen={isHamburguerOpen}>
-//       {isHamburguerOpen &&
-//         <XContainer onClick={() => setIsHamburguerOpen(!isHamburguerOpen)}>
-//           <DiagonalOne />
-//           <DiagonalTwo />
-//         </XContainer>
-//       }
-//       <Container>
-//         <Link href="/">
-//           <div className="profile-container"
-//             onMouseMove={handleMouseMove} onMouseLeave={handleMouseLeave} style={{ display: "flex", justifyContent: "center", alignItems: "center", border: "solid 2px #243b53", borderRadius: '50%', width: "160px", height: "160px", marginTop: "40px" }}>
-//             <Image src={perfil} width={150} height={150} className="profile-image" alt="img" />
-//             {ripple.map((r) => (
-//               <span
-//                 key={r.id}
-//                 className="ripple"
-//                 style={{ left: r.x, top: r.y }}
-//               />
-//             ))}
-//           </div>
-//         </Link>
-//         <h3 style={{ color: "#d1dfed" }}>Jorge Luiz de Medeiros e Silva Jr</h3>
-//         <p style={{ color: "#bcccdc", fontSize: "20px" }}>Web Developer</p>
-//         <div style={{ width: "260px", border: "solid 1px #243B53", marginTop: "20px" }}></div>
-//         <Menu>
-//           <ul>
-//             <li>
-//               <Link href="/">
-//                 <span onClick={() => setActiveLink('/sobre')} className={activeLink === '/' ? 'active' : ''}>Home</span>
-//               </Link>
-//             </li>
-//             <li>
-//               <Link href="/sobre">
-//                 <span onClick={() => setActiveLink('/sobre')} className={activeLink === '/sobre' ? 'active' : ''}>Sobre</span>
-//               </Link>
-//             </li>
-//             <li>
-//               <Link href="/projetos">
-//                 <span onClick={() => setActiveLink('/projetos')} className={activeLink === '/projetos' ? 'active' : ''}>Projetos</span>
-//               </Link>
-//             </li>
-//           </ul>
-//         </Menu>
-//         <div style={{ width: "260px", border: "solid 1px #243B53", marginTop: "20px" }}></div>
-//       </Container>
-//     </Containerfixed>
-//   );
-// };
-
-// export default SideBar;
\ No newline at end of file
diff --git a/src/components/layout/sideBar/styles.js b/src/components/layout/sideBar/styles.js
deleted file mode 100644
index 32c1599..0000000
--- a/src/components/layout/sideBar/styles.js
+++ /dev/null
@@ -1,131 +0,0 @@
-import styled from "styled-components";
-
-export const Containerfixed = styled.div`
-  position: sticky;
-  /* flex-shrink: 0; */
-  top: 0;
-  z-index: 10;
-  height: 100vh;
-  width: 330px;
-  min-width: 330px; /* Impede que a largura seja comprimida */
-  background-color: #191970; /* For browsers that do not support gradients */
-  background-image: linear-gradient(to top, #000080, #7B68EE);
-  transition: transform 500ms ease-in-out; /* Transição suave para mover o sidebar */
-  transform: translateX(0); /* Posição inicial */
-  border-top-right-radius: 50px;
-
-  * {  /* Aplica a todos os elementos dentro de VideoContainer */
-      /* Remover realce azul no toque (Mobile e WebKit) */
-        -webkit-tap-highlight-color: transparent;
-        -webkit-focus-ring-color: transparent;
-    }
-
-  @media (max-width: 1250px) {
-    /* Alterna para 'fixed' em telas menores para remover o espaço quando o sidebar é oculto */
-    position: fixed;
-    left: 0;
-    transform: ${({ isHamburguerOpen }) => (isHamburguerOpen ? 'translateX(0)' : 'translateX(-100%)')};
-  }
-
-  & li {
-    list-style-type: none;
-  }
-`;
-
-export const Container = styled.div`
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-
-  & .profile-image {
-   user-select: none;
-  -webkit-touch-callout: none; /* iOS Safari */
-  -webkit-user-drag: none;
-  -webkit-user-select: none;
-  }
-`;
-
-export const Menu = styled.div`
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-
-  & li {
-    padding: 10px;
-  }
-
-  & a {
-    font-size: 20px;
-    color: rgb(188, 204, 220);
-      /* font-weight: bold; */
-
-    /* &:hover {
-      color: #84c5f4;
-    } */
-  }
-
-    /* Aplica estilo especial quando o link estiver ativo */
-    & span.active {
-    color: #84c5f4; /* Cor para o link ativo */
-    /* font-weight: bold; Torna o link ativo em negrito */
-  }
-`;
-
-export const XContainer = styled.div`
-  position: absolute; /* Use 'fixed' se você quer que ele permaneça visível enquanto a página rola */
-  top: 16px; /* Distância do topo */
-  right: 16px; /* Distância do lado direito */
-  width: 24px;
-  height: 24px;
-  cursor: pointer; /* Ícone de cursor para indicar que é clicável */
-
-  @media (min-width: 1250px) {
-    display: none;
-  }
-`;
-
-export const Bar = styled.div`
-  position: absolute;
-  width: 100%;
-  height: 4px;
-  background-color: #d1dfed;
-  top: 50%;
-  left: 0;
-  transform-origin: center;
-`;
-
-export const DiagonalOne = styled(Bar)`
-  transform: rotate(45deg);
-`;
-
-export const DiagonalTwo = styled(Bar)`
-  transform: rotate(-45deg);
-`;
-
-export const ImgPerfil = styled.div`
-margin-bottom: 10px;
-`;
-
-export const Span = styled.span`
- cursor: pointer;
- font-size: 20px;
-  color: rgb(188, 204, 220);
-  user-select: none;
-  -webkit-user-select: none; /* Safari */
-  -ms-user-select: none;     /* IE/Edge */
-`;
-
-export const H3 = styled.h3`
-  color: #d1dfed;
-  user-select: none;
-  -webkit-user-select: none; /* Safari */
-  -ms-user-select: none;     /* IE/Edge */
-`;
-
-export const P = styled.p`
-font-size: 20px;
-  color: #d1dfed;
-  user-select: none;
-  -webkit-user-select: none; /* Safari */
-  -ms-user-select: none;     /* IE/Edge */
-`;
diff --git a/src/components/layout/sideBar/stylesRippleEffect.js b/src/components/layout/sideBar/stylesRippleEffect.js
deleted file mode 100644
index 6956aae..0000000
--- a/src/components/layout/sideBar/stylesRippleEffect.js
+++ /dev/null
@@ -1,129 +0,0 @@
-import styled from "styled-components";
-
-export const Containerfixed = styled.div`
-  position: sticky;
-  /* flex-shrink: 0; */
-  top: 0;
-  z-index: 10;
-  height: 100vh;
-  width: 330px;
-  min-width: 330px; /* Impede que a largura seja comprimida */
-  background-color: #191970; /* For browsers that do not support gradients */
-  background-image: linear-gradient(to top, #000080, #7B68EE);
-  transition: transform 500ms ease-in-out; /* Transição suave para mover o sidebar */
-  transform: translateX(0); /* Posição inicial */
-  border-top-right-radius: 50px;
-
-  @media (max-width: 1250px) {
-    /* Alterna para 'fixed' em telas menores para remover o espaço quando o sidebar é oculto */
-    position: fixed;
-    left: 0;
-    transform: ${({ isHamburguerOpen }) => (isHamburguerOpen ? 'translateX(0)' : 'translateX(-100%)')};
-  }
-
-  & li {
-    list-style-type: none;
-  }
-`;
-
-export const Container = styled.div`
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-
-  & .profile-container {
-  position: relative;
-  display: flex;
-  justify-content: center;
-  align-items: center;
-  border: solid 2px #243b53;
-  border-radius: 50%;
-  width: 160px;
-  height: 160px;
-  margin-top: 40px;
-  overflow: hidden;
-}
-
-& .profile-image {
-  border-radius: 50%;
-}
-
-& .ripple {
-  position: absolute;
-  width: 10px;
-  height: 10px;
-  background: rgba(255, 255, 255, 0.5);
-  border-radius: 50%;
-  transform: scale(1);
-  animation: ripple-effect 0.6s linear;
-  pointer-events: none;
-}
-
-@keyframes ripple-effect {
-  from {
-    transform: scale(1);
-    opacity: 1;
-  }
-  to {
-    transform: scale(10);
-    opacity: 0;
-  }
-}
-`;
-
-export const Menu = styled.div`
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-
-  & li {
-    padding: 10px;
-  }
-
-  & a {
-    font-size: 20px;
-    color: rgb(188, 204, 220);
-      /* font-weight: bold; */
-
-    /* &:hover {
-      color: #84c5f4;
-    } */
-  }
-
-    /* Aplica estilo especial quando o link estiver ativo */
-    & span.active {
-    color: #84c5f4; /* Cor para o link ativo */
-    /* font-weight: bold; Torna o link ativo em negrito */
-  }
-`;
-
-export const XContainer = styled.div`
-  position: absolute; /* Use 'fixed' se você quer que ele permaneça visível enquanto a página rola */
-  top: 16px; /* Distância do topo */
-  right: 16px; /* Distância do lado direito */
-  width: 24px;
-  height: 24px;
-  cursor: pointer; /* Ícone de cursor para indicar que é clicável */
-
-  @media (min-width: 1250px) {
-    display: none;
-  }
-`;
-
-export const Bar = styled.div`
-  position: absolute;
-  width: 100%;
-  height: 4px;
-  background-color: #d1dfed;
-  top: 50%;
-  left: 0;
-  transform-origin: center;
-`;
-
-export const DiagonalOne = styled(Bar)`
-  transform: rotate(45deg);
-`;
-
-export const DiagonalTwo = styled(Bar)`
-  transform: rotate(-45deg);
-`;
diff --git a/src/components/projetos/carousel/styles.js b/src/components/projetos/carousel/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/carousel/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/catalogo/styles.js b/src/components/projetos/catalogo/styles.js
deleted file mode 100644
index c452503..0000000
--- a/src/components/projetos/catalogo/styles.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-
-& .list-style-type {
-  list-style-type: none;
-}
-
-& .remove-padding {
-  padding: 0 0 8px 0;
-  line-height: 0
-}
-
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-line-height: 28px;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/dataAnalysis/styles.js b/src/components/projetos/dataAnalysis/styles.js
deleted file mode 100644
index 5c691d4..0000000
--- a/src/components/projetos/dataAnalysis/styles.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-
-& .list-style-type {
-  list-style-type: none;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-line-height: 28px;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/imageGenerator/styles.js b/src/components/projetos/imageGenerator/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/imageGenerator/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/portfolio/styles.js b/src/components/projetos/portfolio/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/portfolio/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/streamDolby/styles.js b/src/components/projetos/streamDolby/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/streamDolby/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/stripe/styles.js b/src/components/projetos/stripe/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/stripe/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/style.js b/src/components/projetos/style.js
index cc3b0c6..13ff879 100644
--- a/src/components/projetos/style.js
+++ b/src/components/projetos/style.js
@@ -1,11 +1,5 @@
 import styled from "styled-components";
 
-export const ContainerStyle = styled.div`
-max-width: 950px;
-margin: 0 auto; /* Centraliza o container horizontalmente */
-padding: 20px 15px 0 15px;  /* ajuste de padding para um pouco de espaçamento interno */
-`;
-
 export const GridContainer = styled.div`
   display: grid;
   justify-content: center;
@@ -26,23 +20,13 @@ export const GridContainer = styled.div`
     display: block;
     max-width: 100%;
     height: 244px;
-    border-top-right-radius: 10px;
-    border-top-left-radius: 10px;
   };
 
   & .item {
     height: 244px;
     max-width: 100%;
-    border: 1px solid #ccc;
     background-color: #ffffff;
     display: flex;
-    border-bottom-right-radius: 10px;
-    border-bottom-left-radius: 10px;
-    /* box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2); */
-
-    /* &:hover {
-      box-shadow: 0 0 20px #102a43;
-    } */
 
   & .sub-item {
     display: flex;
@@ -64,6 +48,13 @@ export const GridContainer = styled.div`
     overflow: hidden; /* Evita que imagens transbordem */
     transition: transform 500ms ease-in-out; /* Transição suave para mover o sidebar */
     transform: translateY(0); /* Posição inicial */
+    border-radius: 10px;
+    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); /* sombra deslocada pra baixo */
+
+  &:hover {
+    box-shadow: 0 20px 40px rgba(16, 42, 67, 0.7); /* sombra maior e mais forte pra hover */
+  }
+    
 
   /* Transforma somente em telas maiores */
   @media (min-width: 700px) { /* Ajuste o valor conforme necessário */
@@ -71,6 +62,41 @@ export const GridContainer = styled.div`
       transform: translateY(-30px);
     }
   }
-  };
+};
+`;
+
+
+
+export const P = styled.p`
+
+font-size: 16px;
+line-height: 28px;
+color: #323F4B;
+margin-bottom: 20px;
+
+& a {
+  color: blue;
+}
 `;
 
+export const H3 = styled.h3`
+
+line-height: 28px;
+margin-bottom: 20px;
+`;
+
+export const H4 = styled.ul`
+
+font-weight: 600;
+margin-bottom: 20px;
+`;
+
+export const Li = styled.li`
+
+padding: 8px 0 8px 0;
+`;
+
+export const Ul = styled.ul`
+
+margin-bottom: 20px;
+`;
diff --git a/src/components/projetos/styles/index.js b/src/components/projetos/styles/index.js
deleted file mode 100644
index b398bd4..0000000
--- a/src/components/projetos/styles/index.js
+++ /dev/null
@@ -1,74 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-<<<<<<< HEAD
-=======
-
-& .list-style-type {
-  list-style-type: none;
-}
-
-& .remove-padding {
-  padding: 0 0 8px 0;
-  line-height: 0
-}
-
-& span {
-  background-color: #bcccdc;
-}
->>>>>>> ef0a6a5e7905f44ae92c00c646f381ffddb5070f
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-<<<<<<< HEAD
-=======
-line-height: 28px;
->>>>>>> ef0a6a5e7905f44ae92c00c646f381ffddb5070f
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/youtube/styles.js b/src/components/projetos/youtube/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/youtube/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/ytformp3/styles.js b/src/components/projetos/ytformp3/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/ytformp3/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/projetos/ytformp4/styles.js b/src/components/projetos/ytformp4/styles.js
deleted file mode 100644
index 4426aea..0000000
--- a/src/components/projetos/ytformp4/styles.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import styled from "styled-components";
-
-export const Container = styled.div`
-
-  max-width: 950px;
-  margin: 0 auto; /* Centraliza o container horizontalmente */
-  padding: 0 30px; /* Espaçamento de 30px nas laterais */
-  border: solid 1px red;
-
-  & .player-video-personalizado {
-    cursor: pointer;
-  }
-  & .player-video-personalizado:active {
-    cursor: progress;
-  }
-
-  & .margin10 {
-  margin-top: -15px;
-}
-`;
-
-export const P = styled.p`
-
-font-size: 16px;
-line-height: 28px;
-color: #323F4B;
-margin-bottom: 20px;
-
-& a {
-  color: blue;
-}
-`;
-
-export const H4 = styled.ul`
-
-font-weight: 600;
-margin-bottom: 20px;
-`;
-
-export const H3 = styled.h3`
-
-line-height: 28px;
-margin-bottom: 20px;
-`;
-
-export const Li = styled.li`
-
-padding: 8px 0 8px 0;
-`;
-
-export const Ul = styled.ul`
-
-margin-bottom: 20px;
-`;
diff --git a/src/components/sobre/index.js b/src/components/sobre/index.js
deleted file mode 100644
index 368cc29..0000000
--- a/src/components/sobre/index.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import styled from "styled-components";
-
-export const ContainerStyle = styled.div`
-max-width: 950px;
-margin: 0 auto; /* Centraliza o container horizontalmente */
-padding: 20px 15px 25px 15px;  /* ajuste de padding para um pouco de espaçamento interno */
-`;
-
-export const H1 = styled.h1`
-text-align: center;
-font-size: 20px;
-`;
-
diff --git a/src/pages/diariodev/index.jsx b/src/pages/diariodev/index.jsx
index 4d546aa..4cc06c4 100644
--- a/src/pages/diariodev/index.jsx
+++ b/src/pages/diariodev/index.jsx
@@ -1,19 +1,26 @@
-import { useState, useEffect } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
-// import whatsapp2 from "@/public/whatsapp2.png";
-import Image from 'next/image';
+import { useState } from "react";
 import Head from "next/head";
 import { useGlobalState } from "../../context/GlobalStateContext";
 
-import { ContainerLayout } from "@/components/home";
-import { ContainerStyle } from "@/components/diariodev/containerStyle";
+import { MainLayout } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
+
+import Title from "@/components/common/title";
+
+import { DiarioDevMainContainer, CollapsibleContent } from "@/components/diariodev/diarioDevMainContainer";
+
+import BibliotecasFerramentas from "@/components/diariodev/bibliotecasFerramentas";
 import ArquiteturaMonolitica from "@/components/diariodev/arquiteturaMonolitica";
 import ArquiteturaMicroservices from "@/components/diariodev/arquiteturaMicroservices";
-import BackendTecnologias from "@/components/diariodev/backendTecnologias";
+import BackendNodeJS from "@/components/diariodev/backendNodeJS";
+import MySQLvsORM from "@/components/diariodev/mySQLvsORM";
 import FrontendTecnologiasReactjs from "@/components/diariodev/frontendTecnologiasReactjs";
+import DesignUIUX from "@/components/diariodev/designUIUx";
 import FrontendTecnologiasNextjs from "@/components/diariodev/frontendTecnologiasNextjs";
+import GitCommands from "@/components/diariodev/comandosGitHub";
+import ExpressServersDifference from "@/components/diariodev/expressHtmlServervsExpressEJSserver";
 
 
 // 1. Efeito de redimensionamento da tela
@@ -33,11 +40,16 @@ const Projetos = () => {
   // const ComponenteTech03 = () => <p>Conteúdo do componente Tech 03</p>;
 
   const sections = [
+    { title: "Bibliotecas / Ferramentas", component: <BibliotecasFerramentas /> },
     { title: "Arquitetura Monolitica", component: <ArquiteturaMonolitica /> },
     { title: "Arquitetura Microservices", component: <ArquiteturaMicroservices /> },
-    { title: "Tecnologias-chave para Backend com JavaScript Node.js", component: <BackendTecnologias /> },
-    { title: "Tecnologias-chave para Frontend com React.js", component: <FrontendTecnologiasReactjs /> },
-    { title: "Tecnologias-chave para Frontend com Next.js ", component: <FrontendTecnologiasNextjs /> },
+    { title: "Backend com JavaScript NodeJS", component: <BackendNodeJS /> },
+    { title: "MySQL vs ORM", component: <MySQLvsORM /> },
+    { title: "Frontend com ReactJS", component: <FrontendTecnologiasReactjs /> },
+    { title: "Design UI e UX em ReactJS", component: <DesignUIUX /> },
+    { title: "Frontend com NextJS", component: <FrontendTecnologiasNextjs /> },
+    { title: "Express HTML server e express EJS server", component: <ExpressServersDifference /> },
+    { title: "Comandos GitHub", component: <GitCommands /> },
   ];
 
 
@@ -66,32 +78,27 @@ const Projetos = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <ContainerLayout>
-          <SideBar></SideBar>
-          <Header></Header>
-          <Main>
-            <ContainerStyle>
+        <MainLayout>
+          <SideBarLayout></SideBarLayout>
+          <HeaderLayout></HeaderLayout>
+          <MainContentLayout>
+            <DiarioDevMainContainer>
               {sections.map((section, index) => (
                 <div key={index}>
-                  <h3 className="h3Center"
+                  <Title
+                    className={`h3Center ${section.title} ${visibleSections[index] ? "active" : ""}`}
                     onClick={() => toggleSection(index)}
-                    style={{
-                      cursor: "pointer",
-                      color: visibleSections[index] ? "blue" : "black",
-                    }}
                   >
-                    {section.title}
-                  </h3>
-                  {visibleSections[index] && (
-                    <div>
-                      {section.component}
-                    </div>
-                  )}
+                    {section.title} {visibleSections[index] ? "▲" : "▼"}
+                  </Title>
+                  <CollapsibleContent isOpen={visibleSections[index]}>
+                    {section.component}
+                  </CollapsibleContent>
                 </div>
               ))}
-            </ContainerStyle>
-          </Main>
-        </ContainerLayout>
+            </DiarioDevMainContainer>
+          </MainContentLayout>
+        </MainLayout>
       )}
     </>
   );
diff --git a/src/pages/index.jsx b/src/pages/index.jsx
index 55ab4cd..72f77a3 100644
--- a/src/pages/index.jsx
+++ b/src/pages/index.jsx
@@ -1,12 +1,13 @@
-import { useState, useEffect } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-
-import { ContainerLayout, ContainerStyle, H1 } from "@/components/home";
 import { useGlobalState } from "../context/GlobalStateContext";
 
+import Title from "@/components/common/title";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
+
 const Layout = () => {
   const { isLoaded } = useGlobalState();
 
@@ -36,13 +37,13 @@ const Layout = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <ContainerLayout>
-          <Header></Header>
-          <SideBar></SideBar>
-          <Main>
-            <ContainerStyle>
+        <MainLayout>
+          <SideBarLayout></SideBarLayout>
+          <HeaderLayout></HeaderLayout>
+          <MainContentLayout>
+            <MainContent>
               <div>
-                <H1>Desenvolvimento de Portfólio Pessoal Frontend e Backend</H1><br />
+                <Title>Desenvolvimento de Portfólio Pessoal Frontend e Backend</Title><br />
                 <p style={{ lineHeight: "28px", fontSize: "16px" }}>Este projeto é o meu <strong>portfólio pessoal</strong> desenvolvido com <strong>Next.js</strong> e <strong>ReactJS</strong>, onde apresento minhas habilidades tanto no <strong>frontend</strong> quanto no <strong>backend</strong>. O objetivo principal do projeto é demonstrar minha capacidade de construir <strong>sites modernos e funcionais</strong>, com foco em <strong>SEO, performance</strong> e uma experiência de usuário otimizada.</p><br />
                 <ul style={{ padding: "0 0 0 30px", lineHeight: "28px" }}>
                   <li><strong>Estrutura de Rotas:</strong> O site utiliza a estrutura de <strong>páginas do Next.js</strong> para definir rotas de forma simples, sem a necessidade de funções como getServerSideProps ou getStaticProps, pois o projeto é focado em apresentar meu trabalho de maneira ágil e prática.</li><br />
@@ -57,9 +58,9 @@ const Layout = () => {
                   <span>Pesquiso no <span style={{ fontSize: "20px", color: "blue", fontWeight: "800" }}>G</span><span style={{ fontSize: "20px", color: "red", fontWeight: "800" }}>o</span><span style={{ fontSize: "20px", color: "#fbbc05", fontWeight: "800" }}>o</span><span style={{ fontSize: "20px", color: "blue", fontWeight: "800" }}>g</span><span style={{ fontSize: "20px", color: "green", fontWeight: "800" }}>l</span><span style={{ fontSize: "20px", color: "red", fontWeight: "800" }}>e</span>: <a style={{ color: "blue" }} href="https://www.google.com/search?q=https://portfolio-projects-production.up.railway.app" target="_blank" rel="noopener noreferrer">Buscar pagina no Google</a></span>
                 </div><br /><br /><br />
               </div>
-            </ContainerStyle>
-          </Main>
-        </ContainerLayout>
+            </MainContent>
+          </MainContentLayout>
+        </MainLayout>
       )}
     </>
   );
diff --git a/src/pages/projetos/carousel/index.jsx b/src/pages/projetos/carousel/index.jsx
index ca419d4..27b2b21 100644
--- a/src/pages/projetos/carousel/index.jsx
+++ b/src/pages/projetos/carousel/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4 } from "@/components/projetos/carousel/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Carousel = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,13 @@ const Carousel = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/carousel.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar ></SideBar>
-        <Header ></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Carousel de Imagens com Controles Personalizados - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+
+      <MainLayout>
+        <SideBarLayout ></SideBarLayout>
+        <HeaderLayout ></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-carousel" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Carousel de Imagens com Controles Personalizados - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://carousel.up.railway.app/" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -74,9 +78,9 @@ const Carousel = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/catalogo/index.jsx b/src/pages/projetos/catalogo/index.jsx
index 1e1620f..eceb027 100644
--- a/src/pages/projetos/catalogo/index.jsx
+++ b/src/pages/projetos/catalogo/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4 } from "@/components/projetos/catalogo/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Carousel = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,12 @@ const Carousel = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/catalogo.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar ></SideBar>
-        <Header ></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Catálogo de Carros - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+      <MainLayout>
+        <SideBarLayout ></SideBarLayout>
+        <HeaderLayout ></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-catalogo" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Catálogo de Carros - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/front-end/catalogo" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -86,9 +89,9 @@ const Carousel = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/dataAnalysisTwitter/index.jsx b/src/pages/projetos/dataAnalysisTwitter/index.jsx
index f37cfff..0bb5497 100644
--- a/src/pages/projetos/dataAnalysisTwitter/index.jsx
+++ b/src/pages/projetos/dataAnalysisTwitter/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4 } from "@/components/projetos/dataAnalysis/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Carousel = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,13 @@ const Carousel = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Análise Completa do Projeto de Coleta e Análise de Dados no Twitter usando Puppeteer e OpenAI - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-dataAnalysisTwitter" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Análise Completa do Projeto de Coleta e Análise de Dados no Twitter usando Puppeteer e OpenAI - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://analyze-feelings-twitter.up.railway.app/home" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -84,9 +88,9 @@ const Carousel = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/imageGenerator/index.jsx b/src/pages/projetos/imageGenerator/index.jsx
index b7f1644..f4610a4 100644
--- a/src/pages/projetos/imageGenerator/index.jsx
+++ b/src/pages/projetos/imageGenerator/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/imageGenerator/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Portfolio = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,12 @@ const Portfolio = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/imageGeneration.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Gerador de Imagens com Visualização Ampliada - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-imageGenerator" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Gerador de Imagens com Visualização Ampliada - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://image-generation.up.railway.app/home" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -84,9 +87,9 @@ const Portfolio = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/index.jsx b/src/pages/projetos/index.jsx
index 6cdecd3..50f577f 100644
--- a/src/pages/projetos/index.jsx
+++ b/src/pages/projetos/index.jsx
@@ -1,8 +1,8 @@
-import { useState, useEffect } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
+import Head from "next/head";
 import Image from 'next/image';
+import Link from "next/link";
+import { useGlobalState } from "../../context/GlobalStateContext";
+
 import portfolioImg from "../../assets/images/portfolio.png";
 import stripelogo from "../../assets/images/stripeLogo.png";
 import carousel from "../../assets/images/carousel.png";
@@ -16,10 +16,6 @@ import ytmp4 from "../../assets/images/ytmp4.png";
 import cursoOline from "../../assets/images/curso-online.png";
 import ytAnalyzeVideo from "../../assets/images/yt-analyze-video.png";
 
-import Head from "next/head";
-import Link from "next/link";
-import { useGlobalState } from "../../context/GlobalStateContext";
-
 import { portfolioImgBlur } from "@/utils/portfolio";
 import { stripeImgBlur } from "@/utils/stripe";
 import { carouseImgBlur } from "@/utils/carousel";
@@ -32,10 +28,13 @@ import { ytmp3ImgBlur } from "@/utils/ytmp3";
 import { ytmp4ImgBlur } from "@/utils/ytmp4";
 import { cursoOnlineImgBlur } from "@/utils/ytmp4";
 
-import { GridContainer, ContainerStyle } from "@/components/projetos/style";
-import { ContainerLayout } from "@/components/home";
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
+
+import { GridContainer } from "@/components/projetos/style";
 
-// 1. Efeito de redimensionamento da tela
 const Projetos = () => {
   const { isLoaded } = useGlobalState();
 
@@ -86,25 +85,76 @@ const Projetos = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <ContainerLayout>
-          <SideBar></SideBar>
-          <Header></Header>
-          <Main>
-            <ContainerStyle onContextMenu={(e) => e.preventDefault()}>
+        <MainLayout>
+          <SideBarLayout></SideBarLayout>
+          <HeaderLayout></HeaderLayout>
+          <MainContentLayout>
+            <MainContent onContextMenu={(e) => e.preventDefault()}>
               <h1 style={{ color: "323f4b" }}>Oi! 👋</h1>
               <p style={{ fontSize: "20px", color: "323f4b", lineHeight: "32px" }}>Este portfólio representa a síntese da minha jornada em desenvolvimento web e backend, demonstrando minha experiência com ReactJS no frontend e Express no backend para a construção de aplicações modernas e eficientes.</p>
               <GridContainer>
                 <div className="container-item">
-                  <Link href="/projetos/portfolio">
-                    <Image src={portfolioImg} placeholder="blur" blurDataURL={portfolioImgBlur} alt="img" draggable={false} className="img-projetos" />
+                  <Link href="/projetos/playerVideoCustomizado">
+                    <Image src={youtube} placeholder="blur" blurDataURL={youtubeImgBlur} alt="img" draggable={false} className="img-projetos" />
                     <div className="item">
                       <div className="sub-item">
-                        <div>
+                        <div className="tech">
                           <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React</span>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Styled-components</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
                         </div>
-                        <h2 className="item-h2">Portfolio</h2>
+                        <h2 className="item-h2">Custom Video Player</h2>
+                        <p className="item-p">estudos e aprendizado</p>
+                        <p>⭐⭐⭐⭐⭐ 🚀</p>
+                      </div>
+                    </div>
+                  </Link>
+                </div>
+                <div className="container-item">
+                  <Link href="/projetos/vendasCurso">
+                    <Image src={cursoOline} placeholder="blur" blurDataURL={cursoOnlineImgBlur} alt="img" draggable={false} className="img-projetos" />
+                    <div className="item">
+                      <div className="sub-item">
+                        <div className="tech">
+                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React Router DOM</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Context API</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Axios </span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT-Decode</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Styled Components</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> LocalStorage </span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js + Express</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> PostgreSQL</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT (JSON Web Token) </span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Pagar.me API</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.io</span>
+                        </div>
+                        <h2 className="item-h2">Plataforma vendas cursos online</h2>
+                        <p>⭐⭐⭐⭐⭐ 🚀</p>
+                      </div>
+                    </div>
+                  </Link>
+                </div>
+                <div className="container-item">
+                  <Link href="/projetos/dataAnalysisTwitter">
+                    <Image src={analyzeFeelings} placeholder="blur" blurDataURL={analyzeImgBlur} alt="img" draggable={false} className="img-projetos" />
+                    <div className="item">
+                      <div className="sub-item">
+                        <div className="tech">
+                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer-Extra</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI API</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Frontend (HTML, CSS, JavaScript)</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Heroku</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>archiver</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>unzipper</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI</span>
+                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>path</span>
+                        </div>
+                        <h2 className="item-h2">data analysis tedency</h2>
                         <p className="item-p">estudos e aprendizado</p>
                         <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
@@ -167,32 +217,6 @@ const Projetos = () => {
                     </div>
                   </Link>
                 </div>
-                <div className="container-item">
-                  <Link href="/projetos/dataAnalysisTwitter">
-                    <Image src={analyzeFeelings} placeholder="blur" blurDataURL={analyzeImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer-Extra</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Frontend (HTML, CSS, JavaScript)</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Heroku</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>archiver</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>unzipper</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>path</span>
-                        </div>
-                        <h2 className="item-h2">data analysis tedency</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
-                      </div>
-                    </div>
-                  </Link>
-                </div>
                 <div className="container-item">
                   <Link href="/projetos/streamDolby">
                     <Image src={stream} placeholder="blur" blurDataURL={streamImgBlur} alt="img" draggable={false} className="img-projetos" />
@@ -235,22 +259,6 @@ const Projetos = () => {
                     </div>
                   </Link>
                 </div>
-                <div className="container-item">
-                  <Link href="/projetos/playerVideoCustomizado">
-                    <Image src={youtube} placeholder="blur" blurDataURL={youtubeImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
-                        </div>
-                        <h2 className="item-h2">Custom Video Player</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
-                      </div>
-                    </div>
-                  </Link>
-                </div>
                 <div className="container-item">
                   <Link href="/projetos/catalogo">
                     <Image src={catalogo} placeholder="blur" blurDataURL={catalogoImgBlur} alt="img" draggable={false} className="img-projetos" />
@@ -309,32 +317,6 @@ const Projetos = () => {
                     </div>
                   </Link>
                 </div>
-                <div className="container-item">
-                  <Link href="/projetos/vendasCurso">
-                    <Image src={cursoOline} placeholder="blur" blurDataURL={cursoOnlineImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React Router DOM</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Context API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Axios </span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT-Decode</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Styled Components</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> LocalStorage </span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js + Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> PostgreSQL</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT (JSON Web Token) </span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Pagar.me API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.io</span>
-                        </div>
-                        <h2 className="item-h2">Plataforma vendas cursos online</h2>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
-                      </div>
-                    </div>
-                  </Link>
-                </div>
                 <div className="container-item">
                   <Link href="/projetos/ytformp3">
                     <Image src={ytmp3} placeholder="blur" blurDataURL={ytmp3ImgBlur} alt="img" draggable={false} className="img-projetos" />
@@ -375,10 +357,27 @@ const Projetos = () => {
                     </div>
                   </Link>
                 </div>
+                <div className="container-item">
+                  <Link href="/projetos/portfolio">
+                    <Image src={portfolioImg} placeholder="blur" blurDataURL={portfolioImgBlur} alt="img" draggable={false} className="img-projetos" />
+                    <div className="item">
+                      <div className="sub-item">
+                        <div>
+                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React</span>
+                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Styled-components</span>
+                        </div>
+                        <h2 className="item-h2">Portfolio</h2>
+                        <p className="item-p">estudos e aprendizado</p>
+                        <p>⭐⭐⭐⭐⭐ 🚀</p>
+                      </div>
+                    </div>
+                  </Link>
+                </div>
               </GridContainer>
-            </ContainerStyle>
-          </Main>
-        </ContainerLayout>
+            </MainContent>
+          </MainContentLayout>
+        </MainLayout>
       )}
     </>
   );
diff --git a/src/pages/projetos/playerVideoCustomizado/index.jsx b/src/pages/projetos/playerVideoCustomizado/index.jsx
index bb8289a..f538b66 100644
--- a/src/pages/projetos/playerVideoCustomizado/index.jsx
+++ b/src/pages/projetos/playerVideoCustomizado/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/youtube/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Portfolio = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,14 +36,18 @@ const Portfolio = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/youtube.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Player de Vídeo Personalizado - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-playerVideoCustomizado" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Player de Vídeo Personalizado - <span style={{ color: "blue" }}>mais...</span></Title>
+            <P>
+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-mobile" target="_blank">🌎 Link do Projeto mobile</a>
+            </P>
             <P>
-              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-mobile" target="_blank">🌎 Link do Projeto</a>
+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-desktop" target="_blank">🌎 Link do Projeto desktop</a>
             </P>
             {isToggleOpen && (
               <>
@@ -102,9 +109,9 @@ const Portfolio = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/portfolio/index.jsx b/src/pages/projetos/portfolio/index.jsx
index 7e558b4..e27e81e 100644
--- a/src/pages/projetos/portfolio/index.jsx
+++ b/src/pages/projetos/portfolio/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/portfolio/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Portfolio = () => {
   const [isToggleOpen01, setIsToggleOpen01] = useState(false);
@@ -34,18 +37,13 @@ const Portfolio = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/portfolio.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen01 ? setIsToggleOpen01(false) : setIsToggleOpen01(true)}>Projeto: Player de Vídeo Customizado - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
-            <P>
-              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-mobile" target="_blank">🌎 Link do Projeto mobile</a>
-            </P>
-            <P>
-              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/yt-desktop" target="_blank">🌎 Link do Projeto desktop</a>
-            </P>
+
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-portfolio" onClick={() => isToggleOpen01 ? setIsToggleOpen01(false) : setIsToggleOpen01(true)}>Projeto: Player de Vídeo Customizado - <span style={{ color: "blue" }}>mais...</span></Title>
             {isToggleOpen01 && (
               <>
                 <div>
@@ -119,9 +117,8 @@ const Portfolio = () => {
               </>
             )}
             {/* ---------------------------------------------------------------------------- */}
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen02 ? setIsToggleOpen02(false) : setIsToggleOpen02(true)}>Projeto: Catálogo de Carros  - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
             <P>
-              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app/front-end/catalogo" target="_blank">🌎 Link do Projeto</a>
+              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://portfolio-study-production.up.railway.app" target="_blank">🌎 Link do Projeto</a>
             </P>
             {isToggleOpen02 && (
               <>
@@ -167,9 +164,9 @@ const Portfolio = () => {
                 </Ul>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/streamDolby/index.jsx b/src/pages/projetos/streamDolby/index.jsx
index 5e855a0..347e171 100644
--- a/src/pages/projetos/streamDolby/index.jsx
+++ b/src/pages/projetos/streamDolby/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/streamDolby/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Stripe = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,13 @@ const Stripe = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/stream.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Sistema de Controle e Visualização de Transmissões ao Vivo - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-streamDolby" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Sistema de Controle e Visualização de Transmissões ao Vivo - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://dolby-io-streaming.up.railway.app" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -88,9 +92,9 @@ const Stripe = () => {
                 <P>Este projeto é um sistema robusto para o controle de transmissões ao vivo, implementado com boas práticas de segurança e gerenciamento de dados. As integrações com APIs e o uso de GraphQL trazem flexibilidade para monitoramento, enquanto Firebase e Millicast facilitam o armazenamento e controle das transmissões. Este é um exemplo sólido de um sistema backend voltado para escalabilidade e modularidade, ideal para plataformas que demandam uma estrutura sólida e integração de dados em tempo real.</P>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/stripe/index.jsx b/src/pages/projetos/stripe/index.jsx
index 55a882a..ca1d187 100644
--- a/src/pages/projetos/stripe/index.jsx
+++ b/src/pages/projetos/stripe/index.jsx
@@ -1,11 +1,15 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/stripe/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
+
 
 const Stripe = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +37,12 @@ const Stripe = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/stripeLogo.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Plataforma de Autenticação e Pagamentos com STRIPE - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-stripe" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Plataforma de Autenticação e Pagamentos com STRIPE - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://stripe.up.railway.app/login" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -96,9 +100,9 @@ const Stripe = () => {
                 <P>Este projeto combina o backend seguro e escalável com um front-end servindo HTML, permitindo uma interface de usuário direta e eficaz para cadastro, autenticação e gerenciamento de transações. A integração de várias tecnologias, como Firebase, JWT, Stripe e o envio direto de arquivos HTML, faz deste um sistema completo e preparado para expansão.</P>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/vendasCurso/index.jsx b/src/pages/projetos/vendasCurso/index.jsx
index e0a055b..2f697f9 100644
--- a/src/pages/projetos/vendasCurso/index.jsx
+++ b/src/pages/projetos/vendasCurso/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4 } from "@/components/projetos/catalogo/styles";
+import Title from "@/components/common/title";
+
+import { P, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const CursoOline = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,12 @@ const CursoOline = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/cursoOnline.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Vendas de cursos - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-vendasCurso" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: Vendas de cursos - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://frontend-venda.up.railway.app" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -105,9 +108,9 @@ const CursoOline = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/ytAnalyseVideo/index.jsx b/src/pages/projetos/ytAnalyseVideo/index.jsx
index 3882764..b0a96a1 100644
--- a/src/pages/projetos/ytAnalyseVideo/index.jsx
+++ b/src/pages/projetos/ytAnalyseVideo/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/ytformp3/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Ytformp3 = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,12 @@ const Ytformp3 = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp3.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Transcrever o áudio de vídeos do YouTube e resumir - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-ytAnalyseVideo" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Transcrever o áudio de vídeos do YouTube e resumir - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://yt-analyze-video-frontend.up.railway.app" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -97,9 +100,9 @@ const Ytformp3 = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/ytformp3/index.jsx b/src/pages/projetos/ytformp3/index.jsx
index 1c0597c..0c7b4d6 100644
--- a/src/pages/projetos/ytformp3/index.jsx
+++ b/src/pages/projetos/ytformp3/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/ytformp3/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Ytformp3 = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,12 @@ const Ytformp3 = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp3.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Download de Áudio do YouTube - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-ytformp3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Download de Áudio do YouTube - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://yt-download-mp3-frontend.up.railway.app/" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -88,9 +91,9 @@ const Ytformp3 = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/ytformp4Cloud/index.jsx b/src/pages/projetos/ytformp4Cloud/index.jsx
index 563c0a0..3fd1c90 100644
--- a/src/pages/projetos/ytformp4Cloud/index.jsx
+++ b/src/pages/projetos/ytformp4Cloud/index.jsx
@@ -1,11 +1,14 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/ytformp4/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
 const Ytformp4 = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +36,13 @@ const Ytformp4 = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp4.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: YouTube Video Downloader e combiner (fluent-ffmpeg) - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-ytformp4Cloud" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: YouTube Video Downloader e combiner (fluent-ffmpeg) - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://ytmp4-frontend.up.railway.app" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -90,9 +94,9 @@ const Ytformp4 = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/projetos/ytformp4Location/index.jsx b/src/pages/projetos/ytformp4Location/index.jsx
index a83b0c1..039df5d 100644
--- a/src/pages/projetos/ytformp4Location/index.jsx
+++ b/src/pages/projetos/ytformp4Location/index.jsx
@@ -1,11 +1,15 @@
 import { useState } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
 import Head from "next/head";
-import { ContainerLayout } from "@/components/home";
 
-import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/ytformp4/styles";
+import Title from "@/components/common/title";
+
+import { P, H3, H4, Ul, Li } from "@/components/projetos/style";
+
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
+
 
 const Ytformp4 = () => {
   const [isToggleOpen, setIsToggleOpen] = useState(false);
@@ -33,12 +37,13 @@ const Ytformp4 = () => {
         <meta property="twitter:description" content="Olá! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplicações robustas." />
         <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp4.jpg" />
       </Head>
-      <ContainerLayout>
-        <SideBar></SideBar>
-        <Header></Header>
-        <Main>
-          <Container>
-            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Download de Vídeo do YouTube - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
+
+      <MainLayout>
+        <SideBarLayout></SideBarLayout>
+        <HeaderLayout></HeaderLayout>
+        <MainContentLayout>
+          <MainContent>
+            <Title className="title-ytformp4Location" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>🎥 Projeto: Download de Vídeo do YouTube - <span style={{ color: "blue" }}>mais...</span></Title>
             <P>
               <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://ytmp4-frontend.up.railway.app/" target="_blank">🌎 Link do Projeto</a>
             </P>
@@ -108,7 +113,7 @@ const Ytformp4 = () => {
                   <h1>2. Estrutura do Frontend</h1>
                   <P><strong>Carregamento com Feedback Visual</strong></P>
                   <Ul>
-                    <Li>A animação de carregamento (#loadingContainer) fornece uma experiência de usuário fluida durante o processamento de vídeos.</Li>
+                    <Li>A animação de carregamento (#loadingMainContent) fornece uma experiência de usuário fluida durante o processamento de vídeos.</Li>
                     <Li><strong>Características:</strong></Li>
                     <Li style={{ marginLeft: "30px" }}>Utiliza um círculo animado com transição de opacidade, o que torna a animação visualmente agradável.</Li>
                     <Li style={{ marginLeft: "30px" }}>Oculta o elemento carregador inicialmente com display: none.</Li>
@@ -143,9 +148,9 @@ const Ytformp4 = () => {
                 </div>
               </>
             )}
-          </Container>
-        </Main>
-      </ContainerLayout>
+          </MainContent>
+        </MainContentLayout>
+      </MainLayout>
     </>
   );
 };
diff --git a/src/pages/sobre/index.jsx b/src/pages/sobre/index.jsx
index 4b9f071..cf13cda 100644
--- a/src/pages/sobre/index.jsx
+++ b/src/pages/sobre/index.jsx
@@ -1,42 +1,13 @@
-import { useState, useEffect } from "react";
-import Main from "@/components/layout/main";
-import SideBar from "@/components/layout/sideBar";
-import Header from "@/components/layout/header";
-// import whatsapp2 from "@/public/whatsapp2.png";
 import Image from 'next/image';
 import Head from "next/head";
 import { useGlobalState } from "../../context/GlobalStateContext";
 
-import portfolioImg from "../../assets/images/portfolio.png";
-import stripelogo from "../../assets/images/stripeLogo.png";
-import carousel from "../../assets/images/carousel.png";
-import analyzeFeelings from "../../assets/images/analyze-feelings.png";
-import stream from "../../assets/images/stream.png";
-import youtube from "../../assets/images/youtube.png";
-import imageGeneration from "../../assets/images/imageGeneration.png";
-import catalogo from "../../assets/images/catalogo.png";
-import ytmp3 from "../../assets/images/ytmp3.png";
-import ytmp4 from "../../assets/images/ytmp4.png";
+import { MainLayout, MainContent } from "@/components/layout/mainLayout";
+import SideBarLayout from "@/components/layout/sideBarLayout";
+import HeaderLayout from "@/components/layout/headerLayout";
+import MainContentLayout from "@/components/layout/contentLayout";
 
-import Link from "next/link";
 
-import { portfolioImgBlur } from "@/utils/portfolio";
-import { stripeImgBlur } from "@/utils/stripe";
-import { carouseImgBlur } from "@/utils/carousel";
-import { analyzeImgBlur } from "@/utils/analyze";
-import { streamImgBlur } from "@/utils/stream";
-import { imageGenerationImgBlur } from "@/utils/imageGeneration";
-import { youtubeImgBlur } from "@/utils/youtube";
-import { catalogoImgBlur } from "@/utils/catalogo";
-import { ytmp3ImgBlur } from "@/utils/ytmp3";
-import { ytmp4ImgBlur } from "@/utils/ytmp4";
-import { cursoOnlineImgBlur } from "@/utils/ytmp4";
-
-import { ContainerLayout } from "@/components/home";
-import { ContainerStyle, H1 } from "@/components/sobre";
-
-
-// 1. Efeito de redimensionamento da tela
 const Projetos = () => {
   const { isLoaded } = useGlobalState();
 
@@ -86,11 +57,11 @@ const Projetos = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <ContainerLayout>
-          <SideBar></SideBar>
-          <Header></Header>
-          <Main>
-            <ContainerStyle>
+        <MainLayout>
+          <SideBarLayout></SideBarLayout>
+          <HeaderLayout></HeaderLayout>
+          <MainContentLayout>
+            <MainContent>
               <div>
                 <p style={{ lineHeight: "28px", fontSize: "18px" }}> <strong style={{ fontSize: "20px" }}> Sou um desenvolvedor Full Stack  </strong> apaixonado por tecnologia e inovação. Minha jornada na programação é moldada pelos projetos que desenvolvi, cada um deles representando um novo aprendizado e a aplicação de diferentes tecnologias para resolver problemas reais. Minha experiência é prática, baseada em desafios concretos que exigiram desde a construção de interfaces modernas e responsivas até a implementação de sistemas robustos no backend.</p><br />
                 <h2>Minhas Habilidades</h2><br />
@@ -141,9 +112,9 @@ const Projetos = () => {
                   {/* <p style={{ paddingLeft: "20px" }}>(81) 9 8760-4690</p> */}
                 </div>
               </div>
-            </ContainerStyle>
-          </Main>
-        </ContainerLayout>
+            </MainContent>
+          </MainContentLayout>
+        </MainLayout>
       )}
     </>
   );
