diff --git a/src/components/buildProject/buildProjectMainContainer.js b/src/components/buildProject/buildProjectMainContainer.js
index fb9d753..1a81e98 100644
--- a/src/components/buildProject/buildProjectMainContainer.js
+++ b/src/components/buildProject/buildProjectMainContainer.js
@@ -2,8 +2,8 @@ import styled, { css } from "styled-components";
 
 export const BuildProjectMainContainer = styled.div`
 
-padding-top: 20px;
-user-select: none;
+/* user-select: none; */
+padding: 20px 10px;
 
 & .h3Center-buildProject {
   margin-bottom: 15px;
diff --git a/src/components/buildProject/saaSforDoctors/index.jsx b/src/components/buildProject/saaSforDoctors/index.jsx
index f02b427..b58ef71 100644
--- a/src/components/buildProject/saaSforDoctors/index.jsx
+++ b/src/components/buildProject/saaSforDoctors/index.jsx
@@ -82,48 +82,48 @@ const SaaSforDoctors = () => {
 
       <h3 style={sectionTitle}>3. Funcionalidades do Agente</h3>
       <ul style={list}>
-        <li><span style={stepNumber}>4</span>O agente também precisa entender áudio, imagens e documentos.</li>
-        <li><span style={stepNumber}>5</span>O agente consegue enviar imagens dentro de um banco de dados do SaaS que são vinculadas aos serviços que ele oferece.</li>
-        <li><span style={stepNumber}>6</span>Criação automática de grupo de WhatsApp, onde terá o telefone do paciente e outros agentes como psicólogo, nutricionista, etc.</li>
-        <li><span style={stepNumber}>7</span>Configuração dos agentes para enviar mensagens de forma automática em horários pré-definidos.</li>
+        <li style={listItem} ><span style={stepNumber}>4</span>O agente também precisa entender áudio, imagens e documentos.</li>
+        <li style={listItem}><span style={stepNumber}>5</span>O agente consegue enviar imagens dentro de um banco de dados do SaaS que são vinculadas aos serviços que ele oferece.</li>
+        <li style={listItem}><span style={stepNumber}>6</span>Criação automática de grupo de WhatsApp, onde terá o telefone do paciente e outros agentes como psicólogo, nutricionista, etc.</li>
+        <li style={listItem}><span style={stepNumber}>7</span>Configuração dos agentes para enviar mensagens de forma automática em horários pré-definidos.</li>
       </ul>
 
       <h3 style={sectionTitle}>4. CRM - Funcionalidades</h3>
       <ul style={list}>
-        <li><span style={stepNumber}>8</span>Respostas humanizadas e personalizadas, sem enviar uma mensagem a cada mensagem do lead.</li>
-        <li><span style={stepNumber}>9</span>Entendimento de áudio, imagem, documento.</li>
-        <li><span style={stepNumber}>10</span>Envio de imagens (sem ser link).</li>
-        <li><span style={stepNumber}>11</span>Integração com calendário e envio de lembretes de consulta.</li>
-        <li><span style={stepNumber}>12</span>Envio de dicas baseado no cadastro do lead e no que ele gosta.</li>
-        <li><span style={stepNumber}>13</span>Identificação de se o lead já é paciente ou não.</li>
+        <li style={listItem}><span style={stepNumber}>8</span>Respostas humanizadas e personalizadas, sem enviar uma mensagem a cada mensagem do lead.</li>
+        <li style={listItem}><span style={stepNumber}>9</span>Entendimento de áudio, imagem, documento.</li>
+        <li style={listItem}><span style={stepNumber}>10</span>Envio de imagens (sem ser link).</li>
+        <li style={listItem}><span style={stepNumber}>11</span>Integração com calendário e envio de lembretes de consulta.</li>
+        <li style={listItem}><span style={stepNumber}>12</span>Envio de dicas baseado no cadastro do lead e no que ele gosta.</li>
+        <li style={listItem}><span style={stepNumber}>13</span>Identificação de se o lead já é paciente ou não.</li>
       </ul>
 
       <h3 style={sectionTitle}>5. Agentes Específicos</h3>
       <ul style={list}>
-        <li><span style={stepNumber}>14</span>Agente psicólogo: envio de mensagens motivacionais diárias.</li>
-        <li><span style={stepNumber}>15</span>Agente nutricionista: envio de mensagens e recomendações alimentares com base nas fotos do paciente.</li>
-        <li><span style={stepNumber}>16</span>Agente personal trainer: envio de treinos e mensagens motivacionais para o paciente.</li>
+        <li style={listItem}><span style={stepNumber}>14</span>Agente psicólogo: envio de mensagens motivacionais diárias.</li>
+        <li style={listItem}><span style={stepNumber}>15</span>Agente nutricionista: envio de mensagens e recomendações alimentares com base nas fotos do paciente.</li>
+        <li style={listItem}><span style={stepNumber}>16</span>Agente personal trainer: envio de treinos e mensagens motivacionais para o paciente.</li>
       </ul>
 
       <h3 style={sectionTitle}>6. Dashboard e Monitoramento</h3>
       <ul style={list}>
-        <li><span style={stepNumber}>17</span>Dashboard para monitoramento da quantidade de leads e mensagens enviadas.</li>
-        <li><span style={stepNumber}>18</span>Check-list semanal para avaliar a semana do paciente.</li>
+        <li style={listItem}><span style={stepNumber}>17</span>Dashboard para monitoramento da quantidade de leads e mensagens enviadas.</li>
+        <li style={listItem}><span style={stepNumber}>18</span>Check-list semanal para avaliar a semana do paciente.</li>
       </ul>
 
       <h3 style={sectionTitle}>7. Funcionalidades Avançadas</h3>
       <ul style={list}>
-        <li><span style={stepNumber}>19</span>Cadastro de serviços e valores com fotos de antes e depois para o agente enviar automaticamente.</li>
-        <li><span style={stepNumber}>20</span>Cadastro completo do lead com exames e informações de saúde para o agente usar em sua interação.</li>
-        <li><span style={stepNumber}>21</span>Integração com Instagram, WhatsApp e outras plataformas para comunicação.</li>
-        <li><span style={stepNumber}>22</span>Relatório financeiro e gerenciamento de custos com tokens de IA e integração com plataformas de pagamento.</li>
+        <li style={listItem}><span style={stepNumber}>19</span>Cadastro de serviços e valores com fotos de antes e depois para o agente enviar automaticamente.</li>
+        <li style={listItem}><span style={stepNumber}>20</span>Cadastro completo do lead com exames e informações de saúde para o agente usar em sua interação.</li>
+        <li style={listItem}><span style={stepNumber}>21</span>Integração com Instagram, WhatsApp e outras plataformas para comunicação.</li>
+        <li style={listItem}><span style={stepNumber}>22</span>Relatório financeiro e gerenciamento de custos com tokens de IA e integração com plataformas de pagamento.</li>
       </ul>
 
       <h3 style={sectionTitle}>Resumo das Funcionalidades</h3>
       <ul style={list}>
-        <li><span style={stepNumber}>23</span>Automatização de tarefas com integração de IA.</li>
-        <li><span style={stepNumber}>24</span>Integração com sistemas de pagamento, faturamento e emissão de notas fiscais.</li>
-        <li><span style={stepNumber}>25</span>Interface amigável e fácil de operar para o médico e seus pacientes.</li>
+        <li style={listItem}><span style={stepNumber}>23</span>Automatização de tarefas com integração de IA.</li>
+        <li style={listItem}><span style={stepNumber}>24</span>Integração com sistemas de pagamento, faturamento e emissão de notas fiscais.</li>
+        <li style={listItem}><span style={stepNumber}>25</span>Interface amigável e fácil de operar para o médico e seus pacientes.</li>
       </ul>
     </div>
   );
diff --git a/src/components/buildProject/team/index.jsx b/src/components/buildProject/team/index.jsx
index 4a29ec8..2dd4095 100644
--- a/src/components/buildProject/team/index.jsx
+++ b/src/components/buildProject/team/index.jsx
@@ -1,27 +1,35 @@
-import { useState } from 'react';
+import { useState, useEffect } from 'react';
 import ProductOwnerDashboard from '../productOwnerDashboard';
+import ArchitectDashboard from '../architectDashboard';
+import BackendDeveloperDashboard from '../backendDeveloperDashboard';
+import FrontendDeveloperDashboard from '../frontendDeveloperDashboard';
+import DevOpsDashboard from '../devOpsDashboard';
+import NlpAudioImageDashboard from '../nlpAudioImageDashboard';
+import DesignUiUxDashboard from '../designUiUxDashboard';
+import GraphicDesignerDashboard from '../graphicDesignerDashboard';
+import QaAnalystDashboard from '../qaAnalystDashboard';
+import SecuritySpecialistDashboard from '../securitySpecialistDashboard';
+import CustomerSuccessDashboard from '../customerSuccessDashboard';
 
 const team = [
   {
     group: 'Gestão de Projeto',
     roles: [
-      'Product Owner / Gerente de Produto',
-      'Scrum Master / Gerente de Projetos',
+      'Product Owner / Gerente de Produto'
     ],
   },
   {
     group: 'Desenvolvimento',
     roles: [
       'Arquiteto de Software',
-      'Backend Developers (2 a 3)',
-      'Frontend Developers (2)',
-      'Engenheiro de DevOps / Infraestrutura',
+      'Backend Developer',
+      'Frontend Developer',
+      'Engenheiro de DevOps',
     ],
   },
   {
-    group: 'Inteligência Artificial e Machine Learning',
+    group: 'Inteligência Artificial',
     roles: [
-      'Engenheiro de Machine Learning / Cientista de Dados (1 a 2)',
       'Especialista em NLP e Processamento de Áudio/Imagem',
     ],
   },
@@ -41,15 +49,13 @@ const team = [
   {
     group: 'Segurança e Compliance',
     roles: [
-      'Especialista em Segurança da Informação',
-      'Consultor Jurídico (opcional, terceirizado)',
+      'Especialista em Segurança da Informação'
     ],
   },
   {
-    group: 'Suporte e Operações',
+    group: 'Suporte',
     roles: [
       'Customer Success / Suporte Técnico',
-      'Analista de Dados (opcional)',
     ],
   },
 ];
@@ -98,7 +104,7 @@ const styles = {
     maxWidth: '800px',
     // marginLeft: 'auto',
     // marginRight: 'auto',
-    color: '#2c3e50',
+    color: '#34495e',
   },
   roleList: {
     listStyleType: 'disc',
@@ -121,20 +127,45 @@ const styles = {
     color: '#2980b9',
     fontWeight: '600',
     cursor: 'pointer'
+  },
+  active: {
+    color: 'blue',
+    textDecoration: 'none'
   }
 };
 
 const roleComponentMap = {
   'Product Owner / Gerente de Produto': ProductOwnerDashboard,
-  // 'Scrum Master / Gerente de Projetos': ScrumMasterDashboard,
-  // 'Backend Developers (2 a 3)': BackendDevDashboard,
-  // Adicione os outros conforme forem criados
+  'Arquiteto de Software': ArchitectDashboard,
+  'Backend Developer': BackendDeveloperDashboard,
+  'Frontend Developer': FrontendDeveloperDashboard,
+  'Engenheiro de DevOps': DevOpsDashboard,
+  'Especialista em NLP e Processamento de Áudio/Imagem': NlpAudioImageDashboard,
+  'UI/UX Designer': DesignUiUxDashboard,
+  'Designer Gráfico': GraphicDesignerDashboard,
+  'Analista de QA / Testador': QaAnalystDashboard,
+  'Especialista em Segurança da Informação': SecuritySpecialistDashboard,
+  'Customer Success / Suporte Técnico': CustomerSuccessDashboard,
 };
 
 export default function TeamHeader() {
   const [activeGroupIndex, setActiveGroupIndex] = useState(0);
   const [selectedRole, setSelectedRole] = useState(null);
   console.log(selectedRole, " selectedRole");
+  console.log(window.innerWidth, " window.innerWidth");
+
+  useEffect(() => {
+    if (selectedRole && roleComponentMap[selectedRole]) {
+      if (window.scrollY === 0 && window.innerWidth <= 750) {
+        window.scrollTo({
+          top: 300,  // ajuste conforme preferir
+          behavior: 'smooth',
+        });
+      }
+    }
+  }, [selectedRole]);
+
+
 
   const handleRoleClick = (role) => {
     setSelectedRole(role);
@@ -180,7 +211,7 @@ export default function TeamHeader() {
             {team[activeGroupIndex].roles.map((role, i) => (
               <li
                 key={i}
-                style={styles.roleItem}
+                style={selectedRole === role ? { ...styles.roleItem, ...styles.active } : styles.roleItem}
                 onClick={() => handleRoleClick(role)}
               >
                 {role}
diff --git a/src/components/common/title.jsx b/src/components/common/title.jsx
index abf23f4..d0cddf8 100644
--- a/src/components/common/title.jsx
+++ b/src/components/common/title.jsx
@@ -1,9 +1,10 @@
 import styled from 'styled-components';
 
 const Title = styled.h3`
-  color: #34495e;
+  color: #2980b9;
   text-align: center;
   cursor: pointer;
+  user-select: none;
 
   &.title-carousel, 
   &.title-stripe,
diff --git a/src/components/diariodev/diarioDevMainContainer.js b/src/components/diariodev/diarioDevMainContainer.js
index daae0fd..22e7036 100644
--- a/src/components/diariodev/diarioDevMainContainer.js
+++ b/src/components/diariodev/diarioDevMainContainer.js
@@ -3,8 +3,8 @@ import styled, { css } from "styled-components";
 export const DiarioDevMainContainer = styled.div`
 
 width: 100%;
-padding-top: 20px;
 user-select: none;
+padding: 20px 10px;
 
 & .h3Center-diarioDev {
 text-align: center;
diff --git a/src/components/layout/sideBarLayout/index.jsx b/src/components/layout/sideBarLayout/index.jsx
index 45e3e78..5ed94c8 100644
--- a/src/components/layout/sideBarLayout/index.jsx
+++ b/src/components/layout/sideBarLayout/index.jsx
@@ -25,7 +25,7 @@ const SideBar = () => {
 
   const goHome = () => {
     router.push('/');
-    // setIsHamburguerOpen(prevState => !prevState);
+    setIsHamburguerOpen(prevState => !prevState);
   };
 
   useEffect(() => {
diff --git a/src/components/layout/sideBarLayout/styles.js b/src/components/layout/sideBarLayout/styles.js
index dd0e11f..ee85b6e 100644
--- a/src/components/layout/sideBarLayout/styles.js
+++ b/src/components/layout/sideBarLayout/styles.js
@@ -4,7 +4,7 @@ export const ContentWrapper = styled.div`
   position: sticky;
   /* flex-shrink: 0; */
   top: 0;
-  z-index: 10;
+  z-index: 20;
   /* height: 100vh; */
   width: 330px;
   min-width: 330px; /* Impede que a largura seja comprimida */
@@ -24,6 +24,8 @@ export const ContentWrapper = styled.div`
     position: fixed;
     height: 100vh;
     left: 0;
+    height: 100vh;       /* manter altura fixa */
+    overflow-y: auto;    /* scroll interno */
     transform: ${({ isHamburguerOpen }) => (isHamburguerOpen ? 'translateX(0)' : 'translateX(-100%)')};
   }
 
diff --git a/src/pages/build-project/index.jsx b/src/pages/build-project/index.jsx
index eda5826..b044565 100644
--- a/src/pages/build-project/index.jsx
+++ b/src/pages/build-project/index.jsx
@@ -6,6 +6,7 @@ import { MainLayout } from "@/components/layout/mainLayout";
 import SideBarLayout from "@/components/layout/sideBarLayout";
 import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
+import Overlay from "@/components/overlay";
 
 import Title from "@/components/common/title";
 
@@ -14,13 +15,17 @@ import { BuildProjectMainContainer, CollapsibleContent } from "@/components/buil
 import SaaSProjectGuide from "@/components/buildProject/saaSProjectGuide";
 import SaaSforDoctors from "@/components/buildProject/saaSforDoctors";
 import TeamHeader from "@/components/buildProject/team";
+import ModularCleanArchitecture from "@/components/buildProject/ModularCleanArchitecture";
 
 
 // lógica aqui
 const BuildProject = () => {
-  const { isLoaded } = useGlobalState();
+  const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
   const [visibleSections, setVisibleSections] = useState({});
 
+  // Função para fechar sidebar clicando fora
+  const handleOverlayClick = () => setIsHamburguerOpen(false);
+
   const toggleSection = (index) => {
     setVisibleSections((prev) => ({
       ...prev,
@@ -33,6 +38,7 @@ const BuildProject = () => {
     { title: "O que é um projeto SaaS?", component: <SaaSProjectGuide /> },
     { title: "Desenvolvimento de SaaS para Médicos com Plano de Emagrecimento", component: <SaaSforDoctors /> },
     { title: "Team", component: <TeamHeader /> },
+    { title: "Guia Completo do Ciclo de Vida do Projeto SaaS Médico: Do Planejamento à Entrega", component: <ModularCleanArchitecture /> },
   ];
 
   return (
@@ -60,27 +66,32 @@ const BuildProject = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <MainLayout>
-          <SideBarLayout></SideBarLayout>
-          <HeaderLayout></HeaderLayout>
-          <MainContentLayout>
-            <BuildProjectMainContainer>
-              {sections.map((section, index) => (
-                <>
-                  <div key={index}>
-                    <Title className="h3Center-buildProject"
-                      onClick={() => toggleSection(index)}>
-                      {section.title} {visibleSections[index] ? "▲" : "▼"}
-                    </Title>
-                    <CollapsibleContent isOpen={visibleSections[index]}>
-                      {section.component}
-                    </CollapsibleContent>
-                  </div>
-                </>
-              ))}
-            </BuildProjectMainContainer>
-          </MainContentLayout>
-        </MainLayout>
+        <>
+          {isHamburguerOpen && (
+            <Overlay onClick={handleOverlayClick}></Overlay>
+          )}
+          <MainLayout>
+            <SideBarLayout></SideBarLayout>
+            <HeaderLayout></HeaderLayout>
+            <MainContentLayout>
+              <BuildProjectMainContainer>
+                {sections.map((section, index) => (
+                  <>
+                    <div key={index}>
+                      <Title className="h3Center-buildProject"
+                        onClick={() => toggleSection(index)}>
+                        {section.title} {visibleSections[index] ? "▲" : "▼"}
+                      </Title>
+                      <CollapsibleContent isOpen={visibleSections[index]}>
+                        {section.component}
+                      </CollapsibleContent>
+                    </div>
+                  </>
+                ))}
+              </BuildProjectMainContainer>
+            </MainContentLayout>
+          </MainLayout>
+        </>
       )}
     </>
   );
diff --git a/src/pages/diario-dev/index.jsx b/src/pages/diario-dev/index.jsx
index 4a20dde..1e7825d 100644
--- a/src/pages/diario-dev/index.jsx
+++ b/src/pages/diario-dev/index.jsx
@@ -6,6 +6,7 @@ import { MainLayout } from "@/components/layout/mainLayout";
 import SideBarLayout from "@/components/layout/sideBarLayout";
 import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
+import Overlay from "@/components/overlay";
 
 import Title from "@/components/common/title";
 
@@ -25,9 +26,12 @@ import ExpressServersDifference from "@/components/diariodev/expressHtmlServervs
 
 // 1. Efeito de redimensionamento da tela
 const Projetos = () => {
-  const { isLoaded } = useGlobalState();
+  const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
   const [visibleSections, setVisibleSections] = useState({});
 
+  // Função para fechar sidebar clicando fora
+  const handleOverlayClick = () => setIsHamburguerOpen(false);
+
   const toggleSection = (index) => {
     setVisibleSections((prev) => ({
       ...prev,
@@ -78,27 +82,32 @@ const Projetos = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <MainLayout>
-          <SideBarLayout></SideBarLayout>
-          <HeaderLayout></HeaderLayout>
-          <MainContentLayout>
-            <DiarioDevMainContainer>
-              {sections.map((section, index) => (
-                <div key={index}>
-                  <Title
-                    className={`h3Center-diarioDev ${section.title} ${visibleSections[index] ? "active" : ""}`}
-                    onClick={() => toggleSection(index)}
-                  >
-                    {section.title} {visibleSections[index] ? "▲" : "▼"}
-                  </Title>
-                  <CollapsibleContent isOpen={visibleSections[index]}>
-                    {section.component}
-                  </CollapsibleContent>
-                </div>
-              ))}
-            </DiarioDevMainContainer>
-          </MainContentLayout>
-        </MainLayout>
+        <>
+          {isHamburguerOpen && (
+            <Overlay onClick={handleOverlayClick}></Overlay>
+          )}
+          <MainLayout>
+            <SideBarLayout></SideBarLayout>
+            <HeaderLayout></HeaderLayout>
+            <MainContentLayout>
+              <DiarioDevMainContainer>
+                {sections.map((section, index) => (
+                  <div key={index}>
+                    <Title
+                      className={`h3Center-diarioDev ${section.title} ${visibleSections[index] ? "active" : ""}`}
+                      onClick={() => toggleSection(index)}
+                    >
+                      {section.title} {visibleSections[index] ? "▲" : "▼"}
+                    </Title>
+                    <CollapsibleContent isOpen={visibleSections[index]}>
+                      {section.component}
+                    </CollapsibleContent>
+                  </div>
+                ))}
+              </DiarioDevMainContainer>
+            </MainContentLayout>
+          </MainLayout>
+        </>
       )}
     </>
   );
diff --git a/src/pages/index.jsx b/src/pages/index.jsx
index 72f77a3..77c43ce 100644
--- a/src/pages/index.jsx
+++ b/src/pages/index.jsx
@@ -7,9 +7,13 @@ import { MainLayout, MainContent } from "@/components/layout/mainLayout";
 import SideBarLayout from "@/components/layout/sideBarLayout";
 import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
+import Overlay from "@/components/overlay";
 
 const Layout = () => {
-  const { isLoaded } = useGlobalState();
+  const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
+
+  // Função para fechar sidebar clicando fora
+  const handleOverlayClick = () => setIsHamburguerOpen(false);
 
   return (
     <>
@@ -37,30 +41,35 @@ const Layout = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <MainLayout>
-          <SideBarLayout></SideBarLayout>
-          <HeaderLayout></HeaderLayout>
-          <MainContentLayout>
-            <MainContent>
-              <div>
-                <Title>Desenvolvimento de Portfólio Pessoal Frontend e Backend</Title><br />
-                <p style={{ lineHeight: "28px", fontSize: "16px" }}>Este projeto é o meu <strong>portfólio pessoal</strong> desenvolvido com <strong>Next.js</strong> e <strong>ReactJS</strong>, onde apresento minhas habilidades tanto no <strong>frontend</strong> quanto no <strong>backend</strong>. O objetivo principal do projeto é demonstrar minha capacidade de construir <strong>sites modernos e funcionais</strong>, com foco em <strong>SEO, performance</strong> e uma experiência de usuário otimizada.</p><br />
-                <ul style={{ padding: "0 0 0 30px", lineHeight: "28px" }}>
-                  <li><strong>Estrutura de Rotas:</strong> O site utiliza a estrutura de <strong>páginas do Next.js</strong> para definir rotas de forma simples, sem a necessidade de funções como getServerSideProps ou getStaticProps, pois o projeto é focado em apresentar meu trabalho de maneira ágil e prática.</li><br />
-                  <li><strong>Layout Responsivo:</strong> A interface foi projetada com Flexbox, proporcionando um layout <strong>flexível</strong> e responsivo, ideal para todos os dispositivos. O <strong>menu hamburguer</strong> foi implementado de forma interativa, melhorando a navegação.</li><br />
-                  <li><strong>SEO:</strong> A aplicação foi otimizada para SEO com a inclusão de <strong>meta tags</strong> específicas para Google, Open Graph e Twitter, garantindo que o site seja facilmente encontrado e indexado. Isso inclui a <strong>verificação do Google</strong> através de uma meta tag.</li>
-                </ul><br />
-                <p style={{ lineHeight: "28px", fontSize: "16px" }}>O site foi implantado na <strong>Railway</strong>, uma plataforma que oferece fácil escalabilidade e gestão, e está configurado para ser indexado pelo Google, o que aumenta a visibilidade do meu portfólio.</p><br />
-                <div style={{ borderTop: "1px solid #444" }}></div><br />
-                <p style={{ lineHeight: "28px", fontSize: "16px" }}>Esse projeto reflete minha capacidade de construir aplicações web responsivas e otimizadas, sendo uma vitrine para minhas habilidades em frontend e backend.</p><br /><br />
-
+        <>
+          {isHamburguerOpen && (
+            <Overlay onClick={handleOverlayClick}></Overlay>
+          )}
+          <MainLayout>
+            <SideBarLayout></SideBarLayout>
+            <HeaderLayout></HeaderLayout>
+            <MainContentLayout>
+              <MainContent>
                 <div>
-                  <span>Pesquiso no <span style={{ fontSize: "20px", color: "blue", fontWeight: "800" }}>G</span><span style={{ fontSize: "20px", color: "red", fontWeight: "800" }}>o</span><span style={{ fontSize: "20px", color: "#fbbc05", fontWeight: "800" }}>o</span><span style={{ fontSize: "20px", color: "blue", fontWeight: "800" }}>g</span><span style={{ fontSize: "20px", color: "green", fontWeight: "800" }}>l</span><span style={{ fontSize: "20px", color: "red", fontWeight: "800" }}>e</span>: <a style={{ color: "blue" }} href="https://www.google.com/search?q=https://portfolio-projects-production.up.railway.app" target="_blank" rel="noopener noreferrer">Buscar pagina no Google</a></span>
-                </div><br /><br /><br />
-              </div>
-            </MainContent>
-          </MainContentLayout>
-        </MainLayout>
+                  <Title>Desenvolvimento de Portfólio Pessoal Frontend e Backend</Title><br />
+                  <p style={{ lineHeight: "28px", fontSize: "16px" }}>Este projeto é o meu <strong>portfólio pessoal</strong> desenvolvido com <strong>Next.js</strong> e <strong>ReactJS</strong>, onde apresento minhas habilidades tanto no <strong>frontend</strong> quanto no <strong>backend</strong>. O objetivo principal do projeto é demonstrar minha capacidade de construir <strong>sites modernos e funcionais</strong>, com foco em <strong>SEO, performance</strong> e uma experiência de usuário otimizada.</p><br />
+                  <ul style={{ padding: "0 0 0 30px", lineHeight: "28px" }}>
+                    <li><strong>Estrutura de Rotas:</strong> O site utiliza a estrutura de <strong>páginas do Next.js</strong> para definir rotas de forma simples, sem a necessidade de funções como getServerSideProps ou getStaticProps, pois o projeto é focado em apresentar meu trabalho de maneira ágil e prática.</li><br />
+                    <li><strong>Layout Responsivo:</strong> A interface foi projetada com Flexbox, proporcionando um layout <strong>flexível</strong> e responsivo, ideal para todos os dispositivos. O <strong>menu hamburguer</strong> foi implementado de forma interativa, melhorando a navegação.</li><br />
+                    <li><strong>SEO:</strong> A aplicação foi otimizada para SEO com a inclusão de <strong>meta tags</strong> específicas para Google, Open Graph e Twitter, garantindo que o site seja facilmente encontrado e indexado. Isso inclui a <strong>verificação do Google</strong> através de uma meta tag.</li>
+                  </ul><br />
+                  <p style={{ lineHeight: "28px", fontSize: "16px" }}>O site foi implantado na <strong>Railway</strong>, uma plataforma que oferece fácil escalabilidade e gestão, e está configurado para ser indexado pelo Google, o que aumenta a visibilidade do meu portfólio.</p><br />
+                  <div style={{ borderTop: "1px solid #444" }}></div><br />
+                  <p style={{ lineHeight: "28px", fontSize: "16px" }}>Esse projeto reflete minha capacidade de construir aplicações web responsivas e otimizadas, sendo uma vitrine para minhas habilidades em frontend e backend.</p><br /><br />
+
+                  <div>
+                    <span>Pesquiso no <span style={{ fontSize: "20px", color: "blue", fontWeight: "800" }}>G</span><span style={{ fontSize: "20px", color: "red", fontWeight: "800" }}>o</span><span style={{ fontSize: "20px", color: "#fbbc05", fontWeight: "800" }}>o</span><span style={{ fontSize: "20px", color: "blue", fontWeight: "800" }}>g</span><span style={{ fontSize: "20px", color: "green", fontWeight: "800" }}>l</span><span style={{ fontSize: "20px", color: "red", fontWeight: "800" }}>e</span>: <a style={{ color: "blue" }} href="https://www.google.com/search?q=https://portfolio-projects-production.up.railway.app" target="_blank" rel="noopener noreferrer">Buscar pagina no Google</a></span>
+                  </div><br /><br /><br />
+                </div>
+              </MainContent>
+            </MainContentLayout>
+          </MainLayout>
+        </>
       )}
     </>
   );
diff --git a/src/pages/menu-secreto/nodejs-java-spring/index.jsx b/src/pages/menu-secreto/nodejs-java-spring/index.jsx
index c943e07..1559e1d 100644
--- a/src/pages/menu-secreto/nodejs-java-spring/index.jsx
+++ b/src/pages/menu-secreto/nodejs-java-spring/index.jsx
@@ -5,12 +5,14 @@ import { MainLayout } from "@/components/layout/mainLayout";
 import SideBarLayout from "@/components/layout/sideBarLayout";
 import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
-
-import Title from "@/components/common/title";
+import Overlay from "@/components/overlay";
 
 // 1. Efeito de redimensionamento da tela
 const NodeJsJavaSpring = () => {
-  const { isLoaded } = useGlobalState();
+  const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
+
+  // Função para fechar sidebar clicando fora
+  const handleOverlayClick = () => setIsHamburguerOpen(false);
 
   const container = {
     fontFamily: 'Segoe UI, sans-serif',
@@ -74,59 +76,64 @@ const NodeJsJavaSpring = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <MainLayout>
-          <SideBarLayout></SideBarLayout>
-          <HeaderLayout></HeaderLayout>
-          <MainContentLayout>
-            <div style={container}>
-              <div style={sectionTitle}>1. Node.js (JavaScript)</div>
-
-              <div style={subtitle}>Vantagens:</div>
-              <ul style={list}>
-                <li>Muito rápido para desenvolvimento.</li>
-                <li>Similaridade com o frontend (React, por exemplo), o que facilita trabalhar no fullstack.</li>
-                <li>Grande número de pacotes no NPM.</li>
-                <li>Escalável com a arquitetura correta (microservices, clustering).</li>
-                <li>Desempenho excelente para I/O (input/output), como APIs e aplicações em tempo real.</li>
-              </ul>
-
-              <div style={subtitle}>Desvantagens:</div>
-              <ul style={list}>
-                <li>Não é tão eficiente para operações pesadas como processamento de vídeos (se comparado ao Java).</li>
-                <li>Código assíncrono pode ser mais difícil de manter se mal estruturado.</li>
-              </ul>
-
-              <div style={subtitle}>Quando usar:</div>
-              <p style={paragraph}>
-                Projetos que precisam ser desenvolvidos rapidamente, APIs leves, aplicações em tempo real (WebSockets) e integração com outras tecnologias modernas.
-              </p>
-
-              <hr style={{ margin: '30px 0' }} />
-
-              <div style={sectionTitle}>2. Java (Spring Boot ou Javalin)</div>
-
-              <div style={subtitle}>Vantagens:</div>
-              <ul style={list}>
-                <li>Excelente desempenho, especialmente para aplicações com processamento pesado.</li>
-                <li>Frameworks robustos como Spring Boot permitem construir sistemas corporativos e complexos.</li>
-                <li>Fortemente tipada: menos erros em produção.</li>
-                <li>Melhor para sistemas de larga escala e de alta performance.</li>
-                <li>Uso extensivo em grandes empresas e em projetos mais tradicionais.</li>
-              </ul>
-
-              <div style={subtitle}>Desvantagens:</div>
-              <ul style={list}>
-                <li>Desenvolvimento é mais `&lento` comparado ao Node.js.</li>
-                <li>Maior curva de aprendizado (muito código boilerplate em frameworks como Spring).</li>
-              </ul>
-
-              <div style={subtitle}>Quando usar:</div>
-              <p style={paragraph}>
-                Projetos corporativos de grande escala, APIs que requerem alta performance e robustez ou aplicações com muitas operações em background.
-              </p>
-            </div>
-          </MainContentLayout>
-        </MainLayout>
+        <>
+          {isHamburguerOpen && (
+            <Overlay onClick={handleOverlayClick}></Overlay>
+          )}
+          <MainLayout>
+            <SideBarLayout></SideBarLayout>
+            <HeaderLayout></HeaderLayout>
+            <MainContentLayout>
+              <div style={container}>
+                <div style={sectionTitle}>1. Node.js (JavaScript)</div>
+
+                <div style={subtitle}>Vantagens:</div>
+                <ul style={list}>
+                  <li>Muito rápido para desenvolvimento.</li>
+                  <li>Similaridade com o frontend (React, por exemplo), o que facilita trabalhar no fullstack.</li>
+                  <li>Grande número de pacotes no NPM.</li>
+                  <li>Escalável com a arquitetura correta (microservices, clustering).</li>
+                  <li>Desempenho excelente para I/O (input/output), como APIs e aplicações em tempo real.</li>
+                </ul>
+
+                <div style={subtitle}>Desvantagens:</div>
+                <ul style={list}>
+                  <li>Não é tão eficiente para operações pesadas como processamento de vídeos (se comparado ao Java).</li>
+                  <li>Código assíncrono pode ser mais difícil de manter se mal estruturado.</li>
+                </ul>
+
+                <div style={subtitle}>Quando usar:</div>
+                <p style={paragraph}>
+                  Projetos que precisam ser desenvolvidos rapidamente, APIs leves, aplicações em tempo real (WebSockets) e integração com outras tecnologias modernas.
+                </p>
+
+                <hr style={{ margin: '30px 0' }} />
+
+                <div style={sectionTitle}>2. Java (Spring Boot ou Javalin)</div>
+
+                <div style={subtitle}>Vantagens:</div>
+                <ul style={list}>
+                  <li>Excelente desempenho, especialmente para aplicações com processamento pesado.</li>
+                  <li>Frameworks robustos como Spring Boot permitem construir sistemas corporativos e complexos.</li>
+                  <li>Fortemente tipada: menos erros em produção.</li>
+                  <li>Melhor para sistemas de larga escala e de alta performance.</li>
+                  <li>Uso extensivo em grandes empresas e em projetos mais tradicionais.</li>
+                </ul>
+
+                <div style={subtitle}>Desvantagens:</div>
+                <ul style={list}>
+                  <li>Desenvolvimento é mais `&lento` comparado ao Node.js.</li>
+                  <li>Maior curva de aprendizado (muito código boilerplate em frameworks como Spring).</li>
+                </ul>
+
+                <div style={subtitle}>Quando usar:</div>
+                <p style={paragraph}>
+                  Projetos corporativos de grande escala, APIs que requerem alta performance e robustez ou aplicações com muitas operações em background.
+                </p>
+              </div>
+            </MainContentLayout>
+          </MainLayout>
+        </>
       )}
     </>
   );
diff --git a/src/pages/projetos/index.jsx b/src/pages/projetos/index.jsx
index 243d364..e5bb71a 100644
--- a/src/pages/projetos/index.jsx
+++ b/src/pages/projetos/index.jsx
@@ -32,11 +32,15 @@ import { MainLayout, MainContent } from "@/components/layout/mainLayout";
 import SideBarLayout from "@/components/layout/sideBarLayout";
 import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
+import Overlay from "@/components/overlay";
 
 import { GridContainer } from "@/components/projetos/style";
 
 const Projetos = () => {
-  const { isLoaded } = useGlobalState();
+  const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
+
+  // Função para fechar sidebar clicando fora
+  const handleOverlayClick = () => setIsHamburguerOpen(false);
 
   // useEffect(() => {
   //   const handleResize = () => {
@@ -85,299 +89,304 @@ const Projetos = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <MainLayout>
-          <SideBarLayout></SideBarLayout>
-          <HeaderLayout></HeaderLayout>
-          <MainContentLayout>
-            <MainContent>
-              <h1 style={{ color: "323f4b" }}>Oi! 👋</h1>
-              <p style={{ fontSize: "20px", color: "323f4b", lineHeight: "32px" }}>Este portfólio representa a síntese da minha jornada em desenvolvimento web e backend, demonstrando minha experiência com ReactJS no frontend e Express no backend para a construção de aplicações modernas e eficientes.</p>
-              <GridContainer>
-                <div className="container-item">
-                  <Link href="/projetos/player-video-customizado">
-                    <Image src={youtube} placeholder="blur" blurDataURL={youtubeImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
-                        </div>
-                        <h2 className="item-h2">Custom Video Player</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
-                      </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/vendas-curso">
-                    <Image src={cursoOline} placeholder="blur" blurDataURL={cursoOnlineImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React Router DOM</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Context API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Axios </span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT-Decode</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Styled Components</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> LocalStorage </span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js + Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> PostgreSQL</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT (JSON Web Token) </span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Pagar.me API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.io</span>
+        <>
+          {isHamburguerOpen && (
+            <Overlay onClick={handleOverlayClick}></Overlay>
+          )}
+          <MainLayout>
+            <SideBarLayout></SideBarLayout>
+            <HeaderLayout></HeaderLayout>
+            <MainContentLayout>
+              <MainContent>
+                <h1 style={{ color: "323f4b" }}>Oi! 👋</h1>
+                <p style={{ fontSize: "20px", color: "323f4b", lineHeight: "32px" }}>Este portfólio representa a síntese da minha jornada em desenvolvimento web e backend, demonstrando minha experiência com ReactJS no frontend e Express no backend para a construção de aplicações modernas e eficientes.</p>
+                <GridContainer>
+                  <div className="container-item">
+                    <Link href="/projetos/player-video-customizado">
+                      <Image src={youtube} placeholder="blur" blurDataURL={youtubeImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
+                          </div>
+                          <h2 className="item-h2">Custom Video Player</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Plataforma vendas cursos online</h2>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/data-analysis-twitter">
-                    <Image src={analyzeFeelings} placeholder="blur" blurDataURL={analyzeImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer-Extra</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Frontend (HTML, CSS, JavaScript)</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Heroku</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>archiver</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>unzipper</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>path</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/vendas-curso">
+                      <Image src={cursoOline} placeholder="blur" blurDataURL={cursoOnlineImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React Router DOM</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Context API</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Axios </span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT-Decode</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Styled Components</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> LocalStorage </span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js + Express</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> PostgreSQL</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> JWT (JSON Web Token) </span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Pagar.me API</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.io</span>
+                          </div>
+                          <h2 className="item-h2">Plataforma vendas cursos online</h2>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">data analysis tedency</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/stripe">
-                    <Image src={stripelogo} placeholder="blur" blurDataURL={stripeImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div style={{ display: "flex", flexWrap: "wrap" }}>
-                          <div>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/data-analysis-twitter">
+                      <Image src={analyzeFeelings} placeholder="blur" blurDataURL={analyzeImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
                             <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Puppeteer-Extra</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI API</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Frontend (HTML, CSS, JavaScript)</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Heroku</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>archiver</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>unzipper</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>path</span>
                           </div>
-                          <div style={{ display: "block", margin: "auto 0" }}>
-                            <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express.js</span>
-                          </div>
-                          <div style={{ display: "block", margin: "auto 0" }}>
-                            <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>JWT</span>
-                          </div>
-                          <div style={{ display: "block", margin: "auto 0" }}>
-                            <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Stripe</span>
-                          </div>
-                          <div>
-                            <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Firebase</span>
-                          </div>
-                          <div>
-                            <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Middleware e Cookie</span>
-                          </div>
-                          <div>
-                            <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
-                          </div>
-                          <div>
-                            <span style={{ margin: "10px 0 0 0", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>nodemon</span>
+                          <h2 className="item-h2">data analysis tedency</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
+                        </div>
+                      </div>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/stripe">
+                      <Image src={stripelogo} placeholder="blur" blurDataURL={stripeImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div style={{ display: "flex", flexWrap: "wrap" }}>
+                            <div>
+                              <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            </div>
+                            <div style={{ display: "block", margin: "auto 0" }}>
+                              <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express.js</span>
+                            </div>
+                            <div style={{ display: "block", margin: "auto 0" }}>
+                              <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>JWT</span>
+                            </div>
+                            <div style={{ display: "block", margin: "auto 0" }}>
+                              <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Stripe</span>
+                            </div>
+                            <div>
+                              <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Firebase</span>
+                            </div>
+                            <div>
+                              <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Middleware e Cookie</span>
+                            </div>
+                            <div>
+                              <span style={{ margin: "0 10px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
+                            </div>
+                            <div>
+                              <span style={{ margin: "10px 0 0 0", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>nodemon</span>
+                            </div>
                           </div>
+                          <h2 className="item-h2">Stripe</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Stripe</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/carousel">
-                    <Image src={carousel} placeholder="blur" blurDataURL={carouseImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div>
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React</span>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Next.js</span>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>styled-components</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/carousel">
+                      <Image src={carousel} placeholder="blur" blurDataURL={carouseImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div>
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React</span>
+                            <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Next.js</span>
+                            <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>styled-components</span>
+                          </div>
+                          <h2 className="item-h2">Carousel</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Carousel</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/stream-dolby">
-                    <Image src={stream} placeholder="blur" blurDataURL={streamImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Millicast API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>EJS</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>HTML/CSS</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>GraphQL</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>axios e https</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>open</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/stream-dolby">
+                      <Image src={stream} placeholder="blur" blurDataURL={streamImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js e Express</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Millicast API</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>EJS</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>HTML/CSS</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>GraphQL</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>axios e https</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>open</span>
+                          </div>
+                          <h2 className="item-h2">Live Broadcast Control and Viewing System</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Live Broadcast Control and Viewing System</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/image-generator">
-                    <Image src={imageGeneration} placeholder="blur" blurDataURL={imageGenerationImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML5</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>CSS3</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>JavaScript</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Backend</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/image-generator">
+                      <Image src={imageGeneration} placeholder="blur" blurDataURL={imageGenerationImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML5</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>CSS3</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>JavaScript</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Backend</span>
+                          </div>
+                          <h2 className="item-h2">Enlarged View Image Generator</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Enlarged View Image Generator</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/catalogo">
-                    <Image src={catalogo} placeholder="blur" blurDataURL={catalogoImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>CSS</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/catalogo">
+                      <Image src={catalogo} placeholder="blur" blurDataURL={catalogoImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React.js</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>CSS</span>
+                          </div>
+                          <h2 className="item-h2">catalog</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">catalog</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/yt-for-mp4-cloud">
-                    <Image src={ytmp4} placeholder="blur" blurDataURL={ytmp4ImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML e CSS</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js com Express.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> youtube-dl-exec e @distube/ytdl-core</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> fluent-ffmpeg</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.io</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> CORS</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/yt-for-mp4-cloud">
+                      <Image src={ytmp4} placeholder="blur" blurDataURL={ytmp4ImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML e CSS</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Node.js com Express.js</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> youtube-dl-exec e @distube/ytdl-core</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> fluent-ffmpeg</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.io</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> CORS</span>
+                          </div>
+                          <h2 className="item-h2">Download de Vídeo do YouTube</h2>
+                          <p className="item-p"><span style={{ color: "red" }}>Backend na nuvem</span></p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Download de Vídeo do YouTube</h2>
-                        <p className="item-p"><span style={{ color: "red" }}>Backend na nuvem</span></p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/yt-for-mp4-location">
-                    <Image src={ytmp4} placeholder="blur" blurDataURL={ytmp4ImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML e CSS</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.IO</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Node.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>@distube/ytdl-core</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/yt-for-mp4-location">
+                      <Image src={ytmp4} placeholder="blur" blurDataURL={ytmp4ImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML e CSS</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> Socket.IO</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Node.js</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Express</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>@distube/ytdl-core</span>
+                          </div>
+                          <h2 className="item-h2">Download de Vídeo do YouTube</h2>
+                          <p className="item-p"><span style={{ color: "red" }}>Backend local</span></p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Download de Vídeo do YouTube</h2>
-                        <p className="item-p"><span style={{ color: "red" }}>Backend local</span></p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/yt-for-mp3">
-                    <Image src={ytmp3} placeholder="blur" blurDataURL={ytmp3ImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML e CSS</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Node.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Express</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>@distube/ytdl-core</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/yt-for-mp3">
+                      <Image src={ytmp3} placeholder="blur" blurDataURL={ytmp3ImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> HTML e CSS</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Node.js</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Express</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>@distube/ytdl-core</span>
+                          </div>
+                          <h2 className="item-h2">Download de Áudio do YouTube</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Download de Áudio do YouTube</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/yt-analyse-video">
-                    <Image src={ytAnalyzeVideo} placeholder="blur" blurDataURL={ytmp3ImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div className="tech">
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Node.js e Express.js</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI API</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>File System (fs)</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>youtubedl-exec</span>
-                          <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>hbs (Handlebars)</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/yt-analyse-video">
+                      <Image src={ytAnalyzeVideo} placeholder="blur" blurDataURL={ytmp3ImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div className="tech">
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Node.js e Express.js</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>OpenAI API</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>File System (fs)</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>dotenv</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>youtubedl-exec</span>
+                            <span style={{ marginRight: "3px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>hbs (Handlebars)</span>
+                          </div>
+                          <h2 className="item-h2">Download de Áudio do YouTube</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Download de Áudio do YouTube</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-                <div className="container-item">
-                  <Link href="/projetos/portfolio">
-                    <Image src={portfolioImg} placeholder="blur" blurDataURL={portfolioImgBlur} alt="img" draggable={false} className="img-projetos" />
-                    <div className="item">
-                      <div className="sub-item">
-                        <div>
-                          <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React</span>
-                          <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Styled-components</span>
+                    </Link>
+                  </div>
+                  <div className="container-item">
+                    <Link href="/projetos/portfolio">
+                      <Image src={portfolioImg} placeholder="blur" blurDataURL={portfolioImgBlur} alt="img" draggable={false} className="img-projetos" />
+                      <div className="item">
+                        <div className="sub-item">
+                          <div>
+                            <h1 className="item-h1" style={{ display: "inline" }}>Tech:</h1>
+                            <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}> React</span>
+                            <span style={{ margin: "0 8px 0 8px", padding: "0 5px 0 5px", backgroundColor: "#e4e7eb", color: "#52606D", borderRadius: "5px" }}>Styled-components</span>
+                          </div>
+                          <h2 className="item-h2">Portfolio</h2>
+                          <p className="item-p">estudos e aprendizado</p>
+                          <p>⭐⭐⭐⭐⭐ 🚀</p>
                         </div>
-                        <h2 className="item-h2">Portfolio</h2>
-                        <p className="item-p">estudos e aprendizado</p>
-                        <p>⭐⭐⭐⭐⭐ 🚀</p>
                       </div>
-                    </div>
-                  </Link>
-                </div>
-              </GridContainer>
-            </MainContent>
-          </MainContentLayout>
-        </MainLayout>
+                    </Link>
+                  </div>
+                </GridContainer>
+              </MainContent>
+            </MainContentLayout>
+          </MainLayout>
+        </>
       )}
     </>
   );
diff --git a/src/pages/sobre/index.jsx b/src/pages/sobre/index.jsx
index cf13cda..861a7d6 100644
--- a/src/pages/sobre/index.jsx
+++ b/src/pages/sobre/index.jsx
@@ -6,11 +6,14 @@ import { MainLayout, MainContent } from "@/components/layout/mainLayout";
 import SideBarLayout from "@/components/layout/sideBarLayout";
 import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
+import Overlay from '@/components/overlay';
 
 
 const Projetos = () => {
-  const { isLoaded } = useGlobalState();
+  const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
 
+  // Função para fechar sidebar clicando fora
+  const handleOverlayClick = () => setIsHamburguerOpen(false);
   // useEffect(() => {
   //   const handleResize = () => {
   //     if (window.innerWidth >= 1250) {
@@ -57,64 +60,69 @@ const Projetos = () => {
       </Head>
 
       {!isLoaded ? null : (
-        <MainLayout>
-          <SideBarLayout></SideBarLayout>
-          <HeaderLayout></HeaderLayout>
-          <MainContentLayout>
-            <MainContent>
-              <div>
-                <p style={{ lineHeight: "28px", fontSize: "18px" }}> <strong style={{ fontSize: "20px" }}> Sou um desenvolvedor Full Stack  </strong> apaixonado por tecnologia e inovação. Minha jornada na programação é moldada pelos projetos que desenvolvi, cada um deles representando um novo aprendizado e a aplicação de diferentes tecnologias para resolver problemas reais. Minha experiência é prática, baseada em desafios concretos que exigiram desde a construção de interfaces modernas e responsivas até a implementação de sistemas robustos no backend.</p><br />
-                <h2>Minhas Habilidades</h2><br />
-                <h3>Frontend</h3><br />
-                <ul style={{ lineHeight: "28px" }}>
-                  <li>Desenvolvimento de interfaces responsivas e dinâmicas com <strong>React.js e Next.js</strong></li>
-                  <li>Estilização avançada com <strong>Styled Components e CSS puro</strong></li>
-                  <li>Gerenciamento de estado global com <strong>Context API</strong></li>
-                  <li>Implementação de componentes interativos como <strong>players de vídeo e carrosséis de imagens</strong></li>
-                  <li>Otimização para <strong>SEO e performance</strong></li>
-                </ul><br />
-                <h3>Backend</h3><br />
-                <ul style={{ lineHeight: "28px" }}>
-                  <li>Desenvolvimento de APIs escaláveis com Node.js e Express</li>
-                  <li>Autenticação segura com JWT e Bcrypt</li>
-                  <li>Integração com bancos de dados como PostgreSQL e Firebase</li>
-                  <li>Implementação de pagamentos com Stripe API e Pagar.me API</li>
-                  <li>Web Scraping e análise de dados com Puppeteer</li>
-                  <li>Processamento de vídeos e áudios com FFmpeg e youtube-dl</li>
-                  <li>Comunicação em tempo real com Socket.io</li>
-                </ul><br />
-                <h3>Projetos de Destaque</h3><br />
-                <h4>Plataforma de Cursos Online</h4><br />
-                <p style={{ lineHeight: "28px" }}>Desenvolvi uma plataforma completa para cursos online, que inclui autenticação segura, processamento de pagamentos e restrição de acesso a conteúdos exclusivos para usuários pagos.
-                  <strong>Tecnologias</strong>: React.js, Context API, JWT, Node.js, Express, PostgreSQL, Pagar.me API, Socket.io.</p><br />
-                <h4>Player de Vídeo Interativo</h4><br />
-                <p style={{ lineHeight: "28px" }}>Criação de um player de vídeo customizado inspirado em grandes plataformas de streaming, com funcionalidades como controle de volume, barra de progresso interativa e suporte a playlists.
-                  <strong>Tecnologias</strong>: React.js</p><br />
-                <h4>Aplicação de Análise de Sentimentos no Twitter</h4><br />
-                <p style={{ lineHeight: "28px" }}>Um sistema que coleta e analisa tweets para identificar sentimentos e tendências, utilizando web scraping e processamento de texto.
-                  <strong>Tecnologias</strong>: Express.js, Puppeteer, OpenAI API.</p><br />
-                <h4>Geração de Imagens com Inteligência Artificial</h4><br />
-                <p style={{ lineHeight: "28px" }}>Uma aplicação interativa para a geração de imagens a partir de descrições textuais, utilizando a API do DALL·E.
-                  <strong>Tecnologias</strong>: Node.js, Express.js, OpenAI API, EJS.</p><br />
-                <h4>Portfólio Pessoal</h4><br />
-                <p style={{ lineHeight: "28px" }}>Desenvolvimento do meu próprio portfólio utilizando <strong>Next.js</strong> e <strong>ReactJS</strong>, com otimização para SEO e um design responsivo para destacar minhas habilidades e projetos.</p><br />
-                <h2>Meu Diferencial</h2><br />
-                <ul style={{ lineHeight: "28px" }}>
-                  <li><strong>Aprendizado Contínuo</strong>: Busco sempre aprimorar minhas habilidades através de projetos desafiadores.</li>
-                  <li><strong>Soluções Escaláveis</strong>: Tenho experiência na construção de aplicações robustas e bem estruturadas.</li>
-                  <li><strong>Foco na Experiência do Usuário</strong>: Prezo por interfaces intuitivas e fluidas, garantindo usabilidade e acessibilidade.</li>
-                  <li><strong>Mentalidade Full Stack</strong>: Tenho a capacidade de atuar tanto no frontend quanto no backend, garantindo integração eficiente entre ambas as partes.</li>
-                </ul><br /><br />
-                <div style={{ display: "flex", flexWrap: "wrap", alignItems: "center" }}>
-                  <h3 style={{ paddingRight: "20px" }}>Se deseja saber mais sobre meu trabalho, entre em contato comigo</h3>
-                  <Image src="/whatsapp.png" width={25} height={25} alt="img" />
-                  <a style={{ paddingLeft: "20px" }} href="https://wa.me/5581987604690?text=Olá,%20acabei%20de%20ver%20seu%20portfólio%20e%20gostaria%20de%20saber%20mais%20sobre%20seu%20trabalho!">Fale comigo no WhatsApp</a>
-                  {/* <p style={{ paddingLeft: "20px" }}>(81) 9 8760-4690</p> */}
+        <>
+          {isHamburguerOpen && (
+            <Overlay onClick={handleOverlayClick}></Overlay>
+          )}
+          <MainLayout>
+            <SideBarLayout></SideBarLayout>
+            <HeaderLayout></HeaderLayout>
+            <MainContentLayout>
+              <MainContent>
+                <div>
+                  <p style={{ lineHeight: "28px", fontSize: "18px" }}> <strong style={{ fontSize: "20px" }}> Sou um desenvolvedor Full Stack  </strong> apaixonado por tecnologia e inovação. Minha jornada na programação é moldada pelos projetos que desenvolvi, cada um deles representando um novo aprendizado e a aplicação de diferentes tecnologias para resolver problemas reais. Minha experiência é prática, baseada em desafios concretos que exigiram desde a construção de interfaces modernas e responsivas até a implementação de sistemas robustos no backend.</p><br />
+                  <h2>Minhas Habilidades</h2><br />
+                  <h3>Frontend</h3><br />
+                  <ul style={{ lineHeight: "28px" }}>
+                    <li>Desenvolvimento de interfaces responsivas e dinâmicas com <strong>React.js e Next.js</strong></li>
+                    <li>Estilização avançada com <strong>Styled Components e CSS puro</strong></li>
+                    <li>Gerenciamento de estado global com <strong>Context API</strong></li>
+                    <li>Implementação de componentes interativos como <strong>players de vídeo e carrosséis de imagens</strong></li>
+                    <li>Otimização para <strong>SEO e performance</strong></li>
+                  </ul><br />
+                  <h3>Backend</h3><br />
+                  <ul style={{ lineHeight: "28px" }}>
+                    <li>Desenvolvimento de APIs escaláveis com Node.js e Express</li>
+                    <li>Autenticação segura com JWT e Bcrypt</li>
+                    <li>Integração com bancos de dados como PostgreSQL e Firebase</li>
+                    <li>Implementação de pagamentos com Stripe API e Pagar.me API</li>
+                    <li>Web Scraping e análise de dados com Puppeteer</li>
+                    <li>Processamento de vídeos e áudios com FFmpeg e youtube-dl</li>
+                    <li>Comunicação em tempo real com Socket.io</li>
+                  </ul><br />
+                  <h3>Projetos de Destaque</h3><br />
+                  <h4>Plataforma de Cursos Online</h4><br />
+                  <p style={{ lineHeight: "28px" }}>Desenvolvi uma plataforma completa para cursos online, que inclui autenticação segura, processamento de pagamentos e restrição de acesso a conteúdos exclusivos para usuários pagos.
+                    <strong>Tecnologias</strong>: React.js, Context API, JWT, Node.js, Express, PostgreSQL, Pagar.me API, Socket.io.</p><br />
+                  <h4>Player de Vídeo Interativo</h4><br />
+                  <p style={{ lineHeight: "28px" }}>Criação de um player de vídeo customizado inspirado em grandes plataformas de streaming, com funcionalidades como controle de volume, barra de progresso interativa e suporte a playlists.
+                    <strong>Tecnologias</strong>: React.js</p><br />
+                  <h4>Aplicação de Análise de Sentimentos no Twitter</h4><br />
+                  <p style={{ lineHeight: "28px" }}>Um sistema que coleta e analisa tweets para identificar sentimentos e tendências, utilizando web scraping e processamento de texto.
+                    <strong>Tecnologias</strong>: Express.js, Puppeteer, OpenAI API.</p><br />
+                  <h4>Geração de Imagens com Inteligência Artificial</h4><br />
+                  <p style={{ lineHeight: "28px" }}>Uma aplicação interativa para a geração de imagens a partir de descrições textuais, utilizando a API do DALL·E.
+                    <strong>Tecnologias</strong>: Node.js, Express.js, OpenAI API, EJS.</p><br />
+                  <h4>Portfólio Pessoal</h4><br />
+                  <p style={{ lineHeight: "28px" }}>Desenvolvimento do meu próprio portfólio utilizando <strong>Next.js</strong> e <strong>ReactJS</strong>, com otimização para SEO e um design responsivo para destacar minhas habilidades e projetos.</p><br />
+                  <h2>Meu Diferencial</h2><br />
+                  <ul style={{ lineHeight: "28px" }}>
+                    <li><strong>Aprendizado Contínuo</strong>: Busco sempre aprimorar minhas habilidades através de projetos desafiadores.</li>
+                    <li><strong>Soluções Escaláveis</strong>: Tenho experiência na construção de aplicações robustas e bem estruturadas.</li>
+                    <li><strong>Foco na Experiência do Usuário</strong>: Prezo por interfaces intuitivas e fluidas, garantindo usabilidade e acessibilidade.</li>
+                    <li><strong>Mentalidade Full Stack</strong>: Tenho a capacidade de atuar tanto no frontend quanto no backend, garantindo integração eficiente entre ambas as partes.</li>
+                  </ul><br /><br />
+                  <div style={{ display: "flex", flexWrap: "wrap", alignItems: "center" }}>
+                    <h3 style={{ paddingRight: "20px" }}>Se deseja saber mais sobre meu trabalho, entre em contato comigo</h3>
+                    <Image src="/whatsapp.png" width={25} height={25} alt="img" />
+                    <a style={{ paddingLeft: "20px" }} href="https://wa.me/5581987604690?text=Olá,%20acabei%20de%20ver%20seu%20portfólio%20e%20gostaria%20de%20saber%20mais%20sobre%20seu%20trabalho!">Fale comigo no WhatsApp</a>
+                    {/* <p style={{ paddingLeft: "20px" }}>(81) 9 8760-4690</p> */}
+                  </div>
                 </div>
-              </div>
-            </MainContent>
-          </MainContentLayout>
-        </MainLayout>
+              </MainContent>
+            </MainContentLayout>
+          </MainLayout>
+        </>
       )}
     </>
   );
