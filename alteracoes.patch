diff --git a/alteracoes.patch b/alteracoes.patch
index 127fdfe..e69de29 100644
--- a/alteracoes.patch
+++ b/alteracoes.patch
@@ -1,719 +0,0 @@
-diff --git a/package.json b/package.json
-index 0546e1f..8fd79c7 100644
---- a/package.json
-+++ b/package.json
-@@ -10,6 +10,7 @@
-   },
-   "dependencies": {
-     "@babel/runtime": "^7.25.7",
-+    "highlight.js": "^11.11.1",
-     "next": "^14.2.15",
-     "next-sitemap": "^4.2.3",
-     "react": "^18.3.1",
-diff --git a/src/components/buildProject/index.js b/src/components/buildProject/index.js
-index 6b31bef..22c870e 100644
---- a/src/components/buildProject/index.js
-+++ b/src/components/buildProject/index.js
-@@ -37,4 +37,5 @@ export const CollapsibleContent = styled.div`
- export const H2 = styled.h2`
- text-align: center;
- margin-bottom: 20px;
-+font-size: 16px;
- `;
-\ No newline at end of file
-diff --git a/src/components/diariodev/bibliotecasFerramentas/index.jsx b/src/components/diariodev/bibliotecasFerramentas/index.jsx
-index 06fc04a..353fe75 100644
---- a/src/components/diariodev/bibliotecasFerramentas/index.jsx
-+++ b/src/components/diariodev/bibliotecasFerramentas/index.jsx
-@@ -1,7 +1,15 @@
-+import { useEffect } from 'react';
- import { Container, SectionTitle, Check, Paragraph, List } from "@/styles/globalStyles";
-+import hljs from 'highlight.js'; // Importando o highlight.js
-+import 'highlight.js/styles/atom-one-dark.css'; // Estilo para colorir a sintaxe
- 
- const BibliotecasFerramentas = () => {
- 
-+
-+  useEffect(() => {
-+    hljs.highlightAll(); // Aplica o destaque de sintaxe a todos os blocos de c√≥digo
-+  }, []);
-+
-   return (
-     <>
-       <Container>
-@@ -11,17 +19,18 @@ const BibliotecasFerramentas = () => {
- 
-         <Paragraph>
-           S√£o pacotes que adicionam <strong>funcionalidades espec√≠ficas</strong> que voc√™ usa diretamente no c√≥digo da aplica√ß√£o.
-+          Elas oferecem funcionalidades prontas para uso, como o gerenciamento de banco de dados, tratamento de erros, valida√ß√£o de dados, etc.
-         </Paragraph>
- 
-         <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos comuns:</div>
- 
-         <List>
--          <li><strong>express-async-errors (backend):</strong> tratamento de erros ass√≠ncronos no Express.</li>
--          <li><strong>TypeORM / Prisma (backend):</strong> ORM para banco de dados.</li>
--          <li><strong>Swagger (backend):</strong> documenta√ß√£o autom√°tica da API.</li>
--          <li><strong>class-validator (backend):</strong> valida√ß√£o de dados.</li>
--          <li><strong>Winston (backend):</strong> logging.</li>
--          <li><strong>Helmet e CORS (backend):</strong> seguran√ßa HTTP e controle de acesso.</li>
-+          <li><strong>express-async-errors (backend):</strong> tratamento de erros ass√≠ncronos no Express. <em>Exemplo: Facilita a captura e tratamento de erros em rotas ass√≠ncronas.</em></li>
-+          <li><strong>TypeORM / Prisma (backend):</strong> ORM para banco de dados. <em>Exemplo: Permite interagir com o banco de dados atrav√©s de um modelo de objetos.</em></li>
-+          <li><strong>Swagger (backend):</strong> documenta√ß√£o autom√°tica da API. <em>Exemplo: Gera uma interface interativa que permite testar endpoints da API diretamente do navegador.</em></li>
-+          <li><strong>class-validator (backend):</strong> valida√ß√£o de dados. <em>Exemplo: Valida se os dados de entrada correspondem ao formato esperado (ex: email v√°lido).</em></li>
-+          <li><strong>Winston (backend):</strong> logging. <em>Exemplo: Permite a cria√ß√£o de logs para monitoramento de atividades e erros no backend.</em></li>
-+          <li><strong>Helmet e CORS (backend):</strong> seguran√ßa HTTP e controle de acesso. <em>Exemplo: Helmet melhora a seguran√ßa definindo cabe√ßalhos HTTP, e CORS controla quais origens podem acessar a API.</em></li>
-         </List>
-       </Container>
- 
-@@ -32,16 +41,267 @@ const BibliotecasFerramentas = () => {
- 
-         <Paragraph>
-           Auxiliam no desenvolvimento, organiza√ß√£o, formata√ß√£o e automa√ß√£o, mas atuam fora do fluxo direto do c√≥digo da aplica√ß√£o.
-+          Elas s√£o usadas para melhorar o ambiente de desenvolvimento e garantir padr√µes de qualidade no c√≥digo.
-+        </Paragraph>
-+
-+        <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos comuns:</div>
-+
-+        <List>
-+          <li><strong>ESLint (front/backend):</strong> analisa e corrige problemas no c√≥digo. <em>Exemplo: Identifica e alerta sobre erros de sintaxe e problemas de estilo no c√≥digo.</em></li>
-+          <li><strong>Prettier (front/backend):</strong> formata c√≥digo automaticamente. <em>Exemplo: Formata o c√≥digo para garantir consist√™ncia no estilo e facilitar a leitura.</em></li>
-+          <li><strong>Husky (front/backend):</strong> executa tarefas autom√°ticas (ex: testes) antes do commit. <em>Exemplo: Garante que os testes sejam executados antes de cada commit para evitar falhas no c√≥digo.</em></li>
-+          <li><strong>Lint-Staged (front/backend):</strong> verifica apenas arquivos modificados antes do commit. <em>Exemplo: Aumenta a efici√™ncia ao realizar verifica√ß√µes apenas em arquivos que foram alterados.</em></li>
-+          <li><strong>Jest / Supertest (front/backend):</strong> frameworks e ferramentas para testes unit√°rios e de API. <em>Exemplo: Jest executa testes unit√°rios para garantir a qualidade do c√≥digo, enquanto o Supertest testa APIs.</em></li>
-+        </List>
-+      </Container>
-+
-+      <Container>
-+        <SectionTitle>
-+          <Check>üîå</Check> API
-+        </SectionTitle>
-+
-+        <Paragraph>
-+          API (Interface de Programa√ß√£o de Aplica√ß√µes) √© um conjunto de defini√ß√µes e protocolos que permite que um software interaja com outro, como uma ponte entre sistemas diferentes.
-+          Elas permitem a comunica√ß√£o entre sistemas de forma padronizada.
-+        </Paragraph>
-+
-+        <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos comuns:</div>
-+
-+        <List>
-+          <li><strong>API REST (frontend/backend):</strong> interface para comunica√ß√£o entre sistemas via HTTP. <em>Exemplo: Voc√™ pode fazer requisi√ß√µes GET, POST, PUT, DELETE para interagir com a API de um sistema.</em></li>
-+          <li><strong>Exemplo: API do GitHub:</strong> permite acessar informa√ß√µes sobre reposit√≥rios, commits e outros dados do GitHub via HTTP. <em>Exemplo pr√°tico: Obter informa√ß√µes sobre reposit√≥rios e contribui√ß√µes diretamente pelo c√≥digo.</em></li>
-+          <li><strong>GraphQL (frontend/backend):</strong> consulta de dados com flexibilidade no backend. <em>Exemplo: Permite que o cliente defina exatamente os dados que deseja obter, sem depender de um endpoint fixo.</em></li>
-+          <li><strong>Exemplo: API do Spotify:</strong> permite buscar m√∫sicas, √°lbuns, artistas e criar playlists via GraphQL. <em>Exemplo pr√°tico: Criar playlists personalizadas com base nas prefer√™ncias do usu√°rio.</em></li>
-+        </List>
-+      </Container>
-+
-+      <Container>
-+        <SectionTitle>
-+          <Check>üõ†Ô∏è</Check> SDK
-+        </SectionTitle>
-+
-+        <Paragraph>
-+          SDK (Kit de Desenvolvimento de Software) √© um conjunto de ferramentas que facilita o desenvolvimento de aplica√ß√µes para uma plataforma ou servi√ßo espec√≠fico.
-+          Ele fornece os recursos necess√°rios para facilitar a integra√ß√£o com plataformas externas, como Firebase ou Stripe.
-         </Paragraph>
- 
-         <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos comuns:</div>
- 
-         <List>
--          <li><strong>ESLint (front/backend):</strong> analisa e corrige problemas no c√≥digo.</li>
--          <li><strong>Prettier (front/backend):</strong> formata c√≥digo automaticamente.</li>
--          <li><strong>Husky (front/backend):</strong> executa tarefas autom√°ticas (ex: testes) antes do commit.</li>
--          <li><strong>Lint-Staged (front/backend):</strong> verifica apenas arquivos modificados antes do commit.</li>
--          <li><strong>Jest / Supertest (front/backend):</strong> frameworks e ferramentas para testes unit√°rios e de API.</li>
-+          <li><strong>Firebase SDK (frontend/backend):</strong> facilita a integra√ß√£o com a plataforma Firebase. <em>Exemplo: Uso do Firebase SDK para autenticar usu√°rios, armazenar dados em tempo real e enviar notifica√ß√µes push.</em></li>
-+          <li><strong>Exemplo: Firebase Authentication SDK:</strong> permite autenticar usu√°rios via email, Google, Facebook e outros. <em>Exemplo pr√°tico: Permite que usu√°rios se registrem ou fa√ßam login usando suas contas do Google.</em></li>
-+          <li><strong>Stripe SDK (frontend/backend):</strong> permite integra√ß√£o de pagamentos em sites e aplicativos. <em>Exemplo: Uso do Stripe SDK para processar pagamentos seguros em um site de e-commerce.</em></li>
-+          <li><strong>Exemplo: Stripe Checkout SDK:</strong> facilita a implementa√ß√£o de pagamentos de forma segura em e-commerce. <em>Exemplo pr√°tico: Configura√ß√£o de uma p√°gina de pagamento que aceita cart√µes de cr√©dito, d√©bito e outros m√©todos de pagamento.</em></li>
-+        </List>
-+      </Container>
-+
-+      <Container>
-+        <SectionTitle>
-+          <Check>üìö</Check> Bibliotecas
-+        </SectionTitle>
-+
-+        <Paragraph>
-+          S√£o pacotes que adicionam <strong>funcionalidades espec√≠ficas</strong> que voc√™ usa diretamente no c√≥digo da aplica√ß√£o.
-+          Elas oferecem funcionalidades prontas para uso, como o gerenciamento de banco de dados, tratamento de erros, valida√ß√£o de dados, etc.
-+        </Paragraph>
-+
-+        <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos reais:</div>
-+
-+        <List>
-+          <li><strong>express-async-errors (backend):</strong> tratamento de erros ass√≠ncronos no Express.
-+            <em>
-+              <br />Exemplo de c√≥digo:
-+              <pre><code className="javascript">{`import express from 'express';
-+import 'express-async-errors'; // Isso adiciona tratamento ass√≠ncrono de erros
-+
-+const app = express();
-+
-+app.get('/api', async (req, res) => {
-+  throw new Error('Erro!'); // Exemplo de erro
-+});
-+
-+app.listen(3000, () => console.log('Servidor rodando na porta 3000'));`}</code></pre>
-+            </em>
-+          </li>
-+          <li><strong>TypeORM / Prisma (backend):</strong> ORM para banco de dados.
-+            <em>
-+              <br />Exemplo de c√≥digo (TypeORM):
-+              <pre><code className="javascript">{`import { createConnection } from 'typeorm';
-+
-+createConnection({
-+  type: 'postgres',
-+  host: 'localhost',
-+  port: 5432,
-+  username: 'test',
-+  password: 'test',
-+  database: 'test',
-+  entities: [User],
-+  synchronize: true,
-+}).then(() => console.log('Conectado ao banco de dados'));`}</code></pre>
-+            </em>
-+          </li>
-+          <li><strong>Swagger (backend):</strong> documenta√ß√£o autom√°tica da API.
-+            <em>
-+              <br />Exemplo de c√≥digo:
-+              <pre><code className="javascript">{`import express from 'express';
-+import swaggerJsdoc from 'swagger-jsdoc';
-+import swaggerUi from 'swagger-ui-express';
-+
-+const app = express();
-+
-+const options = {
-+  definition: {
-+    openapi: '3.0.0',
-+    info: {
-+      title: 'API exemplo',
-+      version: '1.0.0',
-+    },
-+  },
-+  apis: ['./routes.js'],
-+};
-+
-+const specs = swaggerJsdoc(options);
-+app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));
-+
-+app.listen(3000, () => console.log('Servidor rodando na porta 3000'));`}</code></pre>
-+            </em>
-+          </li>
-+        </List>
-+      </Container>
-+
-+      <Container>
-+        <SectionTitle>
-+          <Check>üõ†Ô∏è</Check> Ferramentas
-+        </SectionTitle>
-+
-+        <Paragraph>
-+          Auxiliam no desenvolvimento, organiza√ß√£o, formata√ß√£o e automa√ß√£o, mas atuam fora do fluxo direto do c√≥digo da aplica√ß√£o.
-+          Elas s√£o usadas para melhorar o ambiente de desenvolvimento e garantir padr√µes de qualidade no c√≥digo.
-+        </Paragraph>
-+
-+        <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos reais:</div>
-+
-+        <List>
-+          <li><strong>ESLint (front/backend):</strong> analisa e corrige problemas no c√≥digo.
-+            <em>
-+              <br />Exemplo de c√≥digo (configura√ß√£o do ESLint):
-+              <pre><code className="javascript">{`module.exports = {
-+  env: {
-+    node: true,
-+    es6: true,
-+  },
-+  extends: ['eslint:recommended'],
-+  parserOptions: {
-+    ecmaVersion: 2020,
-+  },
-+  rules: {
-+    'no-console': 'warn',
-+  },
-+};`}</code></pre>
-+            </em>
-+          </li>
-+          <li><strong>Prettier (front/backend):</strong> formata c√≥digo automaticamente.
-+            <em>
-+              <br />Exemplo de c√≥digo (configura√ß√£o do Prettier):
-+              <pre><code className="javascript">{`module.exports = {
-+  semi: false,
-+  singleQuote: true,
-+  trailingComma: 'all',
-+};`}</code></pre>
-+            </em>
-+          </li>
-+          <li><strong>Husky (front/backend):</strong> executa tarefas autom√°ticas (ex: testes) antes do commit.
-+            <em>
-+              <br />Exemplo de c√≥digo (configura√ß√£o do Husky):
-+              <pre><code className="javascript">{`"husky": {
-+  "hooks": {
-+    "pre-commit": "lint-staged",
-+    "pre-push": "npm test"
-+  }
-+},`}</code></pre>
-+            </em>
-+          </li>
-+        </List>
-+      </Container>
-+
-+      <Container>
-+        <SectionTitle>
-+          <Check>üîå</Check> API
-+        </SectionTitle>
-+
-+        <Paragraph>
-+          API (Interface de Programa√ß√£o de Aplica√ß√µes) √© um conjunto de defini√ß√µes e protocolos que permite que um software interaja com outro, como uma ponte entre sistemas diferentes.
-+          Elas permitem a comunica√ß√£o entre sistemas de forma padronizada.
-+        </Paragraph>
-+
-+        <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos reais:</div>
-+
-+        <List>
-+          <li><strong>API REST (frontend/backend):</strong> interface para comunica√ß√£o entre sistemas via HTTP.
-+            <em>
-+              <br />Exemplo de c√≥digo:
-+              <pre><code className="javascript">{`fetch('https://api.github.com/users/octocat')
-+  .then(response => response.json())
-+  .then(data => console.log(data));`}</code></pre>
-+            </em>
-+          </li>
-+          <li><strong>Exemplo: API do GitHub:</strong> permite acessar informa√ß√µes sobre reposit√≥rios, commits e outros dados do GitHub via HTTP.
-+            <em>
-+              <br />Exemplo de c√≥digo:
-+              <pre><code className="javascript">{`fetch('https://api.github.com/repos/octocat/Hello-World/commits')
-+  .then(response => response.json())
-+  .then(data => console.log(data));`}</code></pre>
-+            </em>
-+          </li>
-+        </List>
-+      </Container>
-+
-+      <Container>
-+        <SectionTitle>
-+          <Check>üõ†Ô∏è</Check> SDK
-+        </SectionTitle>
-+
-+        <Paragraph>
-+          SDK (Kit de Desenvolvimento de Software) √© um conjunto de ferramentas que facilita o desenvolvimento de aplica√ß√µes para uma plataforma ou servi√ßo espec√≠fico.
-+          Ele fornece os recursos necess√°rios para facilitar a integra√ß√£o com plataformas externas, como Firebase ou Stripe.
-+        </Paragraph>
-+
-+        <div style={{ fontWeight: '600', marginBottom: '8px' }}>Exemplos reais:</div>
-+
-+        <List>
-+          <li><strong>Firebase SDK (frontend/backend):</strong> facilita a integra√ß√£o com a plataforma Firebase.
-+            <em>
-+              <br />Exemplo de c√≥digo (Firebase Authentication):
-+              <pre><code className="javascript">{`import firebase from 'firebase/app';
-+import 'firebase/auth';
-+
-+firebase.initializeApp({ 
-+  apiKey: 'YOUR_API_KEY',
-+  authDomain: 'YOUR_AUTH_DOMAIN',
-+  projectId: 'YOUR_PROJECT_ID',
-+});
-+
-+firebase.auth().createUserWithEmailAndPassword('email@example.com', 'password')
-+  .then(user => console.log(user))
-+  .catch(error => console.log(error));`}</code></pre>
-+            </em>
-+          </li>
-+          <li><strong>Stripe SDK (frontend/backend):</strong> permite integra√ß√£o de pagamentos em sites e aplicativos.
-+            <em>
-+              <br />Exemplo de c√≥digo (Stripe Checkout):
-+              <pre><code className="javascript">{`const stripe = Stripe('YOUR_PUBLIC_KEY');
-+const checkoutButton = document.getElementById('checkout-button');
-+
-+checkoutButton.addEventListener('click', () => {
-+  stripe.redirectToCheckout({ sessionId: 'SESSION_ID' })
-+    .then(result => {
-+      if (result.error) {
-+        alert(result.error.message);
-+      }
-+    });
-+});`}</code></pre>
-+            </em>
-+          </li>
-         </List>
-       </Container>
-     </>
-diff --git a/src/components/diariodev/frontendTecnologiasNextjs/index.jsx b/src/components/diariodev/frontendTecnologiasNextjs/index.jsx
-index 8dcf56d..b9c8fe8 100644
---- a/src/components/diariodev/frontendTecnologiasNextjs/index.jsx
-+++ b/src/components/diariodev/frontendTecnologiasNextjs/index.jsx
-@@ -1,6 +1,12 @@
-+import { useEffect } from 'react';
- import { Container, SectionTitle, Check, List, Title, Paragraph, CodeBlockF0F0F0, Label, Separator, Bold } from "@/styles/globalStyles";
-+import hljs from 'highlight.js'; // Importando o highlight.js
-+import 'highlight.js/styles/atom-one-dark.css'; // Estilo para colorir a sintaxe
- 
- const FrontendTecnologiasNextjs = () => {
-+  useEffect(() => {
-+    hljs.highlightAll(); // Aplica o destaque de sintaxe a todos os blocos de c√≥digo
-+  }, []);
- 
-   return (
-     <>
-@@ -83,7 +89,7 @@ const FrontendTecnologiasNextjs = () => {
-         <Label>kotlin</Label>
- 
-         <CodeBlockF0F0F0>
--          {`/pages               <- cada arquivo vira uma rota
-+          <pre><code className="javascript">{`/pages               <- cada arquivo vira uma rota
- /api               <- API routes (fun√ß√µes backend)
- index.tsx          <- p√°gina principal
- about.tsx          <- p√°gina about
-@@ -91,7 +97,7 @@ about.tsx          <- p√°gina about
- /public              <- arquivos est√°ticos (imagens, favicon, etc)
- 
- /components          <- componentes React reutiliz√°veis
--/styles              <- estilos globais, CSS Modules, etc.`}
-+/styles              <- estilos globais, CSS Modules, etc.`}</code></pre>
-         </CodeBlockF0F0F0>
-       </Container>
- 
-@@ -107,7 +113,7 @@ about.tsx          <- p√°gina about
-         </List>
- 
-         <CodeBlockF0F0F0>
--          {`export async function getStaticProps() {
-+          <pre><code className="javascript">{`export async function getStaticProps() {
-   const data = await fetch('https://api.example.com/data');
-   const json = await data.json();
- 
-@@ -116,7 +122,7 @@ about.tsx          <- p√°gina about
-       data: json,
-     },
-   };
--}`}
-+}`}</code></pre>
-         </CodeBlockF0F0F0>
- 
-         <Separator />
-@@ -132,7 +138,7 @@ about.tsx          <- p√°gina about
-         </List>
- 
-         <CodeBlockF0F0F0>
--          {`export async function getServerSideProps(context) {
-+          <pre><code className="javascript">{`export async function getServerSideProps(context) {
-   const res = await fetch('https://api.example.com/dynamic-data');
-   const data = await res.json();
- 
-@@ -141,7 +147,7 @@ about.tsx          <- p√°gina about
-       data,
-     },
-   };
--}`}
-+}`}</code></pre>
-         </CodeBlockF0F0F0>
- 
-         <Separator />
-@@ -168,243 +174,6 @@ about.tsx          <- p√°gina about
-           Se o seu projeto n√£o exige dados din√¢micos (como conte√∫do atualizado frequentemente ou personalizado para o usu√°rio), o uso de <Bold>getStaticProps</Bold> √© mais eficiente, pois gera p√°ginas est√°ticas e proporciona uma performance melhor.
-         </Paragraph>
-       </Container>
--
--      <Container>
--        <SectionTitle>1. getStaticProps (Renderiza√ß√£o Est√°tica)</SectionTitle>
--
--        <Paragraph>
--          getStaticProps √© utilizado quando voc√™ deseja gerar uma p√°gina de forma est√°tica no momento da constru√ß√£o (build) do site.
--          Ele permite que voc√™ pr√©-renderize p√°ginas com dados que n√£o mudam com frequ√™ncia. Usar getStaticProps √© √∫til para gerar p√°ginas de conte√∫do fixo ou quase fixo.
--        </Paragraph>
--
--        <Paragraph><Bold>Como usar:</Bold></Paragraph>
--        <Paragraph>
--          No caso da p√°gina de projetos, se as informa√ß√µes das metatags (como t√≠tulo, descri√ß√£o, etc.) s√£o est√°ticas ou mudam muito raramente, voc√™ pode usar getStaticProps.
--        </Paragraph>
--
--        <CodeBlockF0F0F0>
--          {`import Head from "next/head";
--
--const Projetos = ({ metadata }) => {
--  return (
--    <>
--      <Head>
--        <title>{metadata.title}</title>
--        <meta name="description" content={metadata.description} />
--        <meta property="og:title" content={metadata.ogTitle} />
--        <meta property="og:description" content={metadata.ogDescription} />
--        <meta property="og:image" content={metadata.ogImage} />
--        <meta property="og:url" content={metadata.url} />
--      </Head>
--      <div style={{ display: "flex" }}>
--        {/* Seu conte√∫do */}
--      </div>
--    </>
--  );
--};
--
--// Usado para carregar dados no momento da constru√ß√£o (build)
--export async function getStaticProps() {
--
--  // Aqui voc√™ pode buscar dados de uma API, banco de dados ou usar valores fixos
--
--  const metadata = {
--    title: "Portf√≥lio de Desenvolvimento Web",
--    description: "Descri√ß√£o do portf√≥lio",
--    ogTitle: "Portf√≥lio de Desenvolvimento Web",
--    ogDescription: "Descri√ß√£o do portf√≥lio",
--    ogImage: "https://link-da-imagem.jpg",
--    url: "https://meuportfolio.com/projetos",
--  };
--
--  return {
--    props: { metadata }, // Passa os dados para o componente como props
--  };
--}
--
--export default Projetos;`}
--        </CodeBlockF0F0F0>
--
--        <Paragraph><Bold>Vantagens de getStaticProps:</Bold></Paragraph>
--        <List style={{ paddingLeft: '20px' }}>
--          <li>A p√°gina √© gerada apenas uma vez durante o build (n√£o h√° renderiza√ß√£o din√¢mica no momento de acesso).</li>
--          <li>As p√°ginas s√£o extremamente r√°pidas para carregar, pois j√° est√£o geradas e prontas para serem entregues aos usu√°rios.</li>
--        </List>
--
--        <Paragraph><Bold>Quando usar:</Bold></Paragraph>
--        <List style={{ paddingLeft: '20px' }}>
--          <li>Quando o conte√∫do n√£o muda com frequ√™ncia (por exemplo, descri√ß√µes ou metatags fixas).</li>
--          <li>Quando voc√™ n√£o precisa de dados que variam a cada solicita√ß√£o do usu√°rio.</li>
--        </List>
--      </Container>
--
--      <Container>
--        <SectionTitle>1.1 Cen√°rios onde voc√™ usaria getStaticProps</SectionTitle>
--
--        <Paragraph>
--          Com getStaticProps:
--        </Paragraph>
--
--        <Paragraph>
--          Se o conte√∫do descritivo ou meta-informa√ß√µes (como o t√≠tulo, descri√ß√£o ou destaques do projeto) forem armazenados em um CMS (como Strapi ou Sanity) ou em uma API, voc√™ poderia usar getStaticProps para buscar os dados na build e construir a p√°gina.
--        </Paragraph>
--
--        <CodeBlockF0F0F0>
--          {`export async function getStaticProps() {
--
--  const response = await fetch("https://api.example.com/project-data");
--  const projectData = await response.json();
--
--  return {
--    props: {
--      projectData,
--    },
--    revalidate: 60, // Atualiza os dados a cada 60 segundos
--  };
--}`}
--        </CodeBlockF0F0F0>
--      </Container>
--
--      <Container>
--        <SectionTitle>2. getServerSideProps (Renderiza√ß√£o no Lado do Servidor)</SectionTitle>
--
--        <Paragraph>
--          getServerSideProps √© usado quando voc√™ precisa de dados din√¢micos que s√£o gerados a cada requisi√ß√£o, ou seja, sempre que a p√°gina for carregada. Isso √© √∫til se as metatags, por exemplo, dependerem de par√¢metros din√¢micos ou de dados que mudam frequentemente (como informa√ß√µes de usu√°rios ou dados em tempo real).
--        </Paragraph>
--
--        <Paragraph><Bold>Como usar:</Bold></Paragraph>
--        <Paragraph>
--          Se as informa√ß√µes das metatags ou o conte√∫do da p√°gina precisam ser din√¢micas e geradas a cada requisi√ß√£o (por exemplo, metatags personalizadas para cada usu√°rio ou p√°gina), use getServerSideProps.
--        </Paragraph>
--
--        <CodeBlockF0F0F0>
--          {`import Head from "next/head";
--
--const Projetos = ({ metadata }) => {
--
--  return (
--    <>
--      <Head>
--        <title>{metadata.title}</title>
--        <meta name="description" content={metadata.description} />
--        <meta property="og:title" content={metadata.ogTitle} />
--        <meta property="og:description" content={metadata.ogDescription} />
--        <meta property="og:image" content={metadata.ogImage} />
--        <meta property="og:url" content={metadata.url} />
--      </Head>
--
--      <div style={{ display: "flex" }}>
--        {/* Seu conte√∫do */}
--      </div>
--    </>
--  );
--};`}
--        </CodeBlockF0F0F0>
--
--        <CodeBlockF0F0F0>
--          {`// Usado para carregar dados sempre que a p√°gina for acessada
--
--export async function getServerSideProps() {
--
--  // Aqui voc√™ pode buscar dados din√¢micos de uma API ou banco de dados
--
--  const metadata = {
--    title: "Portf√≥lio de Desenvolvimento Web",
--    description: "Descri√ß√£o atualizada do portf√≥lio",
--    ogTitle: "Portf√≥lio de Desenvolvimento Web",
--    ogDescription: "Descri√ß√£o atualizada do portf√≥lio",
--    ogImage: "https://link-da-imagem.jpg",
--    url: "https://meuportfolio.com/projetos",
--  };
--
--  return {
--    props: { metadata }, // Passa os dados para o componente como props
--  };
--}
--
--export default Projetos;`}
--        </CodeBlockF0F0F0>
--
--        <Paragraph><Bold>Vantagens de getServerSideProps:</Bold></Paragraph>
--        <List style={{ paddingLeft: '20px' }}>
--          <li>Gera conte√∫do din√¢mico sempre que a p√°gina √© acessada.</li>
--          <li>Ideal para casos onde as informa√ß√µes podem mudar frequentemente e precisam ser sempre atualizadas.</li>
--        </List>
--
--        <Paragraph><Bold>Quando usar:</Bold></Paragraph>
--        <List style={{ paddingLeft: '20px' }}>
--          <li>Quando voc√™ precisa gerar conte√∫do din√¢mico, baseado em dados de um banco de dados ou API, em cada requisi√ß√£o.</li>
--          <li>Para p√°ginas com conte√∫do que muda frequentemente e que n√£o pode ser gerado apenas na constru√ß√£o.</li>
--        </List>
--      </Container>
--
--      <Container>
--        <SectionTitle>2.2 Cen√°rios onde voc√™ usaria getServerSideProps</SectionTitle>
--
--        <Paragraph>
--          Com getServerSideProps:
--        </Paragraph>
--
--        <Paragraph>
--          Caso o conte√∫do dependa de informa√ß√µes din√¢micas do usu√°rio ou precise de atualiza√ß√µes frequentes (exemplo: autentica√ß√£o ou par√¢metros din√¢micos na URL), voc√™ poderia usar getServerSideProps.
--        </Paragraph>
--
--        <CodeBlockF0F0F0>
--          {`export async function getServerSideProps(context) {
--
--  const { params, req } = context;
--  const response = await fetch(\`https://api.example.com/data?id=\${params.id}\`, {
--    headers: { Authorization: \`Bearer \${req.cookies.token}\` },
--  });
--  const data = await response.json();
--
--  return {
--    props: {
--      data,
--    },
--  };
--}`}
--        </CodeBlockF0F0F0>
--      </Container>
--
--      <Container>
--        <SectionTitle>
--          <Check>üìå</Check> Resumo
--        </SectionTitle>
--
--        <div>
--          <Bold>getStaticProps:</Bold>
--          <Paragraph>
--            Ideal para dados est√°ticos ou que mudam raramente.
--            <br />
--            A p√°gina √© pr√©-gerada no build e pode ser entregue rapidamente aos usu√°rios.
--          </Paragraph>
--        </div>
--
--        <Separator />
--
--        <div>
--          <Bold>getServerSideProps:</Bold>
--          <Paragraph>
--            Ideal para dados din√¢micos que precisam ser atualizados a cada requisi√ß√£o.
--            <br />
--            A p√°gina √© gerada no servidor, a cada solicita√ß√£o, o que pode aumentar o tempo de resposta.
--          </Paragraph>
--        </div>
--
--        <Separator />
--
--        <div>
--          <Bold>Resumo geral:</Bold>
--          <Paragraph>
--            Se as metatags e os dados n√£o mudam frequentemente, use getStaticProps para gerar a p√°gina de forma est√°tica e mais r√°pida.
--            <br />
--            Se voc√™ precisa de dados que mudam frequentemente ou variam com base na requisi√ß√£o (como dados do usu√°rio ou par√¢metros din√¢micos), use getServerSideProps.
--            <br />
--            Isso ajudar√° a garantir que o conte√∫do do {'<head>'}, como as metatags, seja sempre gerado corretamente e otimizado para SEO.
--          </Paragraph>
--        </div>
--      </Container>
-     </>
-   );
- };
-diff --git a/src/components/eCommerce/index.js b/src/components/eCommerce/index.js
-index 6b31bef..22c870e 100644
---- a/src/components/eCommerce/index.js
-+++ b/src/components/eCommerce/index.js
-@@ -37,4 +37,5 @@ export const CollapsibleContent = styled.div`
- export const H2 = styled.h2`
- text-align: center;
- margin-bottom: 20px;
-+font-size: 16px;
- `;
-\ No newline at end of file
-diff --git a/src/components/eCommerce/stackDesenvolvimento/index.jsx b/src/components/eCommerce/stackDesenvolvimento/index.jsx
-index cf2cbe4..84c15b1 100644
---- a/src/components/eCommerce/stackDesenvolvimento/index.jsx
-+++ b/src/components/eCommerce/stackDesenvolvimento/index.jsx
-@@ -45,13 +45,17 @@ const DevStack = () => {
-     fontWeight: '500',
-   };
- 
-+  const completedItem = {
-+    textDecoration: 'line-through',
-+  };
-+
-   return (
-     <div style={container}>
-       <h2 style={sectionTitle}>Stack de Desenvolvimento</h2>
- 
-       <h3 style={sectionTitle}>Frontend:</h3>
-       <ul style={list}>
--        <li style={listItem}><span style={{ fontWeight: '700' }}>React.js</span> - Biblioteca JavaScript para construir interfaces de usu√°rio.</li>
-+        <li style={listItem}><span style={{ fontWeight: '700' }}>React.js</span> <span style={completedItem}> Biblioteca JavaScript para construir interfaces de usu√°rio.</span></li>
-         <li style={listItem}><span style={{ fontWeight: '700' }}>Next.js</span> - Framework para rotas, SSR (Server-Side Rendering) e otimiza√ß√£o de SEO.</li>
-         <li style={listItem}><span style={{ fontWeight: '700' }}>styled-components</span> - Biblioteca para estiliza√ß√£o utilizando CSS-in-JS.</li>
-         <li style={listItem}><span style={{ fontWeight: '700' }}>Axios ou Fetch</span> - Bibliotecas para realizar requisi√ß√µes HTTP.</li>
-diff --git a/src/pages/diario-dev/index.jsx b/src/pages/diario-dev/index.jsx
-index be66e7c..10b7926 100644
---- a/src/pages/diario-dev/index.jsx
-+++ b/src/pages/diario-dev/index.jsx
-@@ -44,7 +44,7 @@ const Projetos = () => {
-   // const ComponenteTech03 = () => <p>Conte√∫do do componente Tech 03</p>;
- 
-   const sections = [
--    { title: "Bibliotecas / Ferramentas", component: <BibliotecasFerramentas /> },
-+    { title: "Bibliotecas / Ferramentas / API / SDK", component: <BibliotecasFerramentas /> },
-     { title: "Arquitetura Monolitica", component: <ArquiteturaMonolitica /> },
-     { title: "Arquitetura Microservices", component: <ArquiteturaMicroservices /> },
-     { title: "Backend com JavaScript NodeJS", component: <BackendNodeJS /> },
-diff --git a/yarn.lock b/yarn.lock
-index 6a30b35..6065d34 100644
---- a/yarn.lock
-+++ b/yarn.lock
-@@ -1771,6 +1771,11 @@ hasown@^2.0.0, hasown@^2.0.1, hasown@^2.0.2:
-   dependencies:
-     function-bind "^1.1.2"
- 
-+highlight.js@^11.11.1:
-+  version "11.11.1"
-+  resolved "https://registry.yarnpkg.com/highlight.js/-/highlight.js-11.11.1.tgz#fca06fa0e5aeecf6c4d437239135fabc15213585"
-+  integrity sha512-Xwwo44whKBVCYoliBQwaPvtd/2tYFkRQtXDWj1nackaV2JPXx3L0+Jvd8/qCJ2p+ML0/XVkJ2q+Mr+UVdpJK5w==
-+
- ignore@^5.2.0, ignore@^5.3.1:
-   version "5.3.2"
-   resolved "https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5"
diff --git a/src/components/layout/sideBarLayout/index.jsx b/src/components/layout/sideBarLayout/index.jsx
index e030495..6f635c7 100644
--- a/src/components/layout/sideBarLayout/index.jsx
+++ b/src/components/layout/sideBarLayout/index.jsx
@@ -166,6 +166,14 @@ const SideBar = () => {
                     SEO NextJS guia
                   </Span>
                 </li>
+                <li>
+                  <Span
+                    onClick={() => handleNavigate('/menu-secreto/utm-parameters')}
+                    className={activeLink === '/menu-secreto/utm-parameters' ? 'active' : ''}
+                  >
+                    UTM Parameters
+                  </Span>
+                </li>
               </ul>
             </Menu>
           </>
diff --git a/src/components/resumoTech/metaTagsWhatsappProblema/index.jsx b/src/components/resumoTech/metaTagsWhatsappProblema/index.jsx
index 0408028..74fb59b 100644
--- a/src/components/resumoTech/metaTagsWhatsappProblema/index.jsx
+++ b/src/components/resumoTech/metaTagsWhatsappProblema/index.jsx
@@ -1,7 +1,106 @@
-import { Container, SectionTitle, Problem, Solution, List, CodeBlockF0F0F0 } from "@/styles/globalStyles";
+// import { Container, SectionTitle, Problem, Solution, List, CodeBlockF0F0F0 } from "@/styles/globalStyles";
+
+// const MetaTagsWhatsappProblema = () => {
+
+//   return (
+//     <Container>
+//       <SectionTitle>
+//         <span role="img" aria-label="warning" style={{ marginRight: 8 }}>‚ö†Ô∏è</span>
+//         Problema e Solu√ß√£o: Meta Tags e Compartilhamento no WhatsApp
+//       </SectionTitle>
+
+//       <Problem>
+//         <strong>üîπ Problema:</strong> Meta Tags e Compartilhamento no WhatsApp com <strong>useEffect</strong><br />
+//         Ao compartilhar a p√°gina no WhatsApp, a pr√©via (imagem, t√≠tulo, descri√ß√£o) n√£o aparecia corretamente.
+//         Isso porque as meta tags din√¢micas no <strong>React</strong> eram definidas dentro do componente usando <strong>useEffect</strong>, que s√≥ roda no cliente ap√≥s renderiza√ß√£o.
+//         O Next.js renderiza no cliente, ent√£o os rob√¥s do WhatsApp n√£o capturavam as informa√ß√µes no momento do acesso.
+//         <br /><br />
+//         <strong>Exemplo resumido do problema:</strong>
+//         <CodeBlockF0F0F0>
+//           {`import { useEffect, useState } from 'react';
+// import Head from 'next/head';
+
+// const PageWithMetaUseEffect = () => {
+//   const [title, setTitle] = useState('T√≠tulo padr√£o');
+//   const [description, setDescription] = useState('Descri√ß√£o padr√£o do site');
+
+//   useEffect(() => {
+//     setTimeout(() => {
+//       setTitle('T√≠tulo Atualizado via useEffect');
+//       setDescription('Descri√ß√£o atualizada via useEffect ap√≥s renderiza√ß√£o.');
+//     }, 1000);
+//   }, []);
+
+//   return (
+//     <>
+//       <Head>
+//         <title>{title}</title>
+//         <meta name="description" content={description} />
+//       </Head>
+//       <main>
+//         <h1>{title}</h1>
+//         <p>{description}</p>
+//       </main>
+//     </>
+//   );
+// };
+
+// export default PageWithMetaUseEffect;`}
+//         </CodeBlockF0F0F0>
+//         <br />
+//         Al√©m disso, o estado do menu hamb√∫rguer, gerenciado via <strong>useEffect</strong> no componente, era redefinido a cada recria√ß√£o, causando inconsist√™ncia.
+//       </Problem>
+
+//       <Solution>
+//         <strong>‚úÖ Solu√ß√£o:</strong> Centralizar Estado Global no Context API<br />
+//         <List>
+//           <li>Gerar meta tags no SSR (Server-Side Rendering) para garantir que o WhatsApp capture as informa√ß√µes corretamente no link.</li>
+//           <li>Gerenciar o estado do menu hamb√∫rguer globalmente via Context API, evitando reexecu√ß√µes desnecess√°rias do <strong>useEffect</strong> e mantendo comportamento consistente entre p√°ginas.</li>
+//         </List>
+
+//         <strong>Exemplo resumido da solu√ß√£o (sem <code>useEffect</code>):</strong>
+//         <CodeBlockF0F0F0>
+//           {`import Head from 'next/head';
+
+// const PageWithMetaSSR = () => {
+//   const title = 'T√≠tulo definido no servidor';
+//   const description = 'Descri√ß√£o definida no servidor para SEO e preview correto.';
+
+//   return (
+//     <>
+//       <Head>
+//         <title>{title}</title>
+//         <meta name="description" content={description} />
+//       </Head>
+//       <main>
+//         <h1>{title}</h1>
+//         <p>{description}</p>
+//       </main>
+//     </>
+//   );
+// };
+
+// export default PageWithMetaSSR;`}
+//         </CodeBlockF0F0F0>
+//         Isso garante que bots e redes sociais leiam as meta tags corretamente antes da p√°gina carregar no navegador.
+//       </Solution>
+//     </Container>
+
+//   );
+// };
+
+// export default MetaTagsWhatsappProblema;
+import { useEffect } from 'react';
+import { Container, SectionTitle, Problem, Solution, List } from "@/styles/globalStyles";
+import hljs from 'highlight.js'; // Importando o highlight.js
+import 'highlight.js/styles/atom-one-dark.css'; // Estilo para colorir a sintaxe
 
 const MetaTagsWhatsappProblema = () => {
 
+  useEffect(() => {
+    hljs.highlightAll(); // Aplica o destaque de sintaxe a todos os blocos de c√≥digo
+  }, []);
+
   return (
     <Container>
       <SectionTitle>
@@ -16,7 +115,7 @@ const MetaTagsWhatsappProblema = () => {
         O Next.js renderiza no cliente, ent√£o os rob√¥s do WhatsApp n√£o capturavam as informa√ß√µes no momento do acesso.
         <br /><br />
         <strong>Exemplo resumido do problema:</strong>
-        <CodeBlockF0F0F0>
+        <pre><code className="hljs">
           {`import { useEffect, useState } from 'react';
 import Head from 'next/head';
 
@@ -29,7 +128,7 @@ const PageWithMetaUseEffect = () => {
       setTitle('T√≠tulo Atualizado via useEffect');
       setDescription('Descri√ß√£o atualizada via useEffect ap√≥s renderiza√ß√£o.');
     }, 1000);
-  }, []);
+  }, []); 
 
   return (
     <>
@@ -46,7 +145,7 @@ const PageWithMetaUseEffect = () => {
 };
 
 export default PageWithMetaUseEffect;`}
-        </CodeBlockF0F0F0>
+        </code></pre>
         <br />
         Al√©m disso, o estado do menu hamb√∫rguer, gerenciado via <strong>useEffect</strong> no componente, era redefinido a cada recria√ß√£o, causando inconsist√™ncia.
       </Problem>
@@ -59,7 +158,7 @@ export default PageWithMetaUseEffect;`}
         </List>
 
         <strong>Exemplo resumido da solu√ß√£o (sem <code>useEffect</code>):</strong>
-        <CodeBlockF0F0F0>
+        <pre><code className="hljs">
           {`import Head from 'next/head';
 
 const PageWithMetaSSR = () => {
@@ -81,11 +180,10 @@ const PageWithMetaSSR = () => {
 };
 
 export default PageWithMetaSSR;`}
-        </CodeBlockF0F0F0>
+        </code></pre>
         Isso garante que bots e redes sociais leiam as meta tags corretamente antes da p√°gina carregar no navegador.
       </Solution>
     </Container>
-
   );
 };
 
diff --git a/src/components/resumoTech/themeCssUserSelect/index.jsx b/src/components/resumoTech/themeCssUserSelect/index.jsx
index dac6bd9..61aab87 100644
--- a/src/components/resumoTech/themeCssUserSelect/index.jsx
+++ b/src/components/resumoTech/themeCssUserSelect/index.jsx
@@ -1,10 +1,131 @@
+// import { Container, SectionTitle, Subtitle, CodeBlock, Paragraph, List, CodeSpanSelector, CodeSpanValue, CodeSpanImportant, Warning } from "@/styles/globalStyles";
+
+// const ThemeCssUserSelect = () => {
+
+//   // Helper to render code lines with colors (simplified)
+//   // You can extend or modify as needed
+//   const CodeLine = ({ children }) => <div>{children}</div>;
+
+//   return (
+//     <Container>
+//       <SectionTitle>üìù Remo√ß√£o e Controle do user-select no theme.css</SectionTitle>
+
+//       <Subtitle>Regras CSS removidas do <code>theme.css</code>:</Subtitle>
+//       <CodeBlock>
+//         <CodeLine><CodeSpanSelector>html body *, html body.ds *</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  user-select: <CodeSpanValue>none</CodeSpanValue> <CodeSpanImportant>!important</CodeSpanImportant>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+//         <CodeLine><CodeSpanSelector>img</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  pointer-events: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+//         <CodeLine><CodeSpanSelector>div[id][style^="position: fixed;bottom: 10px;left: 10px;"]</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  display: <CodeSpanValue>none</CodeSpanValue> <CodeSpanImportant>!important</CodeSpanImportant>;</CodeLine>
+//         <CodeLine>  bottom: <CodeSpanValue>-20000px</CodeSpanValue> <CodeSpanImportant>!important</CodeSpanImportant>;</CodeLine>
+//         <CodeLine>  left: <CodeSpanValue>-20000px</CodeSpanValue> <CodeSpanImportant>!important</CodeSpanImportant>;</CodeLine>
+//         <CodeLine>  opacity: <CodeSpanValue>0</CodeSpanValue> <CodeSpanImportant>!important</CodeSpanImportant>;</CodeLine>
+//         <CodeLine>  pointer-events: <CodeSpanValue>none</CodeSpanValue> <CodeSpanImportant>!important</CodeSpanImportant>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+//       </CodeBlock>
+
+//       <Subtitle>Regras removidas do <code>theme.css</code> para <code>body</code>:</Subtitle>
+//       <CodeBlock>
+//         <CodeLine><CodeSpanSelector>body</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  -webkit-touch-callout: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -webkit-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -khtml-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -moz-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -ms-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+//       </CodeBlock>
+
+//       <Subtitle>Regras que <strong>n√£o foram removidas</strong> do <code>theme.css</code>:</Subtitle>
+//       <CodeBlock>
+//         <CodeLine><CodeSpanSelector>.flickity-enabled.is-draggable</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  -webkit-tap-highlight-color: <CodeSpanValue>transparent</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -webkit-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -moz-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -ms-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+
+//         <CodeLine></CodeLine>
+
+//         <CodeLine><CodeSpanSelector>.pswp__container, .pswp__img</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  -webkit-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -moz-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -ms-user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  user-select: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -webkit-tap-highlight-color: <CodeSpanValue>transparent</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -webkit-touch-callout: <CodeSpanValue>none</CodeSpanValue>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+
+//         <CodeLine></CodeLine>
+
+//         <CodeLine><CodeSpanSelector>.footer__title[disabled]</CodeSpanSelector> {'{'}</CodeLine>
+//         <CodeLine>  cursor: <CodeSpanValue>text</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -webkit-user-select: <CodeSpanValue>text</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -moz-user-select: <CodeSpanValue>text</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  -ms-user-select: <CodeSpanValue>text</CodeSpanValue>;</CodeLine>
+//         <CodeLine>  user-select: <CodeSpanValue>text</CodeSpanValue>;</CodeLine>
+//         <CodeLine>{'}'}</CodeLine>
+//       </CodeBlock>
+
+//       <Warning>
+//         ‚ö†Ô∏è <strong>Dica extra:</strong><br />
+//         Para permitir sele√ß√£o de texto apenas em certas partes da p√°gina, use:
+//         <CodeBlock style={{ marginTop: '8px' }}>
+//           {`html body * {
+//   user-select: none !important;
+// }
+
+// .allow-select,
+// .allow-select * {
+//   user-select: text !important;
+// }`}
+//         </CodeBlock>
+//         E aplique a classe <code>allow-select</code> nos elementos onde deseja permitir sele√ß√£o (ex: textos, descri√ß√µes, blocos informativos).
+//       </Warning>
+
+//       <Subtitle>Flickity e PhotoSwipe</Subtitle>
+//       <Paragraph>
+//         Estas s√£o bibliotecas JavaScript populares usadas para criar carross√©is (sliders) e galerias de imagens.
+//       </Paragraph>
+//       <List>
+//         <li><strong>Flickity:</strong> usada para sliders/carross√©is interativos.</li>
+//         <li><strong>PhotoSwipe (pswp):</strong> usada para galerias de imagem com efeito popup/zoom.</li>
+//       </List>
+//       <Paragraph>
+//         Essas bibliotecas aplicam regras como <code>user-select: none;</code> para evitar que o usu√°rio:
+//       </Paragraph>
+//       <List>
+//         <li>Selecione conte√∫do acidentalmente ao arrastar o slider.</li>
+//         <li>Copie imagens ou legendas por engano.</li>
+//         <li>Tenha comportamentos inesperados em dispositivos m√≥veis (ex: sele√ß√£o de texto ao tocar/arrastar).</li>
+//         <li>Voc√™ pode remover ou ajustar essas regras para permitir sele√ß√£o de textos, imagens, links etc., mesmo nesses componentes.</li>
+//       </List>
+//     </Container>
+
+//   );
+// };
+
+// export default ThemeCssUserSelect;
+
+import { useEffect } from 'react';
 import { Container, SectionTitle, Subtitle, CodeBlock, Paragraph, List, CodeSpanSelector, CodeSpanValue, CodeSpanImportant, Warning } from "@/styles/globalStyles";
+import hljs from 'highlight.js'; // Importando o highlight.js
+import 'highlight.js/styles/atom-one-dark.css'; // Estilo para colorir a sintaxe
 
 const ThemeCssUserSelect = () => {
+  useEffect(() => {
+    hljs.highlightAll(); // Aplica o destaque de sintaxe a todos os blocos de c√≥digo
+  }, []);
 
-  // Helper to render code lines with colors (simplified)
-  // You can extend or modify as needed
-  const CodeLine = ({ children }) => <div>{children}</div>;
+  // Helper para renderizar linhas de c√≥digo com cores
+  const CodeLine = ({ children }) => {
+    const highlightedCode = hljs.highlightAuto(String(children)).value; // Garantir que o conte√∫do seja tratado como string
+    return <div dangerouslySetInnerHTML={{ __html: highlightedCode }} />;
+  };
 
   return (
     <Container>
@@ -74,15 +195,15 @@ const ThemeCssUserSelect = () => {
       <Warning>
         ‚ö†Ô∏è <strong>Dica extra:</strong><br />
         Para permitir sele√ß√£o de texto apenas em certas partes da p√°gina, use:
-        <CodeBlock style={{ marginTop: '8px' }}>
-          {`html body * {
+        <CodeBlock>
+          <CodeLine>{`html body * {
   user-select: none !important;
 }
 
 .allow-select,
 .allow-select * {
   user-select: text !important;
-}`}
+}`}</CodeLine>
         </CodeBlock>
         E aplique a classe <code>allow-select</code> nos elementos onde deseja permitir sele√ß√£o (ex: textos, descri√ß√µes, blocos informativos).
       </Warning>
@@ -105,7 +226,6 @@ const ThemeCssUserSelect = () => {
         <li>Voc√™ pode remover ou ajustar essas regras para permitir sele√ß√£o de textos, imagens, links etc., mesmo nesses componentes.</li>
       </List>
     </Container>
-
   );
 };
 
diff --git a/src/pages/menu-secreto/analytics-ga4-install/index.jsx b/src/pages/menu-secreto/analytics-ga4-install/index.jsx
index 91ebda5..cd1b7f9 100644
--- a/src/pages/menu-secreto/analytics-ga4-install/index.jsx
+++ b/src/pages/menu-secreto/analytics-ga4-install/index.jsx
@@ -201,6 +201,7 @@
 
 // export default GA4NextJsIntegration;
 
+import { useEffect } from 'react';
 import Head from "next/head";
 import { useGlobalState } from "../../../context/GlobalStateContext";
 import {
@@ -220,11 +221,19 @@ import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
 import Overlay from "@/components/overlay";
 
+import hljs from 'highlight.js'; // Importando o highlight.js
+import 'highlight.js/styles/atom-one-dark.css'; // Estilo para colorir a sintaxe
+
 const GA4NextJsIntegration = () => {
   const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
 
   const handleOverlayClick = () => setIsHamburguerOpen(false);
 
+  useEffect(() => {
+    hljs.highlightAll(); // Aplica o destaque de sintaxe a todos os blocos de c√≥digo
+  }, []);
+
+
   return (
     <>
       <Head>
@@ -307,8 +316,9 @@ const GA4NextJsIntegration = () => {
 
                   <Subtitle>6. Obter o C√≥digo de Rastreamento (gtag.js)</Subtitle>
                   <Paragraph>Ap√≥s criar o fluxo, o Google gera um c√≥digo como este:</Paragraph>
-                  <CodeBlock>
-                    {`<!-- Google tag (gtag.js) -->
+                  <pre>
+                    <code>
+                      {`<!-- Google tag (gtag.js) -->
 <script async src="https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX"></script>
 <script>
   window.dataLayer = window.dataLayer || [];
@@ -317,12 +327,14 @@ const GA4NextJsIntegration = () => {
 
   gtag('config', 'G-XXXXXXXXXX');
 </script>`}
-                  </CodeBlock>
+                    </code>
+                  </pre>
 
                   <Subtitle>7. Implementar no Next.js (arquivo _app.jsx)</Subtitle>
                   <Paragraph>Use o c√≥digo abaixo para integrar o GA no seu Next.js:</Paragraph>
-                  <CodeBlock>
-                    {`import { useEffect } from 'react';
+                  <pre>
+                    <code>
+                      {`import { useEffect } from 'react';
 import Script from 'next/script';
 
 import { GlobalStyle } from '@/components/globalStyles';
@@ -352,8 +364,8 @@ const MyApp = ({ Component, pageProps }) => {
 };
 
 export default MyApp;`}
-                  </CodeBlock>
-
+                    </code>
+                  </pre>
                   <Subtitle>Observa√ß√µes Importantes</Subtitle>
                   <List>
                     <li>Substitua &apos;G-JXELT2K8RB&apos; pelo seu pr√≥prio ID GA4 obtido no Google Analytics.</li>
diff --git a/src/pages/menu-secreto/seo-nextjs-guia/index.jsx b/src/pages/menu-secreto/seo-nextjs-guia/index.jsx
index d790210..cdffb7b 100644
--- a/src/pages/menu-secreto/seo-nextjs-guia/index.jsx
+++ b/src/pages/menu-secreto/seo-nextjs-guia/index.jsx
@@ -1,3 +1,4 @@
+import { useEffect } from 'react';
 import Head from "next/head";
 import { useGlobalState } from "../../../context/GlobalStateContext";
 import {
@@ -17,11 +18,20 @@ import HeaderLayout from "@/components/layout/headerLayout";
 import MainContentLayout from "@/components/layout/contentLayout";
 import Overlay from "@/components/overlay";
 
+import hljs from 'highlight.js'; // Importando o highlight.js
+import 'highlight.js/styles/atom-one-dark.css'; // Estilo para colorir a sintaxe
+
+
 const SEOParaNextJs = () => {
   const { isLoaded, isHamburguerOpen, setIsHamburguerOpen } = useGlobalState();
 
   const handleOverlayClick = () => setIsHamburguerOpen(false);
 
+  useEffect(() => {
+    hljs.highlightAll(); // Aplica o destaque de sintaxe a todos os blocos de c√≥digo
+  }, []);
+
+
   return (
     <>
       <Head>
@@ -68,11 +78,13 @@ const SEOParaNextJs = () => {
                     <List>
                       <li>Crie um arquivo <strong>robots.txt</strong> na pasta <strong>public</strong> do seu projeto.</li>
                       <li>Use este conte√∫do b√°sico para liberar o rastreamento:
-                        <CodeBlock>
-                          {`User-agent: *
+                        <pre>
+                          <code className="javascript">
+                            {`User-agent: *
 Allow: /
 Sitemap: https://portfolio-projects-production.up.railway.app/sitemap.xml`}
-                        </CodeBlock>
+                          </code>
+                        </pre>
                       </li>
                     </List>
 
@@ -82,24 +94,34 @@ Sitemap: https://portfolio-projects-production.up.railway.app/sitemap.xml`}
                     </Paragraph>
                     <Paragraph>Passos:</Paragraph>
                     <List>
-                      <li>Instale o pacote <CodeBlock>next-sitemap</CodeBlock>:
-                        <CodeBlock>
-                          {`npm install next-sitemap
+                      <li style={{ marginBottom: "20px" }}>
+                        Instale o pacote
+                        <pre>
+                          <code className="javascript">
+                            next-sitemap
+                          </code>
+                        </pre>
+                      </li>
+                      <li style={{ marginBottom: "10px" }}>
+                        <pre>
+                          <code className="javascript">
+                            {`npm install next-sitemap
 # ou
-yarn add next-sitemap`}
-                        </CodeBlock>
+yarn add next-sitemap`}</code>
+                        </pre>
                       </li>
                       <li>Crie o arquivo <strong>next-sitemap.config.js</strong> na raiz do projeto com o seguinte conte√∫do:
-                        <CodeBlock>
-                          {`/** @type {import('next-sitemap').IConfig} */
+                        <pre>
+                          <code className="javascript">
+                            {`/** @type {import('next-sitemap').IConfig} */
 const config = {
   siteUrl: 'https://portfolio-projects-production.up.railway.app', // Seu dom√≠nio
   generateRobotsTxt: true, // Gera automaticamente o robots.txt
   sitemapSize: 5000,
 };
 
-module.exports = config;`}
-                        </CodeBlock>
+module.exports = config;`}</code>
+                        </pre>
                       </li>
                       <li>Gere o sitemap executando:
                         <CodeBlock>npx next-sitemap</CodeBlock>
@@ -141,27 +163,31 @@ module.exports = config;`}
                     <Paragraph>Voc√™ pode verificar de duas formas principais:</Paragraph>
 
                     <Subtitle>a) Upload do arquivo HTML</Subtitle>
-                    <List>
-                      <li>Baixe o arquivo de verifica√ß√£o fornecido pelo Search Console.</li>
-                      <li>Fa√ßa upload do arquivo na raiz do seu projeto para que fique acess√≠vel em:
-                        <br />
-                        <CodeBlock>https://seusite.com/googleXXXX.html</CodeBlock>
-                      </li>
-                    </List>
+
+                    <Paragraph>Baixe o arquivo de verifica√ß√£o fornecido pelo Search Console.</Paragraph>
+                    <Paragraph>Fa√ßa upload do arquivo na raiz do seu projeto para que fique acess√≠vel em:</Paragraph>
+                    <pre>
+                      <code className="javascript">
+                        https://seusite.com/googleXXXX.html
+                      </code>
+                    </pre>
 
                     <Subtitle>b) Meta tag de verifica√ß√£o</Subtitle>
                     <Paragraph>
                       Copie a meta tag que o Search Console fornecer, por exemplo:
                     </Paragraph>
-                    <CodeBlock>
-                      {`<meta name="google-site-verification" content="SEU_CODIGO_DE_VERIFICACAO" />`}
-                    </CodeBlock>
+                    <pre>
+                      <code className="javascript">
+                        {`<meta name="google-site-verification" content="SEU_CODIGO_DE_VERIFICACAO" />`}
+                      </code>
+                    </pre>
                     <Paragraph>
-                      Cole essa meta tag na se√ß√£o <CodeBlock>{`<Head>`}</CodeBlock> da p√°gina inicial do seu site (ex: em <CodeBlock>pages/index.jsx</CodeBlock> no Next.js):
+                      Cole essa meta tag na se√ß√£o {`<Head>`} da p√°gina inicial do seu site Ex: em pages/index.jsx no Next.js:
                     </Paragraph>
 
-                    <CodeBlock>
-                      {`import Head from 'next/head'
+                    <pre>
+                      <code className="javascript">
+                        {`import Head from 'next/head'
 
 export default function Home() {
   return (
@@ -173,7 +199,8 @@ export default function Home() {
     </>
   )
 }`}
-                    </CodeBlock>
+                      </code>
+                    </pre>
 
                     <Paragraph>
                       Ap√≥s adicionar, volte ao Search Console e clique em <strong>Verificar</strong>.
@@ -194,10 +221,12 @@ export default function Home() {
                     <Paragraph>
                       Na pasta public do seu projeto, normalmente est√£o os arquivos sitemap.xml e sitemap-0.xml. Adicione as URLs dos sitemaps, por exemplo:
                     </Paragraph>
-                    <CodeBlock>
-                      {`https://portfolio-projects-production.up.railway.app/sitemap.xml  
+                    <pre>
+                      <code className="javascript">
+                        {`https://portfolio-projects-production.up.railway.app/sitemap.xml  
 https://portfolio-projects-production.up.railway.app/sitemap-0.xml`}
-                    </CodeBlock>
+                      </code>
+                    </pre>
                     <Paragraph>Clique em <strong>Enviar</strong>.</Paragraph>
 
                     <Subtitle>Observa√ß√£o importante</Subtitle>
