import { useState } from "react";
import Main from "@/components/layout/main";
import SideBar from "@/components/layout/sideBar";
import Header from "@/components/layout/header";
import Head from "next/head";
import { ContainerLayout } from "@/components/home";

import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/ytformp3/styles";

const Ytformp3 = () => {
  const [isToggleOpen, setIsToggleOpen] = useState(false);

  return (
    <>
      <Head>
        {/* <!-- Primary Meta Tags --> */}
        <title>Transcrever e Resumir V√≠deos do YouTube com IA ‚Äì OpenAI Whisper + GPT-4</title>
        <meta name="title" content="Transcrever e Resumir V√≠deos do YouTube com IA ‚Äì OpenAI Whisper + GPT-4" />
        <meta name="description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />

        {/* <!-- Open Graph / Facebook --> */}
        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp3" />
        <meta property="og:title" content="Transcrever e Resumir V√≠deos do YouTube com IA ‚Äì OpenAI Whisper + GPT-4" />
        <meta property="og:description" content="Conhe√ßa meu portf√≥lio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/ytmp3.jpg" />

        {/* <!-- Twitter --> */}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp3" />
        <meta property="twitter:title" content="Transcrever e Resumir V√≠deos do YouTube com IA ‚Äì OpenAI Whisper + GPT-4" />
        <meta property="twitter:description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />
        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp3.jpg" />
      </Head>
      <ContainerLayout>
        <SideBar></SideBar>
        <Header></Header>
        <Main>
          <Container>
            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>üé• Projeto: Transcrever o √°udio de v√≠deos do YouTube e resumir - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
            <P>
              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">üåé Link do Projeto</a>
            </P>
            <H3>Observa√ß√£o importante: para ter acesso backend, precisa ativar ngrok localmente!</H3>
            {isToggleOpen && (
              <>
                <div>
                  <H4>üìÑ Descri√ß√£o do Projeto</H4>
                  <P>Esse projeto tem como objetivo principal transcrever o √°udio de v√≠deos do YouTube e enviar essa transcri√ß√£o para uma IA, que ir√° resumir o conte√∫do do v√≠deo. Utilizando a API Whisper da OpenAI, o sistema consegue gerar transcri√ß√µes precisas a partir do √°udio de v√≠deos, e com o uso do modelo GPT-4, ele pode criar resumos concisos e detalhados dos v√≠deos, permitindo que o usu√°rio compreenda o conte√∫do sem precisar assistir ao v√≠deo inteiro.</P>
                  <H3>Funcionalidades</H3>
                  <Ul>
                    <Li><strong>Transcri√ß√£o de √Åudio</strong>: O projeto utiliza a API Whisper da OpenAI para transcrever arquivos de √°udio (MP3) em texto.</Li>
                    <Li><strong>Processamento de Texto</strong>: Ap√≥s a transcri√ß√£o, o texto √© dividido em partes menores (chunks), processado e resumido pela API GPT-4 da OpenAI para gerar resumos concisos.</Li>
                    <Li><strong>Valida√ß√£o de V√≠deo</strong>: Implementa√ß√£o de fun√ß√µes para verificar a dura√ß√£o de v√≠deos, garantindo que n√£o ultrapassem um limite de tempo (10 minutos ou 600 segundos).</Li>
                    <Li><strong>Armazenamento e Leitura de Arquivos</strong>: O c√≥digo manipula arquivos locais, realizando a leitura e grava√ß√£o de arquivos de √°udio e outras informa√ß√µes necess√°rias para o processamento.</Li>
                    <Li><strong>Resumos Inteligentes</strong>: O conte√∫do transcrito √© resumido automaticamente, descartando informa√ß√µes irrelevantes e destacando os pontos principais de maneira eficiente.</Li>
                    <Li><strong>Renderiza√ß√£o de Views com Handlebars</strong>: Utiliza√ß√£o da biblioteca <strong>hbs</strong> (Handlebars) para renderizar as views no lado do servidor, possibilitando a cria√ß√£o de templates din√¢micos e a exibi√ß√£o de informa√ß√µes como transcri√ß√µes e resumos de forma estruturada e personalizada.</Li>
                  </Ul>
                  <H3>Tecnologias Utilizadas</H3>
                  <Ul>
                    <Li><strong>Node.js</strong>: Ambiente de execu√ß√£o JavaScript no servidor.</Li>
                    <Li><strong>OpenAI API</strong>: Usada para transcri√ß√£o (Whisper) e resumo de texto (GPT-4).</Li>
                    <Li><strong>File System (fs)</strong>: M√≥dulo do Node.js utilizado para ler e escrever arquivos no servidor.</Li>
                    <Li><strong>dotenv</strong>: Para gerenciar vari√°veis de ambiente de maneira segura.</Li>
                    <Li><strong>youtubedl-exec</strong>: Para obter informa√ß√µes de v√≠deos (como a dura√ß√£o) antes de realizar a transcri√ß√£o.</Li>
                    <Li><strong>hbs (Handlebars)</strong>: Biblioteca de templates para gerar views din√¢micas e eficientes no servidor, proporcionando uma maneira simples de estruturar o HTML com dados din√¢micos, como transcri√ß√µes e resumos.</Li>
                    <Li><strong>Express.js</strong>: Framework para criar uma API RESTful e renderizar p√°ginas com Handlebars.</Li>
                  </Ul>
                  <H3>Arquitetura do Projeto</H3>
                  <P>O projeto segue uma estrutura simples e organizada para garantir a escalabilidade e manuten√ß√£o do c√≥digo:</P>
                  <Ul>
                    <Li><strong>src/downloads</strong>: Pasta respons√°vel por armazenar os arquivos de √°udio baixados.</Li>
                    <Li><strong>src/routes</strong>: Roteamento da aplica√ß√£o, onde as requisi√ß√µes s√£o tratadas.</Li>
                    <Li><strong>src/utils</strong>: Fun√ß√µes auxiliares para processamento de √°udio e manipula√ß√£o de texto.</Li>
                    <Li><strong>src/public/images/views</strong>: Recursos est√°ticos, como imagens ou views.</Li>
                    <Li><strong>src/views</strong>: Diret√≥rio onde os templates <strong>hbs</strong> s√£o armazenados e renderizados com dados din√¢micos.</Li>
                  </Ul>
                  <H3>Como Funciona</H3>
                  <Ul>
                    <Li><strong>Upload de Arquivo</strong>: O arquivo de √°udio (geralmente MP3) √© enviado para o servidor.</Li>
                    <Li><strong>Transcri√ß√£o de √Åudio</strong>: O arquivo √© enviado para a API Whisper da OpenAI, que gera a transcri√ß√£o.</Li>
                    <Li><strong>Processamento de Texto</strong>: O texto gerado √© dividido em partes (chunks) e enviado para o modelo GPT-4 da OpenAI, que resume o conte√∫do.</Li>
                    <Li><strong>Valida√ß√£o de V√≠deo</strong>: Se o conte√∫do transcrito for de um v√≠deo, a dura√ß√£o do v√≠deo √© verificada para garantir que n√£o ultrapasse o limite de 10 minutos.</Li>
                    <Li><strong>Armazenamento e Exibi√ß√£o</strong>: Os resumos gerados s√£o armazenados e podem ser exibidos nas p√°ginas din√¢micas renderizadas com hbs, exibindo informa√ß√µes como transcri√ß√µes completas e resumos.</Li>
                    <Li><strong>Renderiza√ß√£o com Handlebars</strong>: O servidor utiliza <strong>hbs</strong> para renderizar as p√°ginas de maneira din√¢mica, permitindo que os dados das transcri√ß√µes e resumos sejam integrados de forma flex√≠vel aos templates HTML.</Li>
                  </Ul>
                  <H3>Desafios Enfrentados</H3>
                  <Ul>
                    <Li><strong>Divis√£o de Texto</strong>: Para processar textos grandes, foi necess√°rio dividir as transcri√ß√µes em pequenos blocos para que a API da OpenAI n√£o excedesse o limite de tokens.</Li>
                    <Li><strong>Manuseio de Arquivos</strong>: A manipula√ß√£o de arquivos locais, como o envio de √°udio para a API e armazenamento das transcri√ß√µes, exigiu cuidados para garantir que o sistema fosse eficiente e seguro.</Li>
                    <Li><strong>Resumos Coerentes</strong>: Ajustar o modelo da OpenAI para gerar resumos concisos e √∫teis foi um desafio, pois a IA deve filtrar informa√ß√µes relevantes e eliminar partes irrelevantes de maneira eficaz.</Li>
                    <Li><strong>Integra√ß√£o de Views Din√¢micas</strong>: Utilizar <strong>hbs</strong> de maneira eficiente para gerar templates din√¢micos com dados vindos da transcri√ß√£o e do resumo foi um processo de aprendizado, garantindo que as views fossem renderizadas corretamente.</Li>
                  </Ul>
                  <H3>Resultados Esperados</H3>
                  <H4>O projeto visa oferecer uma solu√ß√£o simples e eficaz para transcrever e resumir conte√∫dos de √°udio, como palestras, v√≠deos e podcasts, automatizando as tarefas de transcri√ß√£o e resumo com alta precis√£o. Al√©m disso, a integra√ß√£o com hbs permite que o sistema exiba as transcri√ß√µes e resumos de maneira clara e estruturada em p√°ginas din√¢micas.</H4>
                </div>
              </>
            )}
          </Container>
        </Main>
      </ContainerLayout>
    </>
  );
};

export default Ytformp3;