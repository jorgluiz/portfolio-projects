import { useState } from "react";
import Main from "@/components/layout/main";
import SideBar from "@/components/layout/sideBar";
import Header from "@/components/layout/header";
import Head from "next/head";
import { ContainerLayout } from "@/components/home";

import { Container, P, H3, Li, Ul, H4, A } from "@/components/projetos/ytformp4/styles";

const Ytformp4 = () => {
  const [isToggleOpen, setIsToggleOpen] = useState(false);

  return (
    <>
      <Head>
        {/* <!-- Primary Meta Tags --> */}
        <title>Baixar V√≠deos do YouTube em MP4 com Nosso Conversor</title>
        <meta name="title" content="Baixar V√≠deos do YouTube em MP4 com Nosso Conversor" />
        <meta name="description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />

        {/* <!-- Open Graph / Facebook --> */}
        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp4" />
        <meta property="og:title" content="Baixar V√≠deos do YouTube em MP4 com Nosso Conversor" />
        <meta property="og:description" content="Conhe√ßa meu portf√≥lio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/ytmp4.jpg" />

        {/* <!-- Twitter --> */}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp4" />
        <meta property="twitter:title" content="Baixar V√≠deos do YouTube em MP4 com Nosso Conversor" />
        <meta property="twitter:description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />
        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp4.jpg" />
      </Head>
      <ContainerLayout>
        <SideBar></SideBar>
        <Header></Header>
        <Main>
          <Container>
            <H3 className="player-video-personalizado onClickH3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>üé• Projeto: YouTube Video Downloader e combiner (fluent-ffmpeg) - <span style={{ color: "blue" }}>Clique para ver mais</span>!</H3>
            <P>
              <a style={{ fontSize: "24px", fontWeight: "800" }} href="" target="_blank">üåé Link do Projeto</a>
            </P>
            {isToggleOpen && (
              <>
                <div>
                  <P><strong>Descri√ß√£o:</strong> Desenvolvi uma aplica√ß√£o backend utilizando Node.js e Express.js que permite a recupera√ß√£o de informa√ß√µes de v√≠deos do YouTube e o download de √°udio e v√≠deo em diferentes formatos e qualidades. O sistema integra o poder de bibliotecas como <strong>youtube-dl-exec</strong>, <strong>@distube/ytdl-core</strong>, e <strong>fluent-ffmpeg</strong> para baixar, combinar e entregar um arquivo MP4 final para o usu√°rio.</P>
                  <P>Com uma interface baseada em Socket.io, o projeto oferece feedback em tempo real sobre o progresso do download e do processo de combina√ß√£o de arquivos. A aplica√ß√£o tamb√©m gerencia o armazenamento tempor√°rio dos arquivos e garante o desempenho com configura√ß√µes de FFmpeg otimizadas para velocidade.</P>
                  <H3>Tecnologias Usadas:</H3>
                  <Ul>
                    <Li><strong>Node.js</strong> com <strong>Express.js</strong></Li>
                    <Li><strong>youtube-dl-exec</strong> e <strong>@distube/ytdl-core</strong> para intera√ß√£o com o YouTube</Li>
                    <Li><strong>fluent-ffmpeg</strong> para processamento de v√≠deos</Li>
                    <Li><strong>Socket.io</strong> para feedback em tempo real</Li>
                    <Li><strong>CORS</strong> e <strong>dotenv</strong> para seguran√ßa e configura√ß√£o</Li>
                  </Ul>
                  <H3>Destaques:</H3>
                  <Ul>
                    <Li>Gerenciamento eficiente de concorr√™ncia, evitando requisi√ß√µes paralelas.</Li>
                    <Li>Processamento r√°pido de v√≠deos com FFmpeg.</Li>
                    <Li>Arquitetura modular e escal√°vel, com otimiza√ß√µes para desempenho e experi√™ncia do usu√°rio.</Li>
                  </Ul>
                  <H3>2. Descri√ß√£o para Entrevistas ou Apresenta√ß√µes (Detalhada e T√©cnica)</H3>
                  <P><strong>Contexto:</strong> Durante o desenvolvimento desse projeto, meu objetivo foi criar uma aplica√ß√£o robusta capaz de baixar e combinar v√≠deos e √°udios do YouTube em um √∫nico arquivo MP4, com a flexibilidade de escolher o formato e a qualidade do arquivo. A aplica√ß√£o foi constru√≠da utilizando o Node.js com Express.js, al√©m de bibliotecas espec√≠ficas para intera√ß√£o com o YouTube e processamento de v√≠deos.</P>
                  <H3>Funcionalidades:</H3>
                  <Ul>
                    <Li><strong>1. Recupera√ß√£o de Informa√ß√µes de V√≠deos:</strong> Utilizando @distube/ytdl-core, a aplica√ß√£o recupera detalhes como t√≠tulo, miniatura e formatos de √°udio e v√≠deo dispon√≠veis do YouTube.</Li>
                    <Li><strong>2. Download de √Åudio e V√≠deo:</strong> Com youtube-dl-exec, o sistema realiza o download do √°udio e v√≠deo separadamente, considerando o formato escolhido pelo usu√°rio.</Li>
                    <Li><strong>3. Combina√ß√£o de V√≠deo e √Åudio:</strong> Ap√≥s o download, os arquivos de √°udio e v√≠deo s√£o combinados em um √∫nico arquivo MP4 utilizando <strong>FFmpeg</strong>, com a qualidade de codifica√ß√£o otimizada para a velocidade de processamento.</Li>
                    <Li><strong>4. Feedback em Tempo Real:</strong> O progresso do processo √© transmitido em tempo real ao usu√°rio via <strong>Socket.io</strong>, permitindo uma experi√™ncia mais interativa.</Li>
                    <Li><strong>5. Gerenciamento de Arquivos Tempor√°rios:</strong> Os arquivos baixados s√£o armazenados temporariamente em diret√≥rios locais, sendo deletados automaticamente ap√≥s o download do arquivo final.</Li>
                  </Ul>
                  <H3>Desafios Enfrentados e Solu√ß√µes:</H3>
                  <Ul>
                    <Li><strong>Concorr√™ncia de Requisi√ß√µes:</strong> Para garantir que m√∫ltiplos usu√°rios possam fazer requisi√ß√µes simult√¢neas sem afetar o desempenho, implementei uma vari√°vel de controle isProcessing, evitando que m√∫ltiplos downloads e combina√ß√µes aconte√ßam ao mesmo tempo.</Li>
                    <Li><strong>Otimiza√ß√£o de Desempenho:</strong> Ajustei as configura√ß√µes do FFmpeg para utilizar o preset {'"ultrafast"'}, proporcionando um processamento mais r√°pido de v√≠deos, sem perder a qualidade final.</Li>
                    <Li><strong>Seguran√ßa e Configura√ß√£o:</strong> A aplica√ß√£o foi configurada com dotenv para gerenciar vari√°veis de ambiente e CORS para controlar as origens permitidas nas requisi√ß√µes.</Li>
                  </Ul>
                  <H3>Tecnologias e Ferramentas:</H3>
                  <Ul>
                    <Li><strong>Node.js, Express.js</strong></Li>
                    <Li><strong>youtube-dl-exec, @distube/ytdl-core</strong></Li>
                    <Li><strong>fluent-ffmpeg</strong> para processamento de v√≠deo</Li>
                    <Li><strong>Socket.io</strong> para comunica√ß√£o em tempo real</Li>
                    <Li><strong>CORS</strong> e <strong>dotenv</strong> para configura√ß√µes de seguran√ßa</Li>
                  </Ul>
                  <P><strong>Impacto:</strong> Esse projeto me permitiu explorar tanto a parte de manipula√ß√£o de m√≠dia quanto de controle de estado e feedback em tempo real, al√©m de me proporcionar um bom entendimento sobre a integra√ß√£o de v√°rias bibliotecas para a constru√ß√£o de um sistema coeso e eficiente.</P>
                </div>
              </>
            )}
          </Container>
        </Main>
      </ContainerLayout>
    </>
  );
};

export default Ytformp4;