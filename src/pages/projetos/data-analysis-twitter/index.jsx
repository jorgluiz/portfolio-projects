import { useState } from "react";
import Head from "next/head";

import Title from "@/components/common/title";

import { P, H3, Ul, Li } from "@/components/projetos/style";

import { MainLayout, MainContent } from "@/components/layout/mainLayout";
import SideBarLayout from "@/components/layout/sideBarLayout";
import HeaderLayout from "@/components/layout/headerLayout";
import MainContentLayout from "@/components/layout/contentLayout";

const Carousel = () => {
  const [isToggleOpen, setIsToggleOpen] = useState(false);

  return (
    <>
      <Head>
        {/* <!-- Primary Meta Tags --> */}
        <title>Projeto de Coleta e An√°lise de Dados no Twitter com IA ‚Äì Puppeteer e OpenAI</title>
        <meta name="title" content="Projeto de Coleta e An√°lise de Dados no Twitter com IA ‚Äì Puppeteer e OpenAI" />
        <meta name="description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />

        {/* <!-- Open Graph / Facebook --> */}
        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysisTwitter" />
        <meta property="og:title" content="Projeto de Coleta e An√°lise de Dados no Twitter com IA ‚Äì Puppeteer e OpenAI" />
        <meta property="og:description" content="Conhe√ßa meu portf√≥lio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />

        {/* <!-- Twitter --> */}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/dataAnalysisTwitter" />
        <meta property="twitter:title" content="Projeto de Coleta e An√°lise de Dados no Twitter com IA ‚Äì Puppeteer e OpenAI" />
        <meta property="twitter:description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />
        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/analyze-feelings.jpg" />
      </Head>

      <MainLayout>
        <SideBarLayout></SideBarLayout>
        <HeaderLayout></HeaderLayout>
        <MainContentLayout>
          <MainContent>
            <Title className="title-dataAnalysisTwitter" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>Projeto: An√°lise Completa do Projeto de Coleta e An√°lise de Dados no Twitter usando Puppeteer e OpenAI - <span style={{ color: "blue" }}>mais...</span></Title>
            <P>
              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://analyze-feelings-twitter.up.railway.app/home" target="_blank">üåé Link do Projeto</a>
            </P>
            {isToggleOpen && (
              <>
                <div>
                  <P><strong>Vis√£o Geral</strong></P>
                  <P>Esse projeto desenvolve uma aplica√ß√£o de coleta e an√°lise de dados de m√≠dias sociais (Twitter, especificamente) com foco em detec√ß√£o de sentimentos e tend√™ncias. A aplica√ß√£o integra diversas tecnologias para realizar web scraping, processar dados de texto, e apresentar resultados com uma interface interativa. Esse sistema demonstra um fluxo completo desde a captura at√© a an√°lise e exibi√ß√£o dos dados, incluindo controles para carregamento, rolagem e renderiza√ß√£o dos dados em uma p√°gina web.</P>
                  <H3>Funcionalidades e Fluxo da Aplica√ß√£o</H3>
                  <Ul>
                    <Li><strong>Web Scraping e Automa√ß√£o:</strong> A fun√ß√£o de rolagem na p√°gina simula o comportamento de um usu√°rio, carregando mais dados conforme necess√°rio, e usa o Puppeteer para rolar a p√°gina em incrementos aleat√≥rios, contribuindo para uma experi√™ncia mais aut√™ntica de scraping e prevenindo bloqueios de bots.</Li>
                    <Li><strong>An√°lise de Sentimento:</strong> Com o OpenAI, o sistema faz a an√°lise do sentimento dos dados coletados, categorizando-os em positivo, negativo ou neutro. Esse uso de IA facilita insights valiosos sobre o conte√∫do e o humor predominante das postagens coletadas.</Li>
                    <Li><strong>Integra√ß√£o de API:</strong> A OpenAI API √© utilizada para processamento de linguagem natural (NLP) e an√°lise de texto, enquanto a aplica√ß√£o usa a Fetch API para realizar requisi√ß√µes ass√≠ncronas e processar as respostas do servidor, manipulando a interface de acordo com os resultados.</Li>
                  </Ul>
                  <H3>Tecnologias e Bibliotecas Utilizadas no Projeto</H3>
                  <Ul>
                    <Li className="list-style-type"><strong>1. Express</strong> Express √© utilizado para configurar o servidor backend, que gerencia as requisi√ß√µes HTTP e responde com dados de an√°lise ou resultados de scraping. Express facilita a cria√ß√£o de rotas e o gerenciamento das respostas do servidor de maneira eficiente.</Li>
                    <Li className="list-style-type"><strong>2. Puppeteer e Puppeteer-Extra:</strong></Li>
                    <Li><strong>Puppeteer-Extra:</strong> permite customizar o comportamento do Puppeteer, enquanto o <strong>puppeteer</strong> em si √© uma biblioteca que automatiza o Chrome/Chromium, simulando a√ß√µes de um usu√°rio no navegador.</Li>
                    <Li>O projeto inclui o <strong>StealthPlugin</strong> (plugin de stealth) de Puppeteer-Extra, que ajuda a contornar bloqueios de bot por disfar√ßar o comportamento automatizado, tornando o scraper mais robusto para opera√ß√µes em sites com mecanismos anti-bot.</Li>
                    <Li className="list-style-type"><strong>3. dotenv</strong>A biblioteca dotenv √© usada para gerenciar vari√°veis de ambiente, como a chave de API da OpenAI e outras configura√ß√µes sens√≠veis, evitando que credenciais apare√ßam no c√≥digo-fonte e melhorando a seguran√ßa do projeto.</Li>
                    <Li className="list-style-type"><strong>4. fs (File System):</strong>A biblioteca nativa do Node.js fs permite a manipula√ß√£o de arquivos diretamente do backend, facilitando a cria√ß√£o, leitura e grava√ß√£o de arquivos no sistema. Neste projeto, fs √© essencial para gerenciar arquivos de dados coletados, arquivamento e descompacta√ß√£o.</Li>
                    <Li className="list-style-type"><strong>5. archiver</strong>A biblioteca archiver facilita a cria√ß√£o de arquivos ZIP, √∫til para compactar grandes volumes de dados coletados e prepar√°-los para armazenamento ou download.</Li>
                    <Li className="list-style-type"></Li>
                    <Li className="list-style-type"><strong>6. unzipper:</strong> unzipper √© utilizado para descompactar arquivos ZIP, permitindo que o sistema extraia e processe arquivos previamente compactados, o que √© vantajoso para manipula√ß√£o de dados e backup de resultados.</Li>
                    <Li className="list-style-type"><strong>7. path:</strong> A biblioteca nativa path do Node.js ajuda a trabalhar com diret√≥rios e caminhos de arquivos, essencial para a organiza√ß√£o de arquivos e para lidar com caminhos de forma segura e consistente entre diferentes sistemas operacionais.</Li>
                    <Li className="list-style-type"></Li>
                    <Li className="list-style-type"><strong>8. open:</strong> A biblioteca open √© usada para abrir URLs, arquivos ou aplicativos diretamente do backend. No contexto deste projeto, isso pode ser √∫til para facilitar a navega√ß√£o ou abrir relat√≥rios e visualiza√ß√µes de dados ap√≥s a an√°lise.</Li>
                    <Li className="list-style-type"><strong>9. OpenAI:</strong> O pacote openai integra a API de OpenAI ao projeto, permitindo a an√°lise de sentimentos e processamento de linguagem natural (NLP). A integra√ß√£o com a API GPT possibilita que o sistema interprete os dados coletados, categorizando e oferecendo insights baseados no conte√∫do textual.</Li>
                    <Li className="list-style-type"><strong>10. HBS:</strong> (Handlebars) √© um motor de templates utilizado para gerar HTML din√¢mico no servidor.</Li>
                    <Li className="list-style-type"><strong>11. Heroku:</strong> A aplica√ß√£o √© configurada para rodar no <strong>Heroku</strong>, utilizando vari√°veis de ambiente e configura√ß√µes espec√≠ficas para servidores sem interface gr√°fica, como o uso de <strong>Puppeteer</strong> em modo <strong>headless</strong> e com ajustes no sandbox para compatibilidade com Heroku.</Li>
                    <H3>Arquitetura e Organiza√ß√£o do Projeto com as Novas Tecnologias</H3>
                    <P>Com essas tecnologias e bibliotecas, o projeto √© organizado para oferecer um fluxo de coleta, processamento, an√°lise e visualiza√ß√£o dos dados com alto n√≠vel de automa√ß√£o e seguran√ßa:</P>
                    <Li className="list-style-type"><strong>Automa√ß√£o e Stealth com Puppeteer:</strong> A biblioteca <span>puppeteer-extra</span> com o StealthPlugin possibilita uma coleta de dados robusta, burlando alguns mecanismos anti-bot e permitindo uma coleta mais confi√°vel.</Li>
                    <Li className="list-style-type"><strong>Processamento e Gerenciamento de Arquivos:</strong> <span>fs</span>, <span>archiver</span> e <span>unzipper</span> oferecem um ecossistema completo para manipula√ß√£o de arquivos, desde a compacta√ß√£o at√© a extra√ß√£o e leitura, o que √© valioso para manter os dados organizados e facilitar o arquivamento.</Li>
                    <Li className="list-style-type"><strong>API de OpenAI para An√°lise Avan√ßada:</strong> Integrar OpenAI para an√°lise de sentimentos expande as capacidades anal√≠ticas do projeto, aproveitando o processamento de linguagem natural para categorizar sentimentos e detectar tend√™ncias.</Li>
                    <Li className="list-style-type"><strong>Gerenciamento de Vari√°veis de Ambiente com dotenv:</strong></Li>
                    <Li className="list-style-type"><strong></strong> Vari√°veis sens√≠veis, como chaves de API, s√£o tratadas de maneira segura com <span>dotenv</span>, essencial para ambientes de produ√ß√£o.</Li>
                    <Li className="list-style-type"><strong></strong></Li>
                  </Ul>
                  <H3>Conclus√£o</H3>
                  <P>Esse projeto √© uma <strong>API</strong> e <strong>servidor que renderiza p√°ginas est√°tica</strong>, solu√ß√£o completa para a coleta e an√°lise de sentimentos em m√≠dias sociais. A combina√ß√£o de tecnologias ‚Äî desde o Puppeteer para scraping, OpenAI para NLP, e Express para o backend ‚Äî resulta em uma ferramenta robusta para insights de m√≠dia social em tempo real. </P>
                </div>
              </>
            )}
          </MainContent>
        </MainContentLayout>
      </MainLayout>
    </>
  );
};

export default Carousel;