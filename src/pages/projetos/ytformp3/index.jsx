import { useState } from "react";
import Head from "next/head";

import Title from "@/components/common/title";

import { P, H3, H4, Ul, Li } from "@/components/projetos/style";

import { MainLayout, MainContent } from "@/components/layout/mainLayout";
import SideBarLayout from "@/components/layout/sideBarLayout";
import HeaderLayout from "@/components/layout/headerLayout";
import MainContentLayout from "@/components/layout/contentLayout";

const Ytformp3 = () => {
  const [isToggleOpen, setIsToggleOpen] = useState(false);

  return (
    <>
      <Head>
        {/* <!-- Primary Meta Tags --> */}
        <title>YouTube para MP3: Baixe audio com Nosso Conversor R√°pido e Seguro</title>
        <meta name="title" content="YouTube para MP3: Baixe audio com Nosso Conversor R√°pido e Seguro" />
        <meta name="description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />

        {/* <!-- Open Graph / Facebook --> */}
        <meta property="og:site_name" content="https://portfolio-projects-production.up.railway.app" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp3" />
        <meta property="og:title" content="YouTube para MP3: Baixe audio com Nosso Conversor R√°pido e Seguro" />
        <meta property="og:description" content="Conhe√ßa meu portf√≥lio de projetos de desenvolvimento web! Trabalho com tecnologias como ReactJS, NextJS, Node.js e muito mais." />
        <meta property="og:image" content="https://portfolio-projects-production.up.railway.app/ytmp3.jpg" />

        {/* <!-- Twitter --> */}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content="https://portfolio-projects-production.up.railway.app/projetos/ytformp3" />
        <meta property="twitter:title" content="YouTube para MP3: Baixe audio com Nosso Conversor R√°pido e Seguro" />
        <meta property="twitter:description" content="Ol√°! Eu sou Jorge Luiz, desenvolvedor web especializado em frontend com ReactJS, NextJS e backend com Node.js. Explore meus projetos de sites modernos e aplica√ß√µes robustas." />
        <meta property="twitter:image" content="https://portfolio-projects-production.up.railway.app/ytmp3.jpg" />
      </Head>
      <MainLayout>
        <SideBarLayout></SideBarLayout>
        <HeaderLayout></HeaderLayout>
        <MainContentLayout>
          <MainContent>
            <Title className="title-ytformp3" onClick={() => isToggleOpen ? setIsToggleOpen(false) : setIsToggleOpen(true)}>üé• Projeto: Download de √Åudio do YouTube - <span style={{ color: "blue" }}>mais...</span></Title>
            <P>
              <a style={{ fontSize: "24px", fontWeight: "800" }} href="https://yt-download-mp3-frontend.up.railway.app/" target="_blank">üåé Link do Projeto</a>
            </P>
            <H3>Observa√ß√£o importante: para ter acesso backend, precisa ativar ngrok localmente!</H3>
            {isToggleOpen && (
              <>
                <div>
                  <H3>Descri√ß√£o Geral</H3>
                  <P>Este projeto √© uma aplica√ß√£o backend desenvolvida com Node.js e Express, que permite aos usu√°rios baixar o √°udio de v√≠deos do YouTube no formato MP3. Ele √© projetado para oferecer uma experi√™ncia r√°pida e amig√°vel, com suporte a metadados como t√≠tulo e thumbnail do v√≠deo.</P>
                  <H3>üõ†Ô∏è Tecnologias</H3>
                  <P><strong>Frontend:</strong></P>
                  <Ul>
                    <Li><strong>Download de √Åudio:</strong> Transforma v√≠deos do YouTube em arquivos MP3 prontos para download.</Li>
                    <Li><strong>Metadados Inclu√≠dos:</strong> O t√≠tulo do v√≠deo e a imagem da thumbnail s√£o incorporados como cabe√ßalhos personalizados na resposta.</Li>
                    <Li><strong>Valida√ß√£o de URL:</strong> Verifica se a URL fornecida √© v√°lida antes de iniciar o download.</Li>
                    <Li><strong>Filtro de Qualidade:</strong> Seleciona automaticamente o melhor formato de √°udio dispon√≠vel.</Li>
                    <Li><strong>Suporte a Cookies:</strong> Utiliza cookies armazenados localmente para acessar conte√∫dos restritos, se necess√°rio.</Li>
                    <Li><strong>Interface de Carregamento:</strong> Um c√≠rculo animado √© exibido para indicar o progresso do download.</Li>
                  </Ul>
                  <H3>Bibliotecas e Depend√™ncias</H3>
                  <P><strong>Backend:</strong></P>
                  <Ul>
                    <Li><strong>Node.js:</strong> Ambiente de execu√ß√£o para JavaScript no servidor.</Li>
                    <Li><strong>Express:</strong> Framework para cria√ß√£o de APIs robustas e flex√≠veis.</Li>
                    <Li><strong>@distube/ytdl-core:</strong> Biblioteca para manipula√ß√£o e extra√ß√£o de v√≠deos do YouTube.</Li>
                  </Ul>
                  <H4>Configura√ß√£o e Utilit√°rios:</H4>
                  <Ul>
                    <Li><strong>dotenv</strong> Gerenciamento de vari√°veis de ambiente.</Li>
                    <Li><strong>fs:</strong> Manipula√ß√£o de arquivos locais.</Li>
                    <Li><strong>CORS:</strong> Controle de acesso para origens externas.</Li>
                  </Ul>
                  <H4>Estiliza√ß√£o:</H4>
                  <Ul>
                    <Li><strong>HTML e CSS:</strong> Utilizados para criar uma interface simples e responsiva.</Li>
                  </Ul>
                  <P><strong>üöÄ Projeto de Download de √Åudio do YouTube com Frontend e Backend Integrados
                    Desenvolvi um projeto de download de √°udio do YouTube utilizando youtube-dl-exec. Inicialmente, hospedei tanto o frontend quanto o backend no Heroku, mas enfrentei um grande desafio:
                    üî¥ Erro ao baixar o √°udio: "UnrecoverableError: Sign in to confirm you‚Äôre not a bot" ‚Äì mesmo com cookies, o download n√£o funcionava.</strong></P>
                  <P><strong>üí° Solu√ß√£o:
                    Decidi dividir a aplica√ß√£o. O frontend permaneceu no Heroku, e o backend foi executado localmente, utilizando o Ngrok para criar um t√∫nel reverso, permitindo que o frontend acessasse o backend via internet.</strong></P>
                  <P><strong>‚úÖ Resultado:
                    O problema foi solucionado, e agora consigo realizar downloads de √°udio de qualquer v√≠deo, independentemente do tamanho.</strong></P>
                  <P><strong>‚ö†Ô∏è Limita√ß√£o: A vers√£o gratuita do Ngrok oferece um limite de 1TB de transfer√™ncia de dados.

                    Este projeto me desafiou a encontrar alternativas para contornar restri√ß√µes de servidores e autentica√ß√µes, ampliando minha experi√™ncia em deploy e solu√ß√µes criativas em ambientes de hospedagem.</strong></P>
                </div>
              </>
            )}
          </MainContent>
        </MainContentLayout>
      </MainLayout>
    </>
  );
};

export default Ytformp3;